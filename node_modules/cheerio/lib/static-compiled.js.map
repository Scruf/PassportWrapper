{"version":3,"sources":["static.js"],"names":[],"mappings":"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","file":"static-compiled.js","sourcesContent":["/**\n * Module dependencies\n */\n\nvar select = require('css-select'),\n    parse = require('./parse'),\n    serialize = require('dom-serializer'),\n    _ = require('lodash');\n\n/**\n * $.load(str)\n */\n\nexports.load = function(content, options) {\n  var Cheerio = require('./cheerio');\n\n  options = _.defaults(options || {}, Cheerio.prototype.options);\n\n  var root = parse(content, options);\n\n  var initialize = function(selector, context, r, opts) {\n    if (!(this instanceof initialize)) {\n      return new initialize(selector, context, r, opts);\n    }\n    opts = _.defaults(opts || {}, options);\n    return Cheerio.call(this, selector, context, r || root, opts);\n  };\n\n  // Ensure that selections created by the \"loaded\" `initialize` function are\n  // true Cheerio instances.\n  initialize.prototype = Object.create(Cheerio.prototype);\n  initialize.prototype.constructor = initialize;\n\n  // Mimic jQuery's prototype alias for plugin authors.\n  initialize.fn = initialize.prototype;\n\n  // Keep a reference to the top-level scope so we can chain methods that implicitly \n  // resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n  initialize.prototype._originalRoot = root;\n\n  // Add in the static methods\n  _.merge(initialize, exports);\n\n  // Add in the root\n  initialize._root = root;\n  // store options\n  initialize._options = options;\n\n  return initialize;\n};\n\n/*\n* Helper function\n*/\n\nfunction render(that, dom, options) {\n  if (!dom) {\n    if (that._root && that._root.children) {\n      dom = that._root.children;\n    } else {\n      return '';\n    }\n  } else if (typeof dom === 'string') {\n    dom = select(dom, that._root, options);\n  }\n\n  return serialize(dom, options);\n}\n\n/**\n * $.html([selector | dom], [options])\n */\n\nexports.html = function(dom, options) {\n  var Cheerio = require('./cheerio');\n\n  // be flexible about parameters, sometimes we call html(),\n  // with options as only parameter\n  // check dom argument for dom element specific properties\n  // assume there is no 'length' or 'type' properties in the options object\n  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))\n  {\n    options = dom;\n    dom = undefined;\n  }\n\n  // sometimes $.html() used without preloading html\n  // so fallback non existing options to the default ones\n  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.xml([selector | dom])\n */\n\nexports.xml = function(dom) {\n  var options = _.defaults({xmlMode: true}, this._options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.text(dom)\n */\n\nexports.text = function(elems) {\n  if (!elems) return '';\n\n  var ret = '',\n      len = elems.length,\n      elem;\n\n  for (var i = 0; i < len; i++) {\n    elem = elems[i];\n    if (elem.type === 'text') ret += elem.data;\n    else if (elem.children && elem.type !== 'comment') {\n      ret += exports.text(elem.children);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * $.parseHTML(data [, context ] [, keepScripts ])\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n */\nexports.parseHTML = function(data, context, keepScripts) {\n  var parsed;\n\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n\n  parsed = this.load(data);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  // The `children` array is used by Cheerio internally to group elements that\n  // share the same parents. When nodes created through `parseHTML` are\n  // inserted into previously-existing DOM structures, they will be removed\n  // from the `children` array. The results of `parseHTML` should remain\n  // constant across these operations, so a shallow copy should be returned.\n  return parsed.root()[0].children.slice();\n};\n\n/**\n * $.root()\n */\nexports.root = function() {\n  return this(this._root);\n};\n\n/**\n * $.contains()\n */\nexports.contains = function(container, contained) {\n\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  // Step up the descendants, stopping when the root element is reached\n  // (signaled by `.parent` returning a reference to the same object)\n  while (contained && contained !== contained.parent) {\n    contained = contained.parent;\n    if (contained === container) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"]}