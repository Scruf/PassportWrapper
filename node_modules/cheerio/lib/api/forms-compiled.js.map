{"version":3,"sources":["forms.js"],"names":[],"mappings":";;AAEA,IAAI,IAAI,QAAQ,QAAR,CAAJ;IACA,sBAAsB,8BAAtB;IACA,QAAQ,QAAR;;AAEJ,QAAQ,cAAR,GAAyB,YAAW;;AAElC,MAAI,UAAU,KAAK,WAAL,CAFoB;AAGlC,SAAO,KAAK,GAAL,CAAS,YAAW;AACvB,QAAI,OAAO,IAAP,CADmB;AAEvB,QAAI,QAAQ,QAAQ,IAAR,CAAR,CAFmB;AAGvB,QAAI,KAAK,IAAL,KAAc,MAAd,EAAsB;AACxB,aAAO,MAAM,IAAN,CAAW,mBAAX,EAAgC,OAAhC,EAAP,CADwB;KAA1B,MAEO;AACL,aAAO,MAAM,MAAN,CAAa,mBAAb,EAAkC,OAAlC,EAAP,CADK;KAFP;GAHY,CAAT,CAQF,MARE;;AAUD;;KAEE,+CAFF;;KAIE,8CAJF;;AAVC,IAgBH,GAhBG,CAgBC,UAAS,CAAT,EAAY,IAAZ,EAAkB;AACtB,QAAI,QAAQ,QAAQ,IAAR,CAAR,CADkB;AAEtB,QAAI,OAAO,MAAM,IAAN,CAAW,MAAX,CAAP,CAFkB;AAGtB,QAAI,MAAM,MAAM,GAAN,EAAN;;;AAHkB,QAMlB,OAAO,IAAP,EAAa;AACf,aAAO,IAAP,CADe;KAAjB,MAEO;;AAEL,UAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,eAAO,EAAE,GAAF,CAAM,GAAN,EAAW,UAAS,GAAT,EAAc;;;AAG9B,iBAAO,EAAC,MAAM,IAAN,EAAY,OAAO,IAAI,OAAJ,CAAa,KAAb,EAAoB,MAApB,CAAP,EAApB,CAH8B;SAAd,CAAlB;;AADsB,OAAxB,MAOO;AACL,iBAAO,EAAC,MAAM,IAAN,EAAY,OAAO,IAAI,OAAJ,CAAa,KAAb,EAAoB,MAApB,CAAP,EAApB,CADK;SAPP;KAJF;;AANsB,GAAlB,CAhBD,CAsCF,GAtCE,EAAP,CAHkC;CAAX","file":"forms-compiled.js","sourcesContent":["// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar _ = require('lodash'),\n    submittableSelector = 'input,select,textarea,keygen',\n    rCRLF = /\\r?\\n/g;\n\nexports.serializeArray = function() {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function() {\n      var elem = this;\n      var $elem = Cheerio(elem);\n      if (elem.name === 'form') {\n        return $elem.find(submittableSelector).toArray();\n      } else {\n        return $elem.filter(submittableSelector).toArray();\n      }\n    }).filter(\n        // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n        '[name!=\"\"]:not(:disabled)'\n        // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        + ':not(:submit, :button, :image, :reset, :file)'\n        // and are either checked/don't have a checkable state\n        + ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    ).map(function(i, elem) {\n      var $elem = Cheerio(elem);\n      var name = $elem.attr('name');\n      var val = $elem.val();\n\n      // If there is no value set (e.g. `undefined`, `null`), then return nothing\n      if (val == null) {\n        return null;\n      } else {\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(val)) {\n          return _.map(val, function(val) {\n            // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n            //   These can occur inside of `<textarea>'s`\n            return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n          });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        } else {\n          return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n        }\n      }\n    // Convert our result to an array\n    }).get();\n};\n"]}