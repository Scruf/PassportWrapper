{"version":3,"sources":["vm-shim.js"],"names":[],"mappings":"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","file":"vm-shim-compiled.js","sourcesContent":["\"use strict\";\nconst acorn = require(\"acorn\");\nconst findGlobals = require(\"acorn-globals\");\nconst escodegen = require(\"escodegen\");\n\n// We can't use the default browserify vm shim because it doesn't work in a web worker.\n\n// From ES spec table of contents. Also, don't forget the Annex B additions.\n// If someone feels ambitious maybe make this into an npm package.\nconst builtInConsts = [\"Infinity\", \"NaN\", \"undefined\"];\nconst otherBuiltIns = [\"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\",\n  \"encodeURI\", \"encodeURIComponent\", \"Array\", \"ArrayBuffer\", \"Boolean\", \"DataView\", \"Date\", \"Error\", \"EvalError\",\n  \"Float32Array\", \"Float64Array\", \"Function\", \"Int8Array\", \"Int16Array\", \"Int32Array\", \"Map\", \"Number\", \"Object\",\n  \"Proxy\", \"Promise\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"Set\", \"String\", \"Symbol\", \"SyntaxError\", \"TypeError\",\n  \"Uint8Array\", \"Uint8ClampedArray\", \"Uint16Array\", \"Uint32Array\", \"URIError\", \"WeakMap\", \"WeakSet\", \"JSON\", \"Math\",\n  \"Reflect\", \"escape\", \"unescape\"];\n\nexports.createContext = function (sandbox) {\n  Object.defineProperty(sandbox, \"__isVMShimContext\", {\n    value: true,\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n\n  for (const builtIn of builtInConsts) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: false,\n      configurable: false,\n      enumerable: false\n    });\n  }\n\n  for (const builtIn of otherBuiltIns) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: true,\n      configurable: true,\n      enumerable: false\n    });\n  }\n};\n\nexports.isContext = function (sandbox) {\n  return sandbox.__isVMShimContext;\n};\n\nexports.runInContext = function (code, contextifiedSandbox, options) {\n  if (code === \"this\") {\n    // Special case for during window creation.\n    return contextifiedSandbox;\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  const comments = [];\n  const tokens = [];\n  const ast = acorn.parse(code, {\n    ecmaVersion: 6,\n    allowReturnOutsideFunction: true,\n    ranges: true,\n    // collect comments in Esprima's format\n    onComment: comments,\n    // collect token ranges\n    onToken: tokens\n  });\n\n  // make sure we keep comments\n  escodegen.attachComments(ast, comments, tokens);\n\n  const globals = findGlobals(ast);\n  for (let i = 0; i < globals.length; ++i) {\n    if (globals[i].name === \"window\") {\n      continue;\n    }\n\n    const nodes = globals[i].nodes;\n    for (let j = 0; j < nodes.length; ++j) {\n      const type = nodes[j].type;\n      const name = nodes[j].name;\n      nodes[j].type = \"MemberExpression\";\n      nodes[j].property = { name, type };\n      nodes[j].computed = false;\n      nodes[j].object = {\n        name: \"window\",\n        type: \"Identifier\"\n      };\n    }\n  }\n\n  const lastNode = ast.body[ast.body.length - 1];\n  if (lastNode.type === \"ExpressionStatement\") {\n    lastNode.type = \"ReturnStatement\";\n    lastNode.argument = lastNode.expression;\n    delete lastNode.expression;\n  }\n\n  const rewrittenCode = escodegen.generate(ast, { comment: true });\n  const suffix = options.filename !== undefined ? \"\\n//# sourceURL=\" + options.filename : \"\";\n\n  return Function(\"window\", rewrittenCode + suffix).bind(contextifiedSandbox)(contextifiedSandbox);\n};\n"]}