{"version":3,"sources":["domtohtml.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,SAAS,QAAQ,QAAR,CAAT;AACN,MAAM,kBAAkB,QAAQ,mBAAR,CAAlB;AACN,MAAM,YAAY,QAAQ,qBAAR,CAAZ;;AAEN,MAAM,aAAa,IAAI,OAAO,cAAP,CAAsB,eAA1B,CAAb;;AAEN,QAAQ,SAAR,GAAoB,UAAU,QAAV,EAAoB;AACtC,MAAI,MAAM,EAAN,CADkC;AAEtC,OAAK,MAAM,IAAN,IAAc,QAAnB,EAA6B;AAC3B,QAAI,KAAK,QAAL,KAAkB,UAAU,aAAV,EAAyB;AAC7C,aAAO,WAAW,SAAX,CAAqB,IAArB,CAAP,CAD6C;KAA/C,MAEO;AACL,aAAO,WAAW,SAAX,CAAqB,EAAE,YAAY,CAAC,IAAD,CAAZ,EAAvB,CAAP,CADK;KAFP;GADF;AAOA,SAAO,GAAP,CATsC;CAApB","file":"domtohtml-compiled.js","sourcesContent":["\"use strict\";\nconst parse5 = require(\"parse5\");\nconst documentAdapter = require(\"./documentAdapter\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\nconst serializer = new parse5.TreeSerializer(documentAdapter);\n\nexports.domToHtml = function (iterable) {\n  let ret = \"\";\n  for (const node of iterable) {\n    if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      ret += serializer.serialize(node);\n    } else {\n      ret += serializer.serialize({ childNodes: [node] });\n    }\n  }\n  return ret;\n};\n"]}