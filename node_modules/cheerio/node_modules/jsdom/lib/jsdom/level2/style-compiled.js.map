{"version":3,"sources":["style.js"],"names":[],"mappings":"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","file":"style-compiled.js","sourcesContent":["\"use strict\";\nvar resourceLoader = require('../browser/resource-loader'),\n    core = require(\"../level1/core\"),\n    utils = require(\"../utils\"),\n    defineGetter = utils.defineGetter,\n    inheritFrom = utils.inheritFrom,\n    cssom = require(\"cssom\"),\n    cssstyle = require(\"cssstyle\"),\n    resolveHref = require(\"../utils\").resolveHref,\n    assert = require('assert');\n\nconst domSymbolTree = require(\"../living/helpers/internal-constants\").domSymbolTree;\nconst NODE_TYPE = require(\"../living/node-type\");\n\n// What works now:\n// - Accessing the rules defined in individual stylesheets\n// - Modifications to style content attribute are reflected in style property\n// - Modifications to style property are reflected in style content attribute\n// TODO\n// - Modifications to style element's textContent are reflected in sheet property.\n// - Modifications to style element's sheet property are reflected in textContent.\n// - Modifications to link.href property are reflected in sheet property.\n// - Less-used features of link: disabled\n// - Less-used features of style: disabled, scoped, title\n// - CSSOM-View\n//   - getComputedStyle(): requires default stylesheet, cascading, inheritance,\n//     filtering by @media (screen? print?), layout for widths/heights\n// - Load events are not in the specs, but apparently some browsers\n//   implement something. Should onload only fire after all @imports have been\n//   loaded, or only the primary sheet?\n\ncore.StyleSheet = cssom.StyleSheet;\ncore.MediaList = cssom.MediaList;\ncore.CSSStyleSheet = cssom.CSSStyleSheet;\ncore.CSSRule = cssom.CSSRule;\ncore.CSSStyleRule = cssom.CSSStyleRule;\ncore.CSSMediaRule = cssom.CSSMediaRule;\ncore.CSSImportRule = cssom.CSSImportRule;\ncore.CSSStyleDeclaration = cssstyle.CSSStyleDeclaration;\n\n// Relavant specs\n// http://www.w3.org/TR/DOM-Level-2-Style (2000)\n// http://www.w3.org/TR/cssom-view/ (2008)\n// http://dev.w3.org/csswg/cssom/ (2010) Meant to replace DOM Level 2 Style\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/ HTML5, of course\n// http://dev.w3.org/csswg/css-style-attr/  not sure what's new here\n\n// Objects that aren't in cssom library but should be:\n//   CSSRuleList  (cssom just uses array)\n//   CSSFontFaceRule\n//   CSSPageRule\n\n// These rules don't really make sense to implement, so CSSOM draft makes them\n// obsolete.\n//   CSSCharsetRule\n//   CSSUnknownRule\n\n// These objects are considered obsolete by CSSOM draft, although modern\n// browsers implement them.\n//   CSSValue\n//   CSSPrimitiveValue\n//   CSSValueList\n//   RGBColor\n//   Rect\n//   Counter\n\n// http://dev.w3.org/csswg/cssom/#stylesheetlist\nfunction StyleSheetList() {}\n\nStyleSheetList.prototype.__proto__ = Array.prototype;\n\nStyleSheetList.prototype.item = function item(i) {\n  return this[i];\n};\n\ncore.StyleSheetList = StyleSheetList;\n\n// http://dev.w3.org/csswg/cssom/#extensions-to-the-document-interface\ndefineGetter(core.Document.prototype, 'styleSheets', function () {\n  if (!this._styleSheets) {\n    this._styleSheets = new StyleSheetList();\n  }\n\n  // TODO: each style and link element should register its sheet on creation\n  // and remove it on removal.\n  return this._styleSheets;\n});\n\n\n/**\n * @this {core.HTMLLinkElement|core.HTMLStyleElement}\n * @param {string} url\n * @param {cssom.CSSStyleSheet} sheet\n * @see http://dev.w3.org/csswg/cssom/#requirements-on-user-agents-implementing0\n */\nfunction fetchStylesheet(url, sheet) {\n  resourceLoader.load(this, url, function(data) {\n    // TODO: abort if the content-type is not text/css, and the document is\n    // in strict mode\n    url = sheet.href = resourceLoader.resolveResourceUrl(this.ownerDocument, url);\n    evaluateStylesheet.call(this, data, sheet, url);\n  });\n}\n/**\n * @this {core.HTMLLinkElement|core.HTMLStyleElement}\n * @param {string} data\n * @param {cssom.CSSStyleSheet} sheet\n * @param {string} baseUrl\n */\nfunction evaluateStylesheet(data, sheet, baseUrl) {\n  // this is the element\n  var newStyleSheet = cssom.parse(data);\n  var spliceArgs = newStyleSheet.cssRules;\n  spliceArgs.unshift(0, sheet.cssRules.length);\n  Array.prototype.splice.apply(sheet.cssRules, spliceArgs);\n  scanForImportRules.call(this, sheet.cssRules, baseUrl);\n  this.ownerDocument.styleSheets.push(sheet);\n}\n/**\n * @this {core.HTMLLinkElement|core.HTMLStyleElement}\n * @param {cssom.CSSStyleSheet} sheet\n * @param {string} baseUrl\n */\nfunction scanForImportRules(cssRules, baseUrl) {\n  if (!cssRules) return;\n  for (var i = 0; i < cssRules.length; ++i) {\n    if (cssRules[i].cssRules) {\n      // @media rule: keep searching inside it.\n      scanForImportRules.call(this, cssRules[i].cssRules, baseUrl);\n    } else if (cssRules[i].href) {\n      // @import rule: fetch the resource and evaluate it.\n      // See http://dev.w3.org/csswg/cssom/#css-import-rule\n      //     If loading of the style sheet fails its cssRules list is simply\n      //     empty. I.e. an @import rule always has an associated style sheet.\n      fetchStylesheet.call(this, resolveHref(baseUrl, cssRules[i].href), this.sheet);\n    }\n  }\n}\n\nassert.equal(undefined, core.HTMLLinkElement._init);\ncore.HTMLLinkElement._init = function() {\n  this.addEventListener('DOMNodeInsertedIntoDocument', function() {\n    if (!/(?:[ \\t\\n\\r\\f]|^)stylesheet(?:[ \\t\\n\\r\\f]|$)/i.test(this.rel)) {\n      // rel is a space-separated list of tokens, and the original rel types\n      // are case-insensitive.\n      return;\n    }\n    if (this.href) {\n      fetchStylesheet.call(this, this.href, this.sheet);\n    }\n  });\n};\n\nassert.equal(undefined, core.HTMLStyleElement._init);\ncore.HTMLStyleElement._init = function() {\n  //console.log('init style')\n  this.addEventListener('DOMNodeInsertedIntoDocument', function() {\n    //console.log('style inserted')\n    //console.log('sheet: ', this.sheet);\n    if (this.type && this.type !== 'text/css') {\n      //console.log('bad type: ' + this.type)\n      return;\n    }\n\n    let content = '';\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.TEXT_NODE) {\n        content += child.nodeValue;\n      }\n    }\n\n    evaluateStylesheet.call(this, content, this.sheet, this._ownerDocument.URL);\n  });\n};\n\n\n// https://html.spec.whatwg.org/multipage/semantics.html#htmllinkelement:\n// HTMLLinkElement implements LinkStyle\n\n// https://html.spec.whatwg.org/multipage/semantics.html#htmlstyleelement:\n// HTMLStyleElement implements LinkStyle\n\n// from http://dev.w3.org/csswg/cssom/#the-linkstyle-interface\n\n// A future refactoring would be to place _cssStyleSheet on all HTMLLinkElement and HTMLStyleElement instances, in\n// their constructor, initially set to null. Then, successful loading of the stylesheet object would set it to\n// non-null. The getter would just always return the current value. This would make it more correctly be null before\n// loading, and on load failure, and would allow access to _cssStyleSheet instead of the public .sheet API.\n\nfunction getOrCreateSheet() {\n  if (!this._cssStyleSheet) {\n    this._cssStyleSheet = new cssom.CSSStyleSheet();\n  }\n  return this._cssStyleSheet;\n}\n\ndefineGetter(core.HTMLLinkElement.prototype, 'sheet', getOrCreateSheet);\ndefineGetter(core.HTMLStyleElement.prototype, 'sheet', getOrCreateSheet);\n"]}