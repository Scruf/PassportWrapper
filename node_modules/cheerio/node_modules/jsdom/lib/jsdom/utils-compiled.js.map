{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,OAAO,QAAQ,MAAR,CAAP;AACN,MAAM,MAAM,QAAQ,mBAAR,EAA6B,oBAA7B,EAAN;AACN,MAAM,gBAAgB,QAAQ,qCAAR,EAA+C,aAA/C;AACtB,MAAM,uBAAuB,QAAQ,aAAR,EAAuB,YAAvB;;AAE7B,QAAQ,GAAR,GAAc,GAAd;;AAEA,QAAQ,SAAR,GAAoB,UAAU,QAAV,EAAoB;;;;AAItC,MAAI,WAAW,KAAK,OAAL,CAAa,QAAQ,GAAR,EAAb,EAA4B,QAA5B,EAAsC,OAAtC,CAA8C,KAA9C,EAAqD,GAArD,CAAX,CAJkC;AAKtC,MAAI,SAAS,CAAT,MAAgB,GAAhB,EAAqB;AACvB,eAAW,MAAM,QAAN,CADY;GAAzB;;;AALsC,SAU/B,YAAY,UAAU,QAAV,CAAZ,CAV+B;CAApB;;;;;;;;;;;AAsBpB,QAAQ,YAAR,GAAuB,SAAS,YAAT,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD;AACvE,QAAM,aAAa,OAAO,wBAAP,CAAgC,MAAhC,EAAwC,QAAxC,KAAqD;AACtE,kBAAc,IAAd;AACA,gBAAY,IAAZ;GAFiB,CADoD;;AAMvE,aAAW,GAAX,GAAiB,QAAjB,CANuE;;AAQvE,SAAO,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC,UAAxC,EARuE;CAAlD;;;;;;;;;;;AAoBvB,QAAQ,YAAR,GAAuB,SAAS,YAAT,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD;AACvE,QAAM,aAAa,OAAO,wBAAP,CAAgC,MAAhC,EAAwC,QAAxC,KAAqD;AACtE,kBAAc,IAAd;AACA,gBAAY,IAAZ;GAFiB,CADoD;;AAMvE,aAAW,GAAX,GAAiB,QAAjB,CANuE;;AAQvE,SAAO,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC,UAAxC,EARuE;CAAlD;;;;;;;;;;AAmBvB,QAAQ,UAAR,GAAqB,SAAS,UAAT,CAAoB,SAApB,EAA+B,UAA/B,EAA2C;AAC9D,eAAa,cAAc,EAAd,CADiD;;AAG9D,QAAM,cAAc,EAAd,CAHwD;AAI9D,OAAK,MAAM,IAAN,IAAc,OAAO,mBAAP,CAA2B,UAA3B,CAAnB,EAA2D;AACzD,gBAAY,IAAZ,IAAoB,OAAO,wBAAP,CAAgC,UAAhC,EAA4C,IAA5C,CAApB,CADyD;GAA3D;AAGA,OAAK,MAAM,MAAN,IAAgB,OAAO,qBAAP,CAA6B,UAA7B,CAArB,EAA+D;AAC7D,gBAAY,MAAZ,IAAsB,OAAO,wBAAP,CAAgC,UAAhC,EAA4C,MAA5C,CAAtB,CAD6D;GAA/D;;AAIA,SAAO,OAAO,MAAP,CAAc,SAAd,EAAyB,WAAzB,CAAP,CAX8D;CAA3C;;;;;;;;;;;AAuBrB,QAAQ,WAAR,GAAsB,SAAS,WAAT,CAAqB,UAArB,EAAiC,QAAjC,EAA2C,UAA3C,EAAuD;AAC3E,eAAa,cAAc,EAAd,CAD8D;;AAG3E,SAAO,cAAP,CAAsB,UAAtB,EAAkC,aAAlC,EAAiD;AAC/C,WAAO,QAAP;AACA,cAAU,IAAV;AACA,kBAAc,IAAd;GAHF,EAH2E;;AAS3E,WAAS,SAAT,GAAqB,QAAQ,UAAR,CAAmB,WAAW,SAAX,EAAsB,UAAzC,CAArB,CAT2E;CAAvD;;;;;;;;;AAmBtB,QAAQ,MAAR,GAAiB,SAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAxB,EAAoC;AACnD,OAAK,MAAM,IAAN,IAAc,OAAO,mBAAP,CAA2B,UAA3B,CAAnB,EAA2D;AACzD,UAAM,WAAW,OAAO,wBAAP,CAAgC,UAAhC,EAA4C,IAA5C,CAAX,CADmD;AAEzD,WAAO,cAAP,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC,QAApC,EAFyD;GAA3D;CADe;;;;;;;;AAajB,QAAQ,YAAR,GAAuB,SAAS,YAAT,CAAsB,WAAtB,EAAmC,WAAnC,EAAgD;AACrE,OAAK,MAAM,QAAN,IAAkB,WAAvB,EAAoC;AAClC,UAAM,QAAQ,YAAY,QAAZ,CAAR,CAD4B;AAElC,gBAAY,WAAZ,EAAyB,QAAzB,EAAmC,KAAnC,EAFkC;AAGlC,gBAAY,YAAY,SAAZ,EAAuB,QAAnC,EAA6C,KAA7C,EAHkC;GAApC;CADqB;;AAQvB,SAAS,WAAT,CAAqB,MAArB,EAA6B,QAA7B,EAAuC,KAAvC,EAA8C;AAC5C,SAAO,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;AACtC,kBAAc,KAAd;AACA,gBAAY,IAAZ;AACA,cAAU,KAAV;AACA,SAJsC;GAAxC,EAD4C;CAA9C;;AASA,IAAI,0BAA0B,CAA1B;;;;;;;AAOJ,QAAQ,YAAR,GAAuB,SAAS,YAAT,CAAsB,EAAtB,EAA0B;;AAE/C,MAAI,GAAG,MAAH,GAAY,CAAZ,EAAe;AACjB,WAAO,EAAP,CADiB;GAAnB;;AAIA,QAAM,OAAO,yBAAP,CANyC;;AAQ/C,SAAO,YAAY;AACjB,QAAI,CAAC,KAAK,gBAAL,EAAuB;AAC1B,aAAO,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAP,CAD0B;KAA5B;;AAIA,QAAI,CAAC,KAAK,gBAAL,CAAsB,IAAtB,CAAD,EAA8B;AAChC,WAAK,gBAAL,CAAsB,IAAtB,IAA8B,OAAO,MAAP,CAAc,IAAd,CAA9B,CADgC;KAAlC;;AAIA,QAAI,GAAJ,CATiB;AAUjB,QAAI,UAAU,MAAV,KAAqB,CAArB,IAA0B,OAAO,UAAU,CAAV,CAAP,KAAwB,QAAxB,EAAkC;AAC9D,YAAM,UAAU,CAAV,CAAN,CAD8D;KAAhE,MAEO,IAAI,UAAU,MAAV,KAAqB,CAArB,IAA0B,OAAO,UAAU,CAAV,CAAP,KAAwB,QAAxB,IAAoC,OAAO,UAAU,CAAV,CAAP,KAAwB,QAAxB,EAAkC;AACzG,YAAM,UAAU,CAAV,IAAe,IAAf,GAAsB,UAAU,CAAV,CAAtB,CADmG;KAApG,MAEA;AACL,aAAO,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAP,CADK;KAFA;;AAMP,QAAI,EAAE,OAAO,KAAK,gBAAL,CAAsB,IAAtB,CAAP,CAAF,EAAuC;AACzC,WAAK,gBAAL,CAAsB,IAAtB,EAA4B,GAA5B,IAAmC,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAnC,CADyC;KAA3C;AAGA,WAAO,KAAK,gBAAL,CAAsB,IAAtB,EAA4B,GAA5B,CAAP,CArBiB;GAAZ,CARwC;CAA1B;;AAiCvB,QAAQ,WAAR,GAAsB,SAAS,WAAT,CAAqB,OAArB,EAA8B,IAA9B,EAAoC;AACxD,MAAI;AACF,WAAO,IAAI,GAAJ,CAAQ,IAAR,EAAc,OAAd,EAAuB,IAAvB,CADL;GAAJ,CAEE,OAAO,CAAP,EAAU;;;;AAIV,WAAO,IAAP,CAJU;GAAV;CAHkB;;AAWtB,QAAQ,MAAR,GAAiB,UAAU,MAAV,EAAkB,MAAlB,EAA0B,SAA1B,EAAqC;AACpD,WAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,WAAO,SAAS,MAAT,KAAoB,CAAC,MAAD,IAAW,OAAO,IAAP,CAAX,CAApB,CADe;GAAxB;AAGA,SAAO,MAAM;AACX,QAAI,cAAc,KAAd,EAAqB;;AACvB,aAAO,cAAc,WAAd,CAA0B,MAA1B,EAAkC,EAAE,QAAQ,QAAR,EAApC,CAAP,CADuB;KAAzB;;AAIA,WAAO,cAAc,eAAd,CAA8B,MAA9B,EAAsC,EAAE,MAAF,EAAtC,CAAP,CALW;GAAN,CAJ6C;CAArC;;AAajB,SAAS,kBAAT,CAA4B,GAA5B,EAAiC;AAC/B,MAAI;;AAEF,QAAI,GAAJ,CAAQ,GAAR;;;;AAFE,WAMK,IAAP,CANE;GAAJ,CAOE,OAAO,CAAP,EAAU;AACV,WAAO,KAAP,CADU;GAAV;CARJ;;AAaA,QAAQ,mBAAR,GAA8B,UAAU,GAAV,EAAe;AAC3C,SAAO,QAAQ,GAAR,IAAe,QAAQ,GAAR,IAAe,mBAAmB,GAAnB,CAA9B,CADoC;CAAf;;AAI9B,QAAQ,qBAAR,GAAgC,WAAW,KAAX,EAAkB,MAAlB,EAA0B;AACxD,WAAS;AACP,UAAM,cAAc,MAAM,IAAN,EAAd,CADC;AAEP,UAAM,eAAe,OAAO,IAAP,EAAf,CAFC;;AAIP,QAAI,YAAY,IAAZ,IAAoB,aAAa,IAAb,EAAmB;AACzC,aADyC;KAA3C;;AAIA,UAAM,CACJ,YAAY,IAAZ,GAAmB,IAAnB,GAA0B,YAAY,KAAZ,EAC1B,aAAa,IAAb,GAAoB,IAApB,GAA2B,aAAa,KAAb,CAF7B,CARO;GAAT;CAD8B;;AAgBhC,QAAQ,eAAR,GAA0B,UAAU,CAAV,EAAa,CAAb,EAAgB;AACxC,QAAM,UAAU,cAAc,mBAAd,CAAkC,CAAlC,EAAqC,CAArC,CAAV,CADkC;;AAGxC,MAAI,UAAU,qBAAqB,SAArB,EAAgC;;AAC5C,WAAO,CAAP,CAD4C;GAA9C;;AAIA,MAAI,UAAU,qBAAqB,SAArB,EAAgC;AAC5C,WAAO,CAAC,CAAD,CADqC;GAA9C;;;AAPwC,SAYjC,CAAP,CAZwC;CAAhB;;AAe1B,QAAQ,oBAAR,GAA+B,UAAU,SAAV,EAAqB;AAClD,MAAI,MAAM,CAAC,CAAD,CADwC;AAElD,QAAM,OAAO,OAAO,IAAP,CAAY,SAAZ,CAAP,CAF4C;AAGlD,QAAM,kBAAkB,KAAK,MAAL,GAAc,CAAd;;;;;;AAH0B,MAS9C,mBAAmB,KAAK,eAAL,CAAnB,EAA0C;;;AAE5C,WAAO,KAAK,MAAL,CAFqC;GAA9C;;AAKA,OAAK,IAAI,IAAI,eAAJ,EAAqB,KAAK,CAAL,EAAQ,EAAE,CAAF,EAAK;AACzC,UAAM,WAAW,OAAO,KAAK,CAAL,CAAP,CAAX,CADmC;;AAGzC,QAAI,CAAC,OAAO,KAAP,CAAa,QAAb,CAAD,IAA2B,WAAW,GAAX,EAAgB;AAC7C,YAAM,QAAN,CAD6C;KAA/C;GAHF;AAOA,SAAO,MAAM,CAAN,CArB2C;CAArB;;AAwB/B,MAAM,eAAe,2EAAf;;AAEN,QAAQ,YAAR,GAAuB,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AAChD,QAAM,WAAW,IAAI,KAAJ,CAAU,iCAAV,CAAX,CAD0C;AAEhD,MAAI,MAAJ,CAFgD;AAGhD,MAAI,SAAS,CAAT,MAAgB,QAAhB,EAA0B;AAC5B,QAAI,SAAS,CAAT,KAAe,CAAC,aAAa,IAAb,CAAkB,SAAS,CAAT,CAAlB,CAAD,EAAiC;AAClD,YAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN,CADkD;KAApD;AAGA,aAAS,IAAI,MAAJ,CAAW,SAAS,CAAT,CAAX,EAAwB,QAAxB,CAAT,CAJ4B;GAA9B,MAKO;AACL,aAAS,IAAI,MAAJ,CAAW,SAAS,CAAT,CAAX,CAAT,CADK;GALP;AAQA,SAAO,EAAE,MAAF,EAAU,MAAM,SAAS,CAAT,CAAN,EAAjB,CAXgD;CAA3B","file":"utils-compiled.js","sourcesContent":["\"use strict\";\nconst path = require(\"path\");\nconst URL = require(\"whatwg-url-compat\").createURLConstructor();\nconst domSymbolTree = require(\"./living/helpers/internal-constants\").domSymbolTree;\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nexports.URL = URL;\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\n * Define a setter on an object\n *\n * This method replaces any existing setter but leaves getters in place.\n *\n * - `object` {Object} the object to define the setter on\n * - `property` {String} the name of the setter\n * - `setterFn` {Function} the setter\n */\nexports.defineSetter = function defineSetter(object, property, setterFn) {\n  const descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n\n  descriptor.set = setterFn;\n\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  const descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n\n  descriptor.get = getterFn;\n\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Create an object with the given prototype\n *\n * Optionally augment the created object.\n *\n * - `prototype` {Object} the created object's prototype\n * - `[properties]` {Object} properties to attach to the created object\n */\nexports.createFrom = function createFrom(prototype, properties) {\n  properties = properties || {};\n\n  const descriptors = {};\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    descriptors[name] = Object.getOwnPropertyDescriptor(properties, name);\n  }\n  for (const symbol of Object.getOwnPropertySymbols(properties)) {\n    descriptors[symbol] = Object.getOwnPropertyDescriptor(properties, symbol);\n  }\n\n  return Object.create(prototype, descriptors);\n};\n\n/**\n * Create an inheritance relationship between two classes\n *\n * Optionally augment the inherited prototype.\n *\n * - `Superclass` {Function} the inherited class\n * - `Subclass` {Function} the inheriting class\n * - `[properties]` {Object} properties to attach to the inherited prototype\n */\nexports.inheritFrom = function inheritFrom(Superclass, Subclass, properties) {\n  properties = properties || {};\n\n  Object.defineProperty(properties, \"constructor\", {\n    value: Subclass,\n    writable: true,\n    configurable: true\n  });\n\n  Subclass.prototype = exports.createFrom(Superclass.prototype, properties);\n};\n\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\n\nlet memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  const type = memoizeQueryTypeCounter++;\n\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    let key;\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\n\nexports.resolveHref = function resolveHref(baseUrl, href) {\n  try {\n    return new URL(href, baseUrl).href;\n  } catch (e) {\n    // can't throw since this utility is basically used everywhere\n    // do what the spec says regarding anchor tags: just don't parse it\n    // https://url.spec.whatwg.org/#dom-urlutils-href\n    return href;\n  }\n};\n\nexports.mapper = function (parent, filter, recursive) {\n  function skipRoot(node) {\n    return node !== parent && (!filter || filter(node));\n  }\n  return () => {\n    if (recursive !== false) { // default is not recursive\n      return domSymbolTree.treeToArray(parent, { filter: skipRoot });\n    }\n\n    return domSymbolTree.childrenToArray(parent, { filter });\n  };\n};\n\nfunction isValidAbsoluteURL(str) {\n  try {\n    /* eslint-disable no-new */\n    new URL(str);\n    /* eslint-enable no-new */\n\n    // If we can parse it, it's a valid absolute URL.\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n\n    yield [\n      firstResult.done ? null : firstResult.value,\n      secondResult.done ? null : secondResult.value\n    ];\n  }\n};\n\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) { // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\nexports.lengthFromProperties = function (arrayLike) {\n  let max = -1;\n  const keys = Object.keys(arrayLike);\n  const highestKeyIndex = keys.length - 1;\n\n  // Abuses a v8 implementation detail for a very fast case\n  // (if this implementation detail changes, this method will still\n  //  return correct results)\n  /* eslint-disable eqeqeq */\n  if (highestKeyIndex == keys[highestKeyIndex]) { // not ===\n    /* eslint-enable eqeqeq */\n    return keys.length;\n  }\n\n  for (let i = highestKeyIndex; i >= 0; --i) {\n    const asNumber = Number(keys[i]);\n\n    if (!Number.isNaN(asNumber) && asNumber > max) {\n      max = asNumber;\n    }\n  }\n  return max + 1;\n};\n\nconst base64Regexp = /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i;\n\nexports.parseDataUrl = function parseDataUrl(url) {\n  const urlParts = url.match(/^data:(.+?)(?:;(base64))?,(.*)$/);\n  let buffer;\n  if (urlParts[2] === \"base64\") {\n    if (urlParts[3] && !base64Regexp.test(urlParts[3])) {\n      throw new Error(\"Not a base64 string\");\n    }\n    buffer = new Buffer(urlParts[3], \"base64\");\n  } else {\n    buffer = new Buffer(urlParts[3]);\n  }\n  return { buffer, type: urlParts[1] };\n};\n"]}