{"version":3,"sources":["DOMException.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,cAAc,QAAQ,UAAR,EAAoB,WAApB;AACpB,MAAM,eAAe,QAAQ,UAAR,EAAoB,YAApB;AACrB,MAAM,QAAQ,QAAQ,4BAAR,CAAR;;;AAGN,MAAM,iBAAiB,OAAO,IAAP,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,QAAQ,qBAAqB,MAAM,IAAN,CAArB,CAAnD;;AAEN,MAAM,eAAe,OAAO,MAAP,CAAc,IAAd,CAAf;AACN,KAAK,MAAM,IAAN,IAAc,cAAnB,EAAmC;AACjC,eAAa,MAAM,IAAN,EAAY,eAAZ,CAAb,GAA4C,IAA5C,CADiC;CAAnC;;AAIA,OAAO,OAAP,GAAiB,YAAjB;;;;AAIA,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AACnC,QAAM,OAAO,aAAa,IAAb,CAAP,CAD6B;;AAGnC,MAAI,YAAY,SAAZ,EAAuB;AACzB,cAAU,MAAM,IAAN,EAAY,WAAZ,CADe;GAA3B;AAGA,QAAM,IAAN,CAAW,IAAX,EAAiB,OAAjB,EANmC;;AAQnC,SAAO,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC,EAAE,OAAO,IAAP,EAAa,UAAU,IAAV,EAAgB,cAAc,IAAd,EAAoB,YAAY,KAAZ,EAAvF,EARmC;AASnC,SAAO,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC,EAAE,OAAO,IAAP,EAAa,UAAU,IAAV,EAAgB,cAAc,IAAd,EAAoB,YAAY,KAAZ,EAAvF,EATmC;;AAWnC,MAAI,MAAM,iBAAN,EAAyB;AAC3B,UAAM,iBAAN,CAAwB,IAAxB,EAA8B,YAA9B,EAD2B;GAA7B;CAXF;;AAgBA,YAAY,KAAZ,EAAmB,YAAnB;;AAEA,MAAM,YAAY,OAAO,MAAP,CAAc,IAAd,CAAZ;AACN,KAAK,MAAM,IAAN,IAAc,cAAnB,EAAmC;AACjC,YAAU,MAAM,IAAN,EAAY,cAAZ,CAAV,GAAwC,MAAM,IAAN,EAAY,eAAZ,CADP;CAAnC;;AAIA,aAAa,YAAb,EAA2B,SAA3B","file":"DOMException-compiled.js","sourcesContent":["\"use strict\";\nconst inheritFrom = require(\"../utils\").inheritFrom;\nconst addConstants = require(\"../utils\").addConstants;\nconst table = require(\"./dom-exception-table.json\"); // https://heycam.github.io/webidl/#idl-DOMException-error-names\n\n// Precompute some stuff. Mostly unnecessary once we take care of the TODO below.\nconst namesWithCodes = Object.keys(table).filter(name => \"legacyCodeValue\" in table[name]);\n\nconst codesToNames = Object.create(null);\nfor (const name of namesWithCodes) {\n  codesToNames[table[name].legacyCodeValue] = name;\n}\n\nmodule.exports = DOMException;\n\n// TODO: update constructor signature to match WebIDL spec\n// See also https://github.com/heycam/webidl/pull/22 which isn't merged as of yet\nfunction DOMException(code, message) {\n  const name = codesToNames[code];\n\n  if (message === undefined) {\n    message = table[name].description;\n  }\n  Error.call(this, message);\n\n  Object.defineProperty(this, \"name\", { value: name, writable: true, configurable: true, enumerable: false });\n  Object.defineProperty(this, \"code\", { value: code, writable: true, configurable: true, enumerable: false });\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, DOMException);\n  }\n}\n\ninheritFrom(Error, DOMException);\n\nconst constants = Object.create(null);\nfor (const name of namesWithCodes) {\n  constants[table[name].legacyCodeName] = table[name].legacyCodeValue;\n}\n\naddConstants(DOMException, constants);\n"]}