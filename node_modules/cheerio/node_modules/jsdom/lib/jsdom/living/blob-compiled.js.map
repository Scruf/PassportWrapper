{"version":3,"sources":["blob.js"],"names":[],"mappings":"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","file":"blob-compiled.js","sourcesContent":["\"use strict\";\n\nconst blobSymbols = require(\"./blob-symbols\");\n\nclass Blob {\n  constructor() {\n    if (!(this instanceof Blob)) {\n      throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n    }\n    const parts = arguments[0];\n    const properties = arguments[1];\n    if (arguments.length > 0) {\n      if (!parts || typeof parts !== \"object\" || parts instanceof Date || parts instanceof RegExp) {\n        throw new TypeError(\"Blob parts must be objects that are not Dates or RegExps\");\n      }\n    }\n\n    const buffers = [];\n\n    if (parts) {\n      const l = Number(parts.length);\n      for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        let buffer;\n        if (part instanceof ArrayBuffer) {\n          buffer = new Buffer(new Uint8Array(part));\n        } else if (part instanceof Blob) {\n          buffer = part[blobSymbols.buffer];\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = new Buffer(new Uint8Array(part.buffer, part.byteOffset, part.byteLength));\n        } else {\n          buffer = new Buffer(typeof part === \"string\" ? part : String(part));\n        }\n        buffers.push(buffer);\n      }\n    }\n\n    this[blobSymbols.buffer] = Buffer.concat(buffers);\n\n    this[blobSymbols.type] = properties && properties.type ? String(properties.type).toLowerCase() : \"\";\n    if (!this[blobSymbols.type].match(/^ *[a-z0-9-]+(?:\\/[a-z0-9-]+)? *(; *charset *= *[a-z0-9-]+ *)?$/)) {\n      this[blobSymbols.type] = \"\";\n    }\n    this[blobSymbols.lastModified] = properties && properties.lastModified ? properties.lastModified : null;\n    this[blobSymbols.closed] = false;\n  }\n  get size() {\n    return this[blobSymbols.buffer].length;\n  }\n  get type() {\n    return this[blobSymbols.type];\n  }\n  get lastModified() {\n    return this[blobSymbols.lastModified];\n  }\n  slice() {\n    const buffer = this[blobSymbols.buffer];\n    const slicedBuffer = buffer.slice(\n      arguments[0] || 0,\n      arguments[1] || this.size\n    );\n    const blob = new Blob([], { type: arguments[2] || this.type });\n    blob[blobSymbols.buffer] = slicedBuffer;\n    return blob;\n  }\n  close() {\n    this[blobSymbols.closed] = true;\n  }\n  toString() {\n    return \"[object Blob]\";\n  }\n}\n\nmodule.exports = function (core) {\n  core.Blob = Blob;\n};\n"]}