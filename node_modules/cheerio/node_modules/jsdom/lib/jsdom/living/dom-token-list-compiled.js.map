{"version":3,"sources":["dom-token-list.js"],"names":[],"mappings":"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","file":"dom-token-list-compiled.js","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"../web-idl/DOMException\");\nconst orderedSetParser = require(\"./helpers/ordered-set-parser\");\n\n// https://dom.spec.whatwg.org/#domtokenlist\n\nconst INTERNAL = Symbol(\"DOMTokenList internal\");\n\nclass DOMTokenList {\n  constructor() {\n    throw new TypeError(\"Illegal constructor\");\n  }\n\n  item(index) {\n    const length = this.length;\n    return length <= index || index < 0 ? null : this[index];\n  }\n\n  contains(token) {\n    token = String(token);\n\n    validateToken(token);\n    return indexOf(this, token) !== -1;\n  }\n\n  add(/* tokens... */) {\n    for (let i = 0; i < arguments.length; i++) {\n      const token = String(arguments[i]);\n      validateToken(token);\n\n      if (indexOf(this, token) === -1) {\n        push(this, token);\n      }\n    }\n    update(this);\n  }\n\n  remove(/* tokens... */) {\n    for (let i = 0; i < arguments.length; i++) {\n      const token = String(arguments[i]);\n      validateToken(token);\n\n      const index = indexOf(this, token);\n      if (index !== -1) {\n        spliceLite(this, index, 1);\n      }\n    }\n    update(this);\n  }\n\n  // if force is true, this behaves like add\n  // if force is false, this behaves like remove\n  // if force is undefined, this behaves as one would expect toggle to\n  // always returns whether classList contains token after toggling\n  toggle(token, force) {\n    token = String(token);\n    force = force === undefined ? undefined : Boolean(force);\n\n    validateToken(token);\n\n    const index = indexOf(this, token);\n\n    if (index !== -1) {\n      if (force === false || force === undefined) {\n        spliceLite(this, index, 1);\n        update(this);\n        return false;\n      }\n\n      return true;\n    }\n\n    if (force === false) {\n      return false;\n    }\n\n    push(this, token);\n    update(this);\n    return true;\n  }\n\n  get length() {\n    return this[INTERNAL].tokens.length;\n  }\n\n  toString() {\n    return this[INTERNAL].tokens.join(\" \");\n  }\n}\n\nfunction validateToken(token) {\n  if (token === \"\") {\n    throw new DOMException(DOMException.SYNTAX_ERR, \"The token provided must not be empty.\");\n  }\n\n  if (/\\s/.test(token)) {\n    const whitespaceMsg = \"The token provided contains HTML space characters, which are not valid in tokens.\";\n    throw new DOMException(DOMException.INVALID_CHARACTER_ERR, whitespaceMsg);\n  }\n}\n\nfunction update(list) {\n  const attribute = list[INTERNAL].attribute;\n  if (attribute !== undefined) {\n    list[INTERNAL].element.setAttribute(attribute, list.toString());\n  }\n}\n\n// calls indexOf on internal array\nfunction indexOf(dtl, token) {\n  return dtl[INTERNAL].tokens.indexOf(token);\n}\n\n// calls push on internal array, then manually adds indexed property to dtl\nfunction push(dtl, token) {\n  const len = dtl[INTERNAL].tokens.push(token);\n  dtl[len - 1] = token;\n\n  return len;\n}\n\n// calls splice on internal array then rewrites indexed properties of dtl\n// does not allow items to be added, only removed, so splice-lite\nfunction spliceLite(dtl, start, deleteCount) {\n  const tokens = dtl[INTERNAL].tokens;\n  const removedTokens = tokens.splice(start, deleteCount);\n\n  // remove indexed properties from list\n  const re = /^\\d+$/;\n\n  for (const prop in dtl) {\n    if (re.test(prop)) {\n      delete dtl[prop];\n    }\n  }\n\n  // copy indexed properties from internal array\n  const len = tokens.length;\n\n  for (let i = 0; i < len; i++) {\n    dtl[i] = tokens[i];\n  }\n\n  return removedTokens;\n}\n\nexports.DOMTokenList = DOMTokenList;\n\n// set dom token list without running update steps\nexports.reset = function resetDOMTokenList(list, value) {\n  const tokens = list[INTERNAL].tokens;\n\n  spliceLite(list, 0, tokens.length);\n  value = (value || \"\").trim();\n\n  if (value !== \"\") {\n    for (const token of orderedSetParser(value)) {\n      push(list, token);\n    }\n  }\n};\n\nexports.create = function createDOMTokenList(element, attribute) {\n  const list = Object.create(DOMTokenList.prototype);\n\n  list[INTERNAL] = {\n    element,\n    attribute,\n    tokens: []\n  };\n\n  exports.reset(list, element.getAttribute(attribute));\n\n  return list;\n};\n\nexports.contains = function domTokenListContains(list, token, options) {\n  const caseInsensitive = options && options.caseInsensitive;\n\n  if (!caseInsensitive) {\n    return indexOf(list, token) !== -1;\n  }\n\n  const tokens = list[INTERNAL].tokens;\n  const lowerToken = token.toLowerCase();\n  for (let i = 0; i < tokens.length; ++i) {\n    if (tokens[i].toLowerCase() === lowerToken) {\n      return true;\n    }\n  }\n  return false;\n};\n"]}