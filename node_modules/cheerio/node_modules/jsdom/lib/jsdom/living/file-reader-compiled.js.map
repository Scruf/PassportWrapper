{"version":3,"sources":["file-reader.js"],"names":[],"mappings":"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","file":"file-reader-compiled.js","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"../web-idl/DOMException\");\nconst EventTarget = require(\"./generated/EventTarget\");\nconst addConstants = require(\"../utils\").addConstants;\nconst blobSymbols = require(\"./blob-symbols\");\n\nfunction FileReaderEventTarget() {\n  if (!(this instanceof FileReaderEventTarget)) {\n    throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n  }\n  EventTarget.setup(this);\n}\n\nFileReaderEventTarget.prototype = Object.create(EventTarget.interface.prototype);\n\nmodule.exports = function createFileReader(window) {\n  const ProgressEvent = window.ProgressEvent;\n\n  class FileReader extends FileReaderEventTarget {\n    constructor() {\n      super();\n      this.error = null;\n      this.readyState = FileReader.EMPTY;\n      this.result = null;\n      this.onloadstart = null;\n      this.onprogress = null;\n      this.onload = null;\n      this.onabort = null;\n      this.onerror = null;\n      this.onloadend = null;\n    }\n    readAsArrayBuffer(file) {\n      readFile(this, file, \"buffer\");\n    }\n    readAsBinaryString(file) {\n      readFile(this, file, \"binary\");\n    }\n    readAsDataURL(file) {\n      readFile(this, file, \"dataUrl\");\n    }\n    readAsText(file, encoding) {\n      readFile(this, file, \"text\", encoding);\n    }\n    abort() {\n      if (this.readyState === this.DONE || this.readyState === this.EMPTY) {\n        this.result = null;\n        return;\n      }\n      if (this.readyState === this.LOADING) {\n        this.readyState = this.DONE;\n      }\n      this.dispatchEvent(new ProgressEvent(\"abort\"));\n      this.dispatchEvent(new ProgressEvent(\"loadend\"));\n    }\n\n    get _ownerDocument() {\n      return window.document;\n    }\n  }\n\n  addConstants(FileReader, {\n    EMPTY: 0,\n    LOADING: 1,\n    DONE: 2\n  });\n\n  function readFile(self, file, format, encoding) {\n    if (self.readyState === self.LOADING) {\n      throw new DOMException(DOMException.INVALID_STATE_ERR);\n    }\n    if (file[blobSymbols.closed]) {\n      self.error = new DOMException(DOMException.INVALID_STATE_ERR);\n      self.dispatchEvent(new ProgressEvent(\"error\"));\n    }\n\n    self.readyState = self.LOADING;\n    self.dispatchEvent(new ProgressEvent(\"loadstart\"));\n\n    process.nextTick(() => {\n      let data = file[blobSymbols.buffer];\n      if (!data) {\n        data = new Buffer(\"\");\n      }\n      self.dispatchEvent(new ProgressEvent(\"progress\", {\n        lengthComputable: !isNaN(file.size),\n        total: file.size,\n        loaded: data.length\n      }));\n\n      process.nextTick(() => {\n        self.readyState = self.DONE;\n        switch (format) {\n          default:\n          case \"buffer\":\n            const ab = new ArrayBuffer(data.length);\n            const view = new Uint8Array(ab);\n            for (let i = 0; i < data.length; ++i) {\n              view[i] = data[i];\n            }\n            self.result = ab;\n            break;\n          case \"binary\":\n            self.result = data.toString(\"binary\");\n            break;\n          case \"dataUrl\":\n            let dataUrl = \"data:\";\n            if (file.type) {\n              dataUrl += file.type + \";\";\n            }\n            if (/text/i.test(file.type)) {\n              dataUrl += \"charset=utf-8,\";\n              dataUrl += data.toString(\"utf8\");\n            } else {\n              dataUrl += \"base64,\";\n              dataUrl += data.toString(\"base64\");\n            }\n            self.result = dataUrl;\n            break;\n          case \"text\":\n            if (encoding) {\n              encoding = encoding.toLowerCase();\n              if (encoding === \"utf-16\" || encoding === \"utf16\") {\n                encoding = \"utf-16le\";\n              }\n            } else {\n              encoding = \"utf8\";\n            }\n            self.result = data.toString(encoding);\n            break;\n        }\n\n        self.dispatchEvent(new ProgressEvent(\"load\"));\n\n        process.nextTick(() => {\n          if (self.readyState !== self.LOADING) {\n            self.dispatchEvent(new ProgressEvent(\"loadend\"));\n          }\n        });\n      });\n    });\n  }\n\n  return FileReader;\n};\n"]}