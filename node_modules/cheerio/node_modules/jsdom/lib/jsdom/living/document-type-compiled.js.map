{"version":3,"sources":["document-type.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,YAAY,QAAQ,qBAAR,CAAZ;;AAEN,MAAM,WAAW,OAAO,6BAAP,CAAX;;AAEN,OAAO,OAAP,GAAiB,QAAQ;AACvB,OAAK,YAAL,GAAoB,MAAM,YAAN,SAA2B,KAAK,IAAL,CAAU;AACvD,gBAAY,MAAZ,EAAoB,aAApB,EAAmC,IAAnC,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D;AAC3D,UAAI,WAAW,QAAX,EAAqB;AACvB,cAAM,IAAI,SAAJ,CAAc,qBAAd,CAAN,CADuB;OAAzB;;AAIA,YAAM,aAAN,EAL2D;AAM3D,WAAK,QAAL,IAAiB,EAAE,IAAF,EAAQ,QAAR,EAAkB,QAAlB,EAAjB,CAN2D;KAA7D;;AASA,QAAI,IAAJ,GAAW;AACT,aAAO,KAAK,QAAL,EAAe,IAAf,CADE;KAAX;AAGA,QAAI,QAAJ,GAAe;AACb,aAAO,KAAK,QAAL,EAAe,QAAf,CADM;KAAf;AAGA,QAAI,QAAJ,GAAe;AACb,aAAO,KAAK,QAAL,EAAe,QAAf,CADM;KAAf;GAhBkB,CADG;;AAsBvB,OAAK,YAAL,CAAkB,SAAlB,CAA4B,QAA5B,GAAuC,UAAU,kBAAV;AAtBhB,CAAR;;AAyBjB,OAAO,OAAP,CAAe,MAAf,GAAwB,CAAC,IAAD,EAAO,aAAP,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC,QAAtC,KAAmD;AACzE,SAAO,IAAI,KAAK,YAAL,CAAkB,QAAtB,EAAgC,aAAhC,EAA+C,IAA/C,EAAqD,QAArD,EAA+D,QAA/D,CAAP,CADyE;CAAnD;;AAIxB,OAAO,OAAP,CAAe,KAAf,GAAuB,CAAC,IAAD,EAAO,YAAP,KAAwB;AAC7C,SAAO,IAAI,KAAK,YAAL,CACT,QADK,EAEL,aAAa,cAAb,EACA,aAAa,QAAb,EAAuB,IAAvB,EACA,aAAa,QAAb,EAAuB,QAAvB,EACA,aAAa,QAAb,EAAuB,QAAvB,CALF,CAD6C;CAAxB;;AAUvB,OAAO,OAAP,CAAe,WAAf,GAA6B,WAAW;AACtC,SAAO,QAAQ,QAAR,CAAP,CADsC;CAAX","file":"document-type-compiled.js","sourcesContent":["\"use strict\";\nconst NODE_TYPE = require(\"../living/node-type\");\n\nconst privates = Symbol(\"DocumentType internal slots\");\n\nmodule.exports = core => {\n  core.DocumentType = class DocumentType extends core.Node {\n    constructor(secret, ownerDocument, name, publicId, systemId) {\n      if (secret !== privates) {\n        throw new TypeError(\"Invalid constructor\");\n      }\n\n      super(ownerDocument);\n      this[privates] = { name, publicId, systemId };\n    }\n\n    get name() {\n      return this[privates].name;\n    }\n    get publicId() {\n      return this[privates].publicId;\n    }\n    get systemId() {\n      return this[privates].systemId;\n    }\n  };\n\n  core.DocumentType.prototype.nodeType = NODE_TYPE.DOCUMENT_TYPE_NODE; // TODO should be on Node, not here\n};\n\nmodule.exports.create = (core, ownerDocument, name, publicId, systemId) => {\n  return new core.DocumentType(privates, ownerDocument, name, publicId, systemId);\n};\n\nmodule.exports.clone = (core, otherDoctype) => {\n  return new core.DocumentType(\n    privates,\n    otherDoctype._ownerDocument,\n    otherDoctype[privates].name,\n    otherDoctype[privates].publicId,\n    otherDoctype[privates].systemId\n  );\n};\n\nmodule.exports.getPrivates = doctype => {\n  return doctype[privates];\n};\n"]}