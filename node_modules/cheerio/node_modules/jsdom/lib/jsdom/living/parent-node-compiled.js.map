{"version":3,"sources":["parent-node.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,eAAe,QAAQ,UAAR,EAAoB,YAApB;AACrB,MAAM,gBAAgB,QAAQ,8BAAR,EAAwC,aAAxC;AACtB,MAAM,YAAY,QAAQ,aAAR,CAAZ;AACN,MAAM,uBAAuB,QAAQ,mBAAR,EAA6B,MAA7B;AAC7B,MAAM,uBAAuB,QAAQ,mBAAR,EAA6B,MAA7B;;AAE7B,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB;;;;AAI/B,OAAK,MAAM,WAAN,IAAqB,CAAC,KAAK,QAAL,EAAe,KAAK,gBAAL,EAAuB,KAAK,OAAL,CAAjE,EAAgF;AAC9E,iBAAa,YAAY,SAAZ,EAAuB,UAApC,EAAgD,YAAY;AAC1D,UAAI,CAAC,KAAK,aAAL,EAAoB;AACvB,aAAK,aAAL,GAAqB,qBAAqB,IAArB,EAA2B,MAAM;AACpD,iBAAO,cAAc,eAAd,CAA8B,IAA9B,EAAoC,EAAE,OAAO,IAAP,EAAa;AACxD,qBAAO,KAAK,QAAL,KAAkB,UAAU,YAAV,CAD+B;aAAb,EAAtC,CAAP,CADoD;SAAN,CAAhD,CADuB;OAAzB,MAMO;AACL,6BAAqB,KAAK,aAAL,CAArB,CADK;OANP;AASA,aAAO,KAAK,aAAL,CAVmD;KAAZ,CAAhD,CAD8E;;AAc9E,iBAAa,YAAY,SAAZ,EAAuB,mBAApC,EAAyD,YAAY;AACnE,WAAK,MAAM,KAAN,IAAe,cAAc,gBAAd,CAA+B,IAA/B,CAApB,EAA0D;AACxD,YAAI,MAAM,QAAN,KAAmB,UAAU,YAAV,EAAwB;AAC7C,iBAAO,KAAP,CAD6C;SAA/C;OADF;;AAMA,aAAO,IAAP,CAPmE;KAAZ,CAAzD,CAd8E;;AAwB9E,iBAAa,YAAY,SAAZ,EAAuB,kBAApC,EAAwD,YAAY;AAClE,WAAK,MAAM,KAAN,IAAe,cAAc,gBAAd,CAA+B,IAA/B,EAAqC,EAAE,SAAS,IAAT,EAAvC,CAApB,EAA6E;AAC3E,YAAI,MAAM,QAAN,KAAmB,UAAU,YAAV,EAAwB;AAC7C,iBAAO,KAAP,CAD6C;SAA/C;OADF;;AAMA,aAAO,IAAP,CAPkE;KAAZ,CAAxD,CAxB8E;;AAkC9E,iBAAa,YAAY,SAAZ,EAAuB,mBAApC,EAAyD,YAAY;AACnE,aAAO,KAAK,QAAL,CAAc,MAAd,CAD4D;KAAZ,CAAzD,CAlC8E;GAAhF;CAJe","file":"parent-node-compiled.js","sourcesContent":["\"use strict\";\nconst defineGetter = require(\"../utils\").defineGetter;\nconst domSymbolTree = require(\"./helpers/internal-constants\").domSymbolTree;\nconst NODE_TYPE = require(\"./node-type\");\nconst createHTMLCollection = require(\"./html-collection\").create;\nconst updateHTMLCollection = require(\"./html-collection\").update;\n\nmodule.exports = function (core) {\n  // https://dom.spec.whatwg.org/#interface-parentnode\n  // Note that ParentNode is a \"NoInterfaceObject\"\n\n  for (const Constructor of [core.Document, core.DocumentFragment, core.Element]) {\n    defineGetter(Constructor.prototype, \"children\", function () {\n      if (!this._childrenList) {\n        this._childrenList = createHTMLCollection(this, () => {\n          return domSymbolTree.childrenToArray(this, { filter(node) {\n            return node.nodeType === NODE_TYPE.ELEMENT_NODE;\n          } });\n        });\n      } else {\n        updateHTMLCollection(this._childrenList);\n      }\n      return this._childrenList;\n    });\n\n    defineGetter(Constructor.prototype, \"firstElementChild\", function () {\n      for (const child of domSymbolTree.childrenIterator(this)) {\n        if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n          return child;\n        }\n      }\n\n      return null;\n    });\n\n    defineGetter(Constructor.prototype, \"lastElementChild\", function () {\n      for (const child of domSymbolTree.childrenIterator(this, { reverse: true })) {\n        if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n          return child;\n        }\n      }\n\n      return null;\n    });\n\n    defineGetter(Constructor.prototype, \"childElementCount\", function () {\n      return this.children.length;\n    });\n  }\n};\n"]}