{"version":3,"sources":["MutationEvent-impl.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,YAAY,QAAQ,cAAR,EAAwB,cAAxB;;AAElB,MAAM,iBAAN,SAAgC,SAAhC,CAA0C;AACxC,oBAAkB,IAAlB,EAAwB,OAAxB,EAAiC,UAAjC,EAA6C,WAA7C,EAA0D,SAA1D,EAAqE,QAArE,EAA+E,QAA/E,EAAyF,UAAzF,EAAqG;AACnG,QAAI,KAAK,aAAL,EAAoB;AACtB,aADsB;KAAxB;;AAIA,SAAK,SAAL,CAAe,IAAf,EAAqB,OAArB,EAA8B,UAA9B,EALmG;AAMnG,SAAK,WAAL,GAAmB,WAAnB,CANmG;AAOnG,SAAK,SAAL,GAAiB,SAAjB,CAPmG;AAQnG,SAAK,QAAL,GAAgB,QAAhB,CARmG;AASnG,SAAK,QAAL,GAAgB,QAAhB,CATmG;AAUnG,SAAK,UAAL,GAAkB,UAAlB,CAVmG;GAArG;CADF;;AAeA,OAAO,OAAP,GAAiB;AACf,kBAAgB,iBAAhB;CADF","file":"MutationEvent-impl-compiled.js","sourcesContent":["\"use strict\";\n\nconst EventImpl = require(\"./Event-impl\").implementation;\n\nclass MutationEventImpl extends EventImpl {\n  initMutationEvent(type, bubbles, cancelable, relatedNode, prevValue, newValue, attrName, attrChange) {\n    if (this._dispatchFlag) {\n      return;\n    }\n\n    this.initEvent(type, bubbles, cancelable);\n    this.relatedNode = relatedNode;\n    this.prevValue = prevValue;\n    this.newValue = newValue;\n    this.attrName = attrName;\n    this.attrChange = attrChange;\n  }\n}\n\nmodule.exports = {\n  implementation: MutationEventImpl\n};\n"]}