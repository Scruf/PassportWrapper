{"version":3,"sources":["node.js"],"names":[],"mappings":"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","file":"node-compiled.js","sourcesContent":["\"use strict\";\nconst defineGetter = require(\"../utils\").defineGetter;\nconst simultaneousIterators = require(\"../utils\").simultaneousIterators;\nconst attributes = require(\"./attributes\");\nconst cloneDoctype = require(\"./document-type\").clone;\nconst cloningSteps = require(\"./helpers/internal-constants\").cloningSteps;\nconst domSymbolTree = require(\"./helpers/internal-constants\").domSymbolTree;\nconst NODE_TYPE = require(\"./node-type\");\nconst documentBaseURL = require(\"./helpers/document-base-url\").documentBaseURL;\nconst orderedSetParser = require(\"./helpers/ordered-set-parser\");\nconst createHTMLCollection = require(\"./html-collection\").create;\nconst domTokenListContains = require(\"./dom-token-list\").contains;\nconst getDoctypePrivates = require(\"./document-type\").getPrivates;\n\nmodule.exports = function (core) {\n  const DOCUMENT_POSITION_DISCONNECTED = core.Node.DOCUMENT_POSITION_DISCONNECTED;\n  const DOCUMENT_POSITION_FOLLOWING = core.Node.DOCUMENT_POSITION_FOLLOWING;\n  const DOCUMENT_POSITION_CONTAINED_BY = core.Node.DOCUMENT_POSITION_CONTAINED_BY;\n  const DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;\n\n  /**\n   * Return true if node is of a type obsoleted by the WHATWG living standard\n   * @param  {Node}  node\n   * @return {Boolean}\n   */\n  function isObsoleteNodeType(node) {\n    return node.nodeType === NODE_TYPE.ENTITY_NODE ||\n      node.nodeType === NODE_TYPE.ENTITY_REFERENCE_NODE ||\n      node.nodeType === NODE_TYPE.NOTATION_NODE ||\n      node.nodeType === NODE_TYPE.CDATA_SECTION_NODE;\n  }\n\n  core.Node.prototype.cloneNode = function (deep) {\n    deep = Boolean(deep);\n\n    return module.exports.clone(core, this, undefined, deep);\n  };\n\n  /**\n   * Returns a bitmask Number composed of DOCUMENT_POSITION constants based upon the rules defined in\n   * http://dom.spec.whatwg.org/#dom-node-comparedocumentposition\n   * @param  {Node} other\n   * @return {Number}\n   */\n  core.Node.prototype.compareDocumentPosition = function (other) {\n    // Let reference be the context object.\n    const reference = this;\n\n    if (!(other instanceof core.Node)) {\n      throw new Error(\"Comparing position against non-Node values is not allowed\");\n    }\n\n    if (isObsoleteNodeType(reference) || isObsoleteNodeType(other)) {\n      throw new Error(\"Obsolete node type\");\n    }\n\n    const result = domSymbolTree.compareTreePosition(reference, other);\n\n    // “If other and reference are not in the same tree, return the result of adding DOCUMENT_POSITION_DISCONNECTED,\n    //  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, and either DOCUMENT_POSITION_PRECEDING or\n    // DOCUMENT_POSITION_FOLLOWING, with the constraint that this is to be consistent, together.”\n    if (result === DOCUMENT_POSITION_DISCONNECTED) {\n      // symbol-tree does not add these bits required by the spec:\n      return DOCUMENT_POSITION_DISCONNECTED | DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | DOCUMENT_POSITION_FOLLOWING;\n    }\n\n    return result;\n  };\n\n  /**\n   * The contains(other) method returns true if other is an inclusive descendant of the context object,\n   * and false otherwise (including when other is null).\n   * @param  {[Node]} other [the node to test]\n   * @return {[boolean]}      [whether other is an inclusive descendant of this]\n   */\n  core.Node.prototype.contains = function (other) {\n    return Boolean(other instanceof core.Node &&\n                   (this === other || this.compareDocumentPosition(other) & DOCUMENT_POSITION_CONTAINED_BY)\n                  );\n  };\n\n  // http://dom.spec.whatwg.org/#dom-node-parentelement\n  defineGetter(core.Node.prototype, \"parentElement\", function () {\n    const parentNode = domSymbolTree.parent(this);\n    return parentNode !== null && parentNode.nodeType === NODE_TYPE.ELEMENT_NODE ? parentNode : null;\n  });\n\n  // https://dom.spec.whatwg.org/#dom-node-baseuri\n  defineGetter(core.Node.prototype, \"baseURI\", function () {\n    return documentBaseURL(this._ownerDocument);\n  });\n\n  function nodeEquals(a, b) {\n    if (a.nodeType !== b.nodeType) {\n      return false;\n    }\n\n    switch (a.nodeType) {\n      case NODE_TYPE.DOCUMENT_TYPE_NODE:\n        const privatesA = getDoctypePrivates(a);\n        const privatesB = getDoctypePrivates(b);\n        if (privatesA.name !== privatesB.name || privatesA.publicId !== privatesB.publicId ||\n            privatesA.systemId !== privatesB.systemId) {\n          return false;\n        }\n        break;\n      case NODE_TYPE.ELEMENT_NODE:\n        if (a._namespaceURI !== b._namespaceURI || a._prefix !== b._prefix || a._localName !== b._localName ||\n            a._attributes.length !== b._attributes.length) {\n          return false;\n        }\n        break;\n      case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n        if (a._target !== b._target || a._data !== b._data) {\n          return false;\n        }\n        break;\n      case NODE_TYPE.TEXT_NODE:\n      case NODE_TYPE.COMMENT_NODE:\n        if (a._data !== b._data) {\n          return false;\n        }\n        break;\n    }\n\n    if (a.nodeType === NODE_TYPE.ELEMENT_NODE && !attributes.attributeListsEqual(a, b)) {\n      return false;\n    }\n\n    for (const nodes of simultaneousIterators(domSymbolTree.childrenIterator(a), domSymbolTree.childrenIterator(b))) {\n      if (!nodes[0] || !nodes[1]) {\n        // mismatch in the amount of childNodes\n        return false;\n      }\n\n      if (!nodeEquals(nodes[0], nodes[1])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // https://dom.spec.whatwg.org/#dom-node-isequalnode\n  core.Node.prototype.isEqualNode = function (node) {\n    if (node === undefined) {\n      // this is what Node? means in the IDL\n      node = null;\n    }\n\n    if (node === null) {\n      return false;\n    }\n\n    // Fast-path, not in the spec\n    if (this === node) {\n      return true;\n    }\n\n    return nodeEquals(this, node);\n  };\n};\n\nmodule.exports.clone = function (core, node, document, cloneChildren) {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n\n  let copy;\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // TODO: just use Document when we eliminate the difference between Document and HTMLDocument.\n      copy = new node.constructor({\n        contentType: node._contentType,\n        url: node._URL,\n        parsingMode: node._parsingMode\n      });\n      document = copy;\n      break;\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = cloneDoctype(core, node);\n      break;\n\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = document._createElementWithCorrectElementInterface(node._localName, node._namespaceURI);\n      copy._namespaceURI = node._namespaceURI;\n      copy._prefix = node._prefix;\n      copy._localName = node._localName;\n      attributes.copyAttributeList(node, copy);\n      break;\n\n    case NODE_TYPE.TEXT_NODE:\n      copy = new core.Text(document, node._data);\n      break;\n\n    case NODE_TYPE.COMMENT_NODE:\n      copy = new core.Comment(document, node._data);\n      break;\n\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = new core.ProcessingInstruction(document, node._target, node._data);\n      break;\n\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = new core.DocumentFragment(document);\n      break;\n  }\n\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n\n  if (cloneChildren) {\n    for (const child of domSymbolTree.childrenIterator(node)) {\n      const childCopy = module.exports.clone(core, child, document, true);\n      copy.appendChild(childCopy);\n    }\n  }\n\n  return copy;\n};\n\nmodule.exports.listOfElementsWithClassNames = function (classNames, root) {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n\n  const classes = orderedSetParser(classNames);\n\n  if (classes.size === 0) {\n    return createHTMLCollection(root, () => false);\n  }\n\n  return createHTMLCollection(root, () => {\n    const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n\n    return domSymbolTree.treeToArray(root, { filter(node) {\n      if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n        return false;\n      }\n\n      for (const className of classes) {\n        if (!domTokenListContains(node.classList, className, { caseInsensitive: isQuirksMode })) {\n          return false;\n        }\n      }\n\n      return true;\n    } });\n  });\n};\n"]}