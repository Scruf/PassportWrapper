{"version":3,"sources":["file.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,cAAc,QAAQ,gBAAR,CAAd;;AAEN,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB;AAC/B,QAAM,OAAO,KAAK,IAAL,CADkB;;AAG/B,QAAM,IAAN,SAAmB,IAAnB,CAAwB;AACtB,gBAAY,QAAZ,EAAsB,QAAtB,EAAgC;AAC9B,YAAM,QAAN,EAAgB,UAAU,CAAV,CAAhB,EAD8B;AAE9B,UAAI,EAAE,gBAAgB,IAAhB,CAAF,EAAyB;AAC3B,cAAM,IAAI,SAAJ,CAAc,wDAAd,CAAN,CAD2B;OAA7B;AAGA,WAAK,YAAY,IAAZ,CAAL,GAAyB,SAAS,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAzB,CAL8B;KAAhC;AAOA,QAAI,IAAJ,GAAW;AACT,aAAO,KAAK,YAAY,IAAZ,CAAZ,CADS;KAAX;GARF;AAYA,OAAK,IAAL,GAAY,IAAZ,CAf+B;CAAhB","file":"file-compiled.js","sourcesContent":["\"use strict\";\n\nconst fileSymbols = require(\"./file-symbols\");\n\nmodule.exports = function (core) {\n  const Blob = core.Blob;\n\n  class File extends Blob {\n    constructor(fileBits, fileName) {\n      super(fileBits, arguments[2]);\n      if (!(this instanceof File)) {\n        throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n      }\n      this[fileSymbols.name] = fileName.replace(/\\//g, \":\");\n    }\n    get name() {\n      return this[fileSymbols.name];\n    }\n  }\n  core.File = File;\n};\n"]}