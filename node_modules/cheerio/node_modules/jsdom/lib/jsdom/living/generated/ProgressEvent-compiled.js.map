{"version":3,"sources":["ProgressEvent.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,cAAc,QAAQ,oBAAR,CAAd;AACN,MAAM,QAAQ,QAAQ,YAAR,CAAR;AACN,MAAM,OAAO,QAAQ,iCAAR,CAAP;;AAEN,MAAM,QAAQ,QAAQ,YAAR,CAAR;AACN,MAAM,OAAO,MAAM,UAAN;AACb,MAAM,2BAA2B,QAAQ,qBAAR,EAA+B,OAA/B;;AAEjC,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,MAAI,CAAC,IAAD,IAAS,KAAK,IAAL,CAAT,IAAuB,EAAE,gBAAgB,aAAhB,CAAF,EAAkC;AAC3D,UAAM,IAAI,SAAJ,CAAc,iIAAd,CAAN,CAD2D;GAA7D;AAGA,MAAI,UAAU,MAAV,GAAmB,CAAnB,EAAsB;AACxB,UAAM,IAAI,SAAJ,CAAc,wEAAwE,UAAU,MAAV,GAAmB,WAA3F,CAApB,CADwB;GAA1B;AAGA,QAAM,OAAO,EAAP,CAPqB;AAQ3B,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,UAAU,MAAV,IAAoB,IAAI,CAAJ,EAAO,EAAE,CAAF,EAAK;AAClD,SAAK,CAAL,IAAU,UAAU,CAAV,CAAV,CADkD;GAApD;AAGA,OAAK,CAAL,IAAU,YAAY,WAAZ,EAAyB,KAAK,CAAL,CAAzB,CAAV,CAX2B;AAY3B,OAAK,CAAL,IAAU,yBAAyB,KAAK,CAAL,CAAzB,CAAV,CAZ2B;;AAc3B,SAAO,OAAP,CAAe,KAAf,CAAqB,IAArB,EAA2B,IAA3B,EAd2B;CAA7B;AAgBA,cAAc,SAAd,GAA0B,OAAO,MAAP,CAAc,MAAM,SAAN,CAAgB,SAAhB,CAAxC;AACA,cAAc,SAAd,CAAwB,WAAxB,GAAsC,aAAtC;AACA,OAAO,cAAP,CAAsB,cAAc,SAAd,EAAyB,kBAA/C,EAAmE;AACjE,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,gBAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,cAAc,SAAd,EAAyB,QAA/C,EAAyD;AACvD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,MAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,cAAc,SAAd,EAAyB,OAA/C,EAAwD;AACtD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,KAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AASA,OAAO,OAAP,GAAiB;AACf,KAAG,GAAH,EAAQ;AACN,WAAO,CAAC,CAAC,GAAD,IAAQ,IAAI,IAAJ,aAAqB,KAAK,cAAL,CAD/B;GAAR;AAGA,SAAO,eAAP,EAAwB,WAAxB,EAAqC;AACnC,QAAI,MAAM,OAAO,MAAP,CAAc,cAAc,SAAd,CAApB,CAD+B;AAEnC,SAAK,KAAL,CAAW,GAAX,EAAgB,eAAhB,EAAiC,WAAjC,EAFmC;AAGnC,WAAO,GAAP,CAHmC;GAArC;AAKA,QAAM,GAAN,EAAW,eAAX,EAA4B,WAA5B,EAAyC;AACvC,QAAI,CAAC,WAAD,EAAc,cAAc,EAAd,CAAlB;AACA,gBAAY,OAAZ,GAAsB,GAAtB,CAFuC;;AAIvC,QAAI,IAAJ,IAAY,IAAI,KAAK,cAAL,CAAoB,eAAxB,EAAyC,WAAzC,CAAZ,CAJuC;AAKvC,QAAI,IAAJ,EAAU,MAAM,aAAN,CAAV,GAAiC,GAAjC,CALuC;GAAzC;AAOA,aAAW,aAAX;AACA,UAAQ;AACN,YAAQ,EAAE,eAAe,aAAf,EAAV;AACA,qBAAiB,EAAE,eAAe,aAAf,EAAnB;AACA,kBAAc,EAAE,eAAe,aAAf,EAAhB;GAHF;CAjBF","file":"ProgressEvent-compiled.js","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\"../events/ProgressEvent-impl.js\");\n\nconst Event = require(\"./Event.js\");\nconst impl = utils.implSymbol;\nconst convertProgressEventInit = require(\"./ProgressEventInit\").convert;\n\nfunction ProgressEvent(type) {\n  if (!this || this[impl] || !(this instanceof ProgressEvent)) {\n    throw new TypeError(\"Failed to construct 'ProgressEvent': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'ProgressEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"DOMString\"](args[0]);\n  args[1] = convertProgressEventInit(args[1]);\n\n  module.exports.setup(this, args);\n}\nProgressEvent.prototype = Object.create(Event.interface.prototype);\nProgressEvent.prototype.constructor = ProgressEvent;\nObject.defineProperty(ProgressEvent.prototype, \"lengthComputable\", {\n  get() {\n    return this[impl].lengthComputable;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProgressEvent.prototype, \"loaded\", {\n  get() {\n    return this[impl].loaded;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProgressEvent.prototype, \"total\", {\n  get() {\n    return this[impl].total;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProgressEvent.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: ProgressEvent,\n  expose: {\n    Window: { ProgressEvent: ProgressEvent },\n    DedicatedWorker: { ProgressEvent: ProgressEvent },\n    SharedWorker: { ProgressEvent: ProgressEvent }\n  }\n};\n\n"]}