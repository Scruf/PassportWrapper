{"version":3,"sources":["TouchEvent.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,cAAc,QAAQ,oBAAR,CAAd;AACN,MAAM,QAAQ,QAAQ,YAAR,CAAR;AACN,MAAM,OAAO,QAAQ,8BAAR,CAAP;;AAEN,MAAM,UAAU,QAAQ,cAAR,CAAV;AACN,MAAM,OAAO,MAAM,UAAN;;AAEb,SAAS,UAAT,GAAsB;AACpB,QAAM,IAAI,SAAJ,CAAc,qBAAd,CAAN,CADoB;CAAtB;AAGA,WAAW,SAAX,GAAuB,OAAO,MAAP,CAAc,QAAQ,SAAR,CAAkB,SAAlB,CAArC;AACA,WAAW,SAAX,CAAqB,WAArB,GAAmC,UAAnC;AACA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,SAA5C,EAAuD;AACrD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,OAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,eAA5C,EAA6D;AAC3D,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,aAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,gBAA5C,EAA8D;AAC5D,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,cAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,QAA5C,EAAsD;AACpD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,MAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,SAA5C,EAAuD;AACrD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,OAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,SAA5C,EAAuD;AACrD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,OAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AAQA,OAAO,cAAP,CAAsB,WAAW,SAAX,EAAsB,UAA5C,EAAwD;AACtD,QAAM;AACJ,WAAO,KAAK,IAAL,EAAW,QAAX,CADH;GAAN;AAGA,cAAY,IAAZ;AACA,gBAAc,IAAd;CALF;;AASA,OAAO,OAAP,GAAiB;AACf,KAAG,GAAH,EAAQ;AACN,WAAO,CAAC,CAAC,GAAD,IAAQ,IAAI,IAAJ,aAAqB,KAAK,cAAL,CAD/B;GAAR;AAGA,SAAO,eAAP,EAAwB,WAAxB,EAAqC;AACnC,QAAI,MAAM,OAAO,MAAP,CAAc,WAAW,SAAX,CAApB,CAD+B;AAEnC,SAAK,KAAL,CAAW,GAAX,EAAgB,eAAhB,EAAiC,WAAjC,EAFmC;AAGnC,WAAO,GAAP,CAHmC;GAArC;AAKA,QAAM,GAAN,EAAW,eAAX,EAA4B,WAA5B,EAAyC;AACvC,QAAI,CAAC,WAAD,EAAc,cAAc,EAAd,CAAlB;AACA,gBAAY,OAAZ,GAAsB,GAAtB,CAFuC;;AAIvC,QAAI,IAAJ,IAAY,IAAI,KAAK,cAAL,CAAoB,eAAxB,EAAyC,WAAzC,CAAZ,CAJuC;AAKvC,QAAI,IAAJ,EAAU,MAAM,aAAN,CAAV,GAAiC,GAAjC,CALuC;GAAzC;AAOA,aAAW,UAAX;AACA,UAAQ;AACN,YAAQ,EAAE,YAAY,UAAZ,EAAV;GADF;CAjBF","file":"TouchEvent-compiled.js","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\"../events/TouchEvent-impl.js\");\n\nconst UIEvent = require(\"./UIEvent.js\");\nconst impl = utils.implSymbol;\n\nfunction TouchEvent() {\n  throw new TypeError(\"Illegal constructor\");\n}\nTouchEvent.prototype = Object.create(UIEvent.interface.prototype);\nTouchEvent.prototype.constructor = TouchEvent;\nObject.defineProperty(TouchEvent.prototype, \"touches\", {\n  get() {\n    return this[impl].touches;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"targetTouches\", {\n  get() {\n    return this[impl].targetTouches;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"changedTouches\", {\n  get() {\n    return this[impl].changedTouches;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"altKey\", {\n  get() {\n    return this[impl].altKey;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"metaKey\", {\n  get() {\n    return this[impl].metaKey;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"ctrlKey\", {\n  get() {\n    return this[impl].ctrlKey;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TouchEvent.prototype, \"shiftKey\", {\n  get() {\n    return this[impl].shiftKey;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TouchEvent.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: TouchEvent,\n  expose: {\n    Window: { TouchEvent: TouchEvent }\n  }\n};\n\n"]}