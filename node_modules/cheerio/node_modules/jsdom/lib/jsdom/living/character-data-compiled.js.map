{"version":3,"sources":["character-data.js"],"names":[],"mappings":"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","file":"character-data-compiled.js","sourcesContent":["\"use strict\";\nconst inheritFrom = require(\"../utils\").inheritFrom;\nconst domSymbolTree = require(\"./helpers/internal-constants\").domSymbolTree;\n\nmodule.exports = function (core) {\n  core.CharacterData = function CharacterData(ownerDocument, data) {\n    core.Node.call(this, ownerDocument);\n\n    this._data = data;\n  };\n\n  inheritFrom(core.Node, core.CharacterData, {\n    get data() {\n      return this._data;\n    },\n    set data(data) {\n      if (data === null) {\n        data = \"\";\n      }\n      data = String(data);\n\n      this._setData(data);\n    },\n\n    get length() {\n      return this._data.length;\n    },\n\n    substringData(offset, count) {\n      if (arguments.length < 2) {\n        throw new TypeError(\"Not enough arguments to CharacterData.prototype.substringData\");\n      }\n      offset >>>= 0;\n      count >>>= 0;\n\n      const length = this.length;\n\n      if (offset > length) {\n        throw new core.DOMException(core.DOMException.INDEX_SIZE_ERR);\n      }\n\n      if (offset + count > length) {\n        return this._data.substring(offset);\n      }\n\n      return this._data.substring(offset, offset + count);\n    },\n\n    appendData(data) {\n      if (arguments.length < 1) {\n        throw new TypeError(\"Not enough arguments to CharacterData.prototype.appendData\");\n      }\n\n      this.replaceData(this.length, 0, data);\n    },\n\n    insertData(offset, data) {\n      if (arguments.length < 2) {\n        throw new TypeError(\"Not enough arguments to CharacterData.prototype.insertData\");\n      }\n\n      this.replaceData(offset, 0, data);\n    },\n\n    deleteData(offset, count) {\n      if (arguments.length < 2) {\n        throw new TypeError(\"Not enough arguments to CharacterData.prototype.deleteData\");\n      }\n\n      this.replaceData(offset, count, \"\");\n    },\n\n    replaceData(offset, count, data) {\n      if (arguments.length < 3) {\n        throw new TypeError(\"Not enough arguments to CharacterData.prototype.replaceData\");\n      }\n      offset >>>= 0;\n      count >>>= 0;\n      data = String(data);\n\n      const length = this.length;\n\n      if (offset > length) {\n        throw new core.DOMException(core.DOMException.INDEX_SIZE_ERR);\n      }\n\n      if (offset + count > length) {\n        count = length - offset;\n      }\n\n      const start = this._data.substring(0, offset);\n      const end = this._data.substring(offset + count);\n\n      this._setData(start + data + end);\n\n      // TODO: range stuff\n    },\n\n    _setData(newData) {\n      // TODO: remove this once we no longer rely on mutation events internally, since they are nonstandard\n      const oldData = this._data;\n      this._data = newData;\n\n      if (this._ownerDocument &&\n          domSymbolTree.parent(this) &&\n          this._ownerDocument.implementation._hasFeature(\"MutationEvents\")) {\n        const ev = this._ownerDocument.createEvent(\"MutationEvents\");\n        ev.initMutationEvent(\"DOMCharacterDataModified\", true, false, this, oldData, newData, null, null);\n        this.dispatchEvent(ev);\n      }\n    }\n  });\n};\n"]}