{"version":3,"sources":["validate-names.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,MAAM,QAAQ,oBAAR,CAAN;AACN,MAAM,eAAe,QAAQ,4BAAR,CAAf;;;;AAIN,QAAQ,IAAR,GAAe,UAAU,IAAV,EAAgB;AAC7B,QAAM,SAAS,IAAI,IAAJ,CAAS,IAAT,CAAT,CADuB;AAE7B,MAAI,CAAC,OAAO,OAAP,EAAgB;AACnB,UAAM,IAAI,YAAJ,CAAiB,aAAa,qBAAb,EACrB,OAAO,IAAP,GAAc,wCAAd,GAAyD,OAAO,KAAP,CAD3D,CADmB;GAArB;CAFa;;AAQf,QAAQ,KAAR,GAAgB,UAAU,KAAV,EAAiB;AAC/B,UAAQ,IAAR,CAAa,KAAb,EAD+B;;AAG/B,QAAM,SAAS,IAAI,KAAJ,CAAU,KAAV,CAAT,CAHyB;AAI/B,MAAI,CAAC,OAAO,OAAP,EAAgB;AACnB,UAAM,IAAI,YAAJ,CAAiB,aAAa,aAAb,EACrB,OAAO,KAAP,GAAe,yCAAf,GAA2D,OAAO,KAAP,CAD7D,CADmB;GAArB;CAJc;;AAUhB,QAAQ,kBAAR,GAA6B,UAAU,SAAV,EAAqB,aAArB,EAAoC;AAC/D,MAAI,cAAc,EAAd,EAAkB;AACpB,gBAAY,IAAZ,CADoB;GAAtB;;AAIA,UAAQ,KAAR,CAAc,aAAd,EAL+D;;AAO/D,MAAI,SAAS,IAAT,CAP2D;AAQ/D,MAAI,YAAY,aAAZ,CAR2D;;AAU/D,QAAM,aAAa,cAAc,OAAd,CAAsB,GAAtB,CAAb,CAVyD;AAW/D,MAAI,eAAe,CAAC,CAAD,EAAI;AACrB,aAAS,cAAc,SAAd,CAAwB,CAAxB,EAA2B,UAA3B,CAAT,CADqB;AAErB,gBAAY,cAAc,SAAd,CAAwB,aAAa,CAAb,CAApC,CAFqB;GAAvB;;AAKA,MAAI,WAAW,IAAX,IAAmB,cAAc,IAAd,EAAoB;AACzC,UAAM,IAAI,YAAJ,CAAiB,aAAa,aAAb,EACrB,8EADI,CAAN,CADyC;GAA3C;;AAKA,MAAI,WAAW,KAAX,IAAoB,cAAc,sCAAd,EAAsD;AAC5E,UAAM,IAAI,YAAJ,CAAiB,aAAa,aAAb,EACrB,2EADI,CAAN,CAD4E;GAA9E;;AAKA,MAAI,CAAC,kBAAkB,OAAlB,IAA6B,WAAW,OAAX,CAA9B,IAAqD,cAAc,+BAAd,EAA+C;AACtG,UAAM,IAAI,YAAJ,CAAiB,aAAa,aAAb,EACrB,gGADI,CAAN,CADsG;GAAxG;;AAKA,MAAI,cAAc,+BAAd,IAAiD,kBAAkB,OAAlB,IAA6B,WAAW,OAAX,EAAoB;AACpG,UAAM,IAAI,YAAJ,CAAiB,aAAa,aAAb,EACrB,sFADI,CAAN,CADoG;GAAtG;;AAKA,SAAO,EAAE,SAAF,EAAa,MAAb,EAAqB,SAArB,EAAP,CApC+D;CAApC","file":"validate-names-compiled.js","sourcesContent":["\"use strict\";\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"../../web-idl/DOMException\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (name) {\n  const result = xnv.name(name);\n  if (!result.success) {\n    throw new DOMException(DOMException.INVALID_CHARACTER_ERR,\n      \"\\\"\" + name + \"\\\" did not match the Name production: \" + result.error);\n  }\n};\n\nexports.qname = function (qname) {\n  exports.name(qname);\n\n  const result = xnv.qname(qname);\n  if (!result.success) {\n    throw new DOMException(DOMException.NAMESPACE_ERR,\n      \"\\\"\" + qname + \"\\\" did not match the QName production: \" + result.error);\n  }\n};\n\nexports.validateAndExtract = function (namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(qualifiedName);\n\n  let prefix = null;\n  let localName = qualifiedName;\n\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw new DOMException(DOMException.NAMESPACE_ERR,\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\");\n  }\n\n  if (prefix === \"xml\" && namespace !== \"http://www.w3.org/XML/1998/namespace\") {\n    throw new DOMException(DOMException.NAMESPACE_ERR,\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\");\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== \"http://www.w3.org/2000/xmlns/\") {\n    throw new DOMException(DOMException.NAMESPACE_ERR,\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\");\n  }\n\n  if (namespace === \"http://www.w3.org/2000/xmlns/\" && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new DOMException(DOMException.NAMESPACE_ERR,\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\");\n  }\n\n  return { namespace, prefix, localName };\n};\n"]}