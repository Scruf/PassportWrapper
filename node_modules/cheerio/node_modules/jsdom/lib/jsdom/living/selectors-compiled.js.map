{"version":3,"sources":["selectors.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,YAAY,QAAQ,+BAAR,CAAZ;AACN,MAAM,eAAe,QAAQ,UAAR,EAAoB,YAApB;AACrB,MAAM,gBAAgB,QAAQ,8BAAR,EAAwC,aAAxC;AACtB,MAAM,uBAAuB,QAAQ,qBAAR,EAA+B,YAA/B;AAC7B,MAAM,eAAe,QAAQ,yBAAR,CAAf;;AAEN,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB;AAC/B,OAAK,MAAM,KAAN,IAAe,CAAC,KAAK,QAAL,EAAe,KAAK,gBAAL,EAAuB,KAAK,OAAL,CAA3D,EAA0E;AACxE,UAAM,SAAN,CAAgB,aAAhB,GAAgC,aAAa,UAAU,SAAV,EAAqB;AAChE,kBAAY,OAAO,SAAP,CAAZ,CADgE;AAEhE,YAAM,UAAU,aAAa,IAAb,CAAV,CAF0D;;AAIhE,UAAI;AACF,eAAO,QAAQ,KAAR,CAAc,SAAd,EAAyB,IAAzB,CAAP,CADE;OAAJ,CAEE,OAAO,CAAP,EAAU;AACV,cAAM,IAAI,YAAJ,CAAiB,aAAa,UAAb,EAAyB,EAAE,OAAF,CAAhD,CADU;OAAV;KANyC,CAA7C,CADwE;;AAYxE,UAAM,SAAN,CAAgB,gBAAhB,GAAmC,aAAa,UAAU,SAAV,EAAqB;AACnE,kBAAY,OAAO,SAAP,CAAZ,CADmE;AAEnE,YAAM,UAAU,aAAa,IAAb,CAAV,CAF6D;;AAInE,UAAI,IAAJ,CAJmE;AAKnE,UAAI;AACF,eAAO,QAAQ,MAAR,CAAe,SAAf,EAA0B,IAA1B,CAAP,CADE;OAAJ,CAEE,OAAO,CAAP,EAAU;AACV,cAAM,IAAI,YAAJ,CAAiB,aAAa,UAAb,EAAyB,EAAE,OAAF,CAAhD,CADU;OAAV;;AAIF,aAAO,qBAAqB,IAArB,CAAP,CAXmE;KAArB,CAAhD,CAZwE;GAA1E;;AA2BA,OAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,GAAiC,aAAa,UAAU,SAAV,EAAqB;AACjE,gBAAY,OAAO,SAAP,CAAZ,CADiE;AAEjE,UAAM,UAAU,aAAa,IAAb,CAAV,CAF2D;;AAIjE,QAAI;AACF,aAAO,QAAQ,KAAR,CAAc,IAAd,EAAoB,SAApB,CAAP,CADE;KAAJ,CAEE,OAAO,CAAP,EAAU;AACV,YAAM,IAAI,YAAJ,CAAiB,aAAa,UAAb,EAAyB,EAAE,OAAF,CAAhD,CADU;KAAV;GAN0C,CAA9C,CA5B+B;CAAhB;;;AAyCjB,OAAO,OAAP,CAAe,aAAf,GAA+B,UAAU,UAAV,EAAsB,SAAtB,EAAiC;AAC9D,MAAI,CAAC,cAAc,WAAd,CAA0B,UAA1B,CAAD,IACC,eAAe,WAAW,cAAX,IAA6B,CAAC,WAAW,gBAAX,EAA8B;;;AAG9E,WAAO,IAAP,CAH8E;GADhF;;AAOA,SAAO,aAAa,UAAb,EAAyB,KAAzB,CAA+B,SAA/B,EAA0C,UAA1C,CAAP,CAR8D;CAAjC;;;;AAa/B,SAAS,YAAT,CAAsB,UAAtB,EAAkC;AAChC,QAAM,WAAW,WAAW,cAAX,CADe;;AAGhC,MAAI,CAAC,SAAS,UAAT,EAAqB;AACxB,aAAS,UAAT,GAAsB,UAAU,EAAE,QAAF,EAAV,CAAtB,CADwB;AAExB,aAAS,UAAT,CAAoB,SAApB,CAA8B,EAAE,WAAW,KAAX,EAAhC,EAFwB;GAA1B;;AAKA,SAAO,SAAS,UAAT,CARyB;CAAlC","file":"selectors-compiled.js","sourcesContent":["\"use strict\";\nconst nwmatcher = require(\"nwmatcher/src/nwmatcher-noqsa\");\nconst memoizeQuery = require(\"../utils\").memoizeQuery;\nconst domSymbolTree = require(\"./helpers/internal-constants\").domSymbolTree;\nconst createStaticNodeList = require(\"../living/node-list\").createStatic;\nconst DOMException = require(\"../web-idl/DOMException\");\n\nmodule.exports = function (core) {\n  for (const Class of [core.Document, core.DocumentFragment, core.Element]) {\n    Class.prototype.querySelector = memoizeQuery(function (selectors) {\n      selectors = String(selectors);\n      const matcher = addNwmatcher(this);\n\n      try {\n        return matcher.first(selectors, this);\n      } catch (e) {\n        throw new DOMException(DOMException.SYNTAX_ERR, e.message);\n      }\n    });\n\n    Class.prototype.querySelectorAll = memoizeQuery(function (selectors) {\n      selectors = String(selectors);\n      const matcher = addNwmatcher(this);\n\n      let list;\n      try {\n        list = matcher.select(selectors, this);\n      } catch (e) {\n        throw new DOMException(DOMException.SYNTAX_ERR, e.message);\n      }\n\n      return createStaticNodeList(list);\n    });\n  }\n\n  core.Element.prototype.matches = memoizeQuery(function (selectors) {\n    selectors = String(selectors);\n    const matcher = addNwmatcher(this);\n\n    try {\n      return matcher.match(this, selectors);\n    } catch (e) {\n      throw new DOMException(DOMException.SYNTAX_ERR, e.message);\n    }\n  });\n};\n\n// Internal method so you don't have to go through the public API\nmodule.exports.querySelector = function (parentNode, selectors) {\n  if (!domSymbolTree.hasChildren(parentNode) ||\n      (parentNode === parentNode._ownerDocument && !parentNode._documentElement)) {\n    // This allows us to avoid the explosion that occurs if you try to add nwmatcher to a document that is not yet\n    // initialized.\n    return null;\n  }\n\n  return addNwmatcher(parentNode).first(selectors, parentNode);\n};\n\n// nwmatcher gets `document.documentElement` at creation-time, so we have to initialize lazily, since in the initial\n// stages of Document initialization, there is no documentElement present yet.\nfunction addNwmatcher(parentNode) {\n  const document = parentNode._ownerDocument;\n\n  if (!document._nwmatcher) {\n    document._nwmatcher = nwmatcher({ document });\n    document._nwmatcher.configure({ UNIQUE_ID: false });\n  }\n\n  return document._nwmatcher;\n}\n"]}