{"version":3,"sources":["border.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,kBAAkB,QAAQ,YAAR,EAAsB,eAAtB;AACtB,IAAI,kBAAkB,QAAQ,YAAR,EAAsB,eAAtB;AACtB,IAAI,kBAAkB,QAAQ,YAAR,EAAsB,eAAtB;;AAEtB,IAAI,gBAAgB;AAChB,oBAAgB,QAAQ,eAAR,CAAhB;AACA,oBAAgB,QAAQ,eAAR,CAAhB;AACA,oBAAgB,QAAQ,eAAR,CAAhB;CAHA;;AAMJ,IAAI,UAAU,SAAS,OAAT,CAAiB,CAAjB,EAAoB;AAC9B,WAAO,gBAAgB,CAAhB,EAAmB,aAAnB,MAAsC,SAAtC,CADuB;CAApB;AAGd,OAAO,OAAP,CAAe,OAAf,GAAyB,OAAzB;;AAEA,IAAI,SAAS,UAAU,CAAV,EAAa;AACtB,QAAI,EAAE,QAAF,GAAa,WAAb,OAA+B,MAA/B,EAAuC;AACvC,YAAI,EAAJ,CADuC;KAA3C;AAGA,QAAI,QAAQ,CAAR,CAAJ,EAAgB;AACZ,eAAO,CAAP,CADY;KAAhB;AAGA,WAAO,SAAP,CAPsB;CAAb;;AAUb,IAAI,oBAAoB,gBAAgB,QAAhB,EAA0B,aAA1B,CAApB;AACJ,IAAI,oBAAoB,gBAAgB,QAAhB,EAA0B,aAA1B,CAApB;;AAEJ,OAAO,OAAP,CAAe,UAAf,GAA4B;AACxB,SAAK,UAAU,CAAV,EAAa;AACd,YAAI,EAAE,QAAF,GAAa,WAAb,OAA+B,MAA/B,EAAuC;AACvC,gBAAI,EAAJ,CADuC;SAA3C;AAGA,0BAAkB,IAAlB,CAAuB,IAAvB,EAA6B,CAA7B,EAJc;AAKd,aAAK,cAAL,CAAoB,YAApB,EALc;AAMd,aAAK,cAAL,CAAoB,aAApB,EANc;AAOd,aAAK,cAAL,CAAoB,cAApB,EAPc;AAQd,aAAK,cAAL,CAAoB,eAApB,EARc;AASd,aAAK,OAAL,CAAa,YAAb,IAA6B,KAAK,OAAL,CAAa,MAAb,CATf;AAUd,aAAK,OAAL,CAAa,aAAb,IAA8B,KAAK,OAAL,CAAa,MAAb,CAVhB;AAWd,aAAK,OAAL,CAAa,cAAb,IAA+B,KAAK,OAAL,CAAa,MAAb,CAXjB;AAYd,aAAK,OAAL,CAAa,eAAb,IAAgC,KAAK,OAAL,CAAa,MAAb,CAZlB;KAAb;AAcL,SAAK,iBAAL;AACA,gBAAY,IAAZ;AACA,kBAAc,IAAd;CAjBJ","file":"border-compiled.js","sourcesContent":["'use strict';\n\nvar shorthandParser = require('../parsers').shorthandParser;\nvar shorthandSetter = require('../parsers').shorthandSetter;\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n    'border-width': require('./borderWidth'),\n    'border-style': require('./borderStyle'),\n    'border-color': require('./borderColor')\n};\n\nvar isValid = function isValid(v) {\n    return shorthandParser(v, shorthand_for) !== undefined;\n};\nmodule.exports.isValid = isValid;\n\nvar parser = function (v) {\n    if (v.toString().toLowerCase() === 'none') {\n        v = '';\n    }\n    if (isValid(v)) {\n        return v;\n    }\n    return undefined;\n};\n\nvar myShorthandSetter = shorthandSetter('border', shorthand_for);\nvar myShorthandGetter = shorthandGetter('border', shorthand_for);\n\nmodule.exports.definition = {\n    set: function (v) {\n        if (v.toString().toLowerCase() === 'none') {\n            v = '';\n        }\n        myShorthandSetter.call(this, v);\n        this.removeProperty('border-top');\n        this.removeProperty('border-left');\n        this.removeProperty('border-right');\n        this.removeProperty('border-bottom');\n        this._values['border-top'] = this._values.border;\n        this._values['border-left'] = this._values.border;\n        this._values['border-right'] = this._values.border;\n        this._values['border-bottom'] = this._values.border;\n    },\n    get: myShorthandGetter,\n    enumerable: true,\n    configurable: true\n};\n"]}