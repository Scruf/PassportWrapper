{"version":3,"sources":["borderSpacing.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,YAAR,CAAV;;;;;;AAMJ,IAAI,QAAQ,SAAS,KAAT,CAAe,CAAf,EAAkB;AAC1B,QAAI,EAAE,WAAF,OAAoB,SAApB,EAA+B;AAC/B,eAAO,CAAP,CAD+B;KAAnC;AAGA,QAAI,QAAQ,EAAE,KAAF,CAAQ,KAAR,CAAR,CAJsB;AAK1B,QAAI,MAAM,MAAN,KAAiB,CAAjB,IAAsB,MAAM,MAAN,KAAiB,CAAjB,EAAoB;AAC1C,eAAO,SAAP,CAD0C;KAA9C;AAGA,UAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,YAAI,QAAQ,SAAR,CAAkB,IAAlB,MAA4B,QAAQ,KAAR,CAAc,MAAd,EAAsB;AAClD,mBAAO,SAAP,CADkD;SAAtD;KADU,CAAd,CAR0B;;AAc1B,WAAO,CAAP,CAd0B;CAAlB;;AAiBZ,OAAO,OAAP,CAAe,OAAf,GAAyB,SAAS,OAAT,CAAiB,CAAjB,EAAoB;AACzC,WAAO,MAAM,CAAN,MAAa,SAAb,CADkC;CAApB;;AAIzB,OAAO,OAAP,CAAe,UAAf,GAA4B;AACxB,SAAK,UAAU,CAAV,EAAa;AACd,aAAK,YAAL,CAAkB,gBAAlB,EAAoC,MAAM,CAAN,CAApC,EADc;KAAb;AAGL,SAAK,YAAY;AACb,eAAO,KAAK,gBAAL,CAAsB,gBAAtB,CAAP,CADa;KAAZ;AAGL,gBAAY,IAAZ;AACA,kBAAc,IAAd;CARJ","file":"borderSpacing-compiled.js","sourcesContent":["'use strict';\n\nvar parsers = require('../parsers');\n\n// <length> <length>? | inherit\n// if one, it applies to both horizontal and verical spacing\n// if two, the first applies to the horizontal and the second applies to vertical spacing\n\nvar parse = function parse(v) {\n    if (v.toLowerCase() === 'inherit') {\n        return v;\n    }\n    var parts = v.split(/\\s+/);\n    if (parts.length !== 1 && parts.length !== 2) {\n        return undefined;\n    }\n    parts.forEach(function (part) {\n        if (parsers.valueType(part) !== parsers.TYPES.LENGTH) {\n            return undefined;\n        }\n    });\n\n    return v;\n};\n\nmodule.exports.isValid = function isValid(v) {\n    return parse(v) !== undefined;\n};\n\nmodule.exports.definition = {\n    set: function (v) {\n        this._setProperty('border-spacing', parse(v));\n    },\n    get: function () {\n        return this.getPropertyValue('border-spacing');\n    },\n    enumerable: true,\n    configurable: true\n};\n"]}