{"version":3,"sources":["borderWidth.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,YAAR,CAAV;AACJ,IAAI,UAAU,QAAQ,YAAR,CAAV;AACJ,IAAI,iBAAiB,QAAQ,YAAR,EAAsB,cAAtB;;;AAGrB,IAAI,SAAS,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAT;;AAEJ,OAAO,OAAP,CAAe,OAAf,GAAyB,SAAS,KAAT,CAAe,CAAf,EAAkB;AACvC,QAAI,SAAS,QAAQ,WAAR,CAAoB,CAApB,CAAT,CADmC;AAEvC,QAAI,WAAW,SAAX,EAAsB;AACtB,eAAO,IAAP,CADsB;KAA1B;AAGA,QAAI,OAAO,CAAP,KAAa,QAAb,EAAuB;AACvB,eAAO,KAAP,CADuB;KAA3B;AAGA,QAAI,MAAM,EAAN,EAAU;AACV,eAAO,IAAP,CADU;KAAd;AAGA,QAAI,EAAE,WAAF,EAAJ,CAXuC;AAYvC,QAAI,OAAO,OAAP,CAAe,CAAf,MAAsB,CAAC,CAAD,EAAI;AAC1B,eAAO,KAAP,CAD0B;KAA9B;AAGA,WAAO,IAAP,CAfuC;CAAlB;AAiBzB,IAAI,UAAU,OAAO,OAAP,CAAe,OAAf;;AAEd,IAAI,SAAS,UAAU,CAAV,EAAa;AACtB,QAAI,SAAS,QAAQ,WAAR,CAAoB,CAApB,CAAT,CADkB;AAEtB,QAAI,WAAW,SAAX,EAAsB;AACtB,eAAO,MAAP,CADsB;KAA1B;AAGA,QAAI,QAAQ,CAAR,CAAJ,EAAgB;AACZ,eAAO,EAAE,WAAF,EAAP,CADY;KAAhB;AAGA,WAAO,SAAP,CARsB;CAAb;;AAWb,OAAO,OAAP,CAAe,UAAf,GAA4B;AACxB,SAAK,eAAe,QAAf,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C,CAAL;AACA,SAAK,YAAY;AACb,eAAO,KAAK,gBAAL,CAAsB,cAAtB,CAAP,CADa;KAAZ;AAGL,gBAAY,IAAZ;AACA,kBAAc,IAAd;CANJ","file":"borderWidth-compiled.js","sourcesContent":["'use strict';\n\nvar parsers = require('../parsers');\nvar parsers = require('../parsers');\nvar implicitSetter = require('../parsers').implicitSetter;\n\n// the valid border-widths:\nvar widths = ['thin', 'medium', 'thick'];\n\nmodule.exports.isValid = function parse(v) {\n    var length = parsers.parseLength(v);\n    if (length !== undefined) {\n        return true;\n    }\n    if (typeof v !== 'string') {\n        return false;\n    }\n    if (v === '') {\n        return true;\n    }\n    v = v.toLowerCase();\n    if (widths.indexOf(v) === -1) {\n        return false;\n    }\n    return true;\n};\nvar isValid = module.exports.isValid;\n\nvar parser = function (v) {\n    var length = parsers.parseLength(v);\n    if (length !== undefined) {\n        return length;\n    }\n    if (isValid(v)) {\n        return v.toLowerCase();\n    }\n    return undefined;\n};\n\nmodule.exports.definition = {\n    set: implicitSetter('border', 'width', isValid, parser),\n    get: function () {\n        return this.getPropertyValue('border-width');\n    },\n    enumerable: true,\n    configurable: true\n};\n"]}