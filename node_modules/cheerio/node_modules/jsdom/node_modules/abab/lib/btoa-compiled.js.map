{"version":3,"sources":["btoa.js"],"names":[],"mappings":"AAAA;;;;;;AAKA,SAAS,IAAT,CAAc,CAAd,EAAiB;AACf,MAAI,CAAJ;;AADe,GAGf,GAAI,OAAO,CAAP,CAAJ;;;;AAHe,OAOV,IAAI,CAAJ,EAAO,IAAI,EAAE,MAAF,EAAU,GAA1B,EAA+B;AAC7B,QAAI,EAAE,UAAF,CAAa,CAAb,IAAkB,GAAlB,EAAuB;AACzB,aAAO,IAAP,CADyB;KAA3B;GADF;AAKA,MAAI,MAAM,EAAN,CAZW;AAaf,OAAK,IAAI,CAAJ,EAAO,IAAI,EAAE,MAAF,EAAU,KAAK,CAAL,EAAQ;AAChC,QAAI,cAAc,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAd,CAD4B;AAEhC,gBAAY,CAAZ,IAAiB,EAAE,UAAF,CAAa,CAAb,KAAmB,CAAnB,CAFe;AAGhC,gBAAY,CAAZ,IAAiB,CAAC,EAAE,UAAF,CAAa,CAAb,IAAkB,IAAlB,CAAD,IAA4B,CAA5B,CAHe;AAIhC,QAAI,EAAE,MAAF,GAAW,IAAI,CAAJ,EAAO;AACpB,kBAAY,CAAZ,KAAkB,EAAE,UAAF,CAAa,IAAI,CAAJ,CAAb,IAAuB,CAAvB,CADE;AAEpB,kBAAY,CAAZ,IAAiB,CAAC,EAAE,UAAF,CAAa,IAAI,CAAJ,CAAb,GAAsB,IAAtB,CAAD,IAAgC,CAAhC,CAFG;KAAtB;AAIA,QAAI,EAAE,MAAF,GAAW,IAAI,CAAJ,EAAO;AACpB,kBAAY,CAAZ,KAAkB,EAAE,UAAF,CAAa,IAAI,CAAJ,CAAb,IAAuB,CAAvB,CADE;AAEpB,kBAAY,CAAZ,IAAiB,EAAE,UAAF,CAAa,IAAI,CAAJ,CAAb,GAAsB,IAAtB,CAFG;KAAtB;AAIA,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAY,MAAZ,EAAoB,GAAxC,EAA6C;AAC3C,UAAI,OAAO,YAAY,CAAZ,CAAP,IAAyB,WAAzB,EAAsC;AACxC,eAAO,GAAP,CADwC;OAA1C,MAEO;AACL,eAAO,WAAW,YAAY,CAAZ,CAAX,CAAP,CADK;OAFP;KADF;GAZF;AAoBA,SAAO,GAAP,CAjCe;CAAjB;;;;;;AAwCA,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,MAAI,MAAM,EAAN,EAAU;AACZ,WAAO,OAAO,YAAP,CAAoB,MAAM,IAAI,UAAJ,CAAe,CAAf,CAAN,CAA3B,CADY;GAAd;AAGA,MAAI,MAAM,EAAN,EAAU;AACZ,WAAO,OAAO,YAAP,CAAoB,MAAM,EAAN,GAAW,IAAI,UAAJ,CAAe,CAAf,CAAX,CAA3B,CADY;GAAd;AAGA,MAAI,MAAM,EAAN,EAAU;AACZ,WAAO,OAAO,YAAP,CAAoB,MAAM,EAAN,GAAW,IAAI,UAAJ,CAAe,CAAf,CAAX,CAA3B,CADY;GAAd;AAGA,MAAI,OAAO,EAAP,EAAW;AACb,WAAO,GAAP,CADa;GAAf;AAGA,MAAI,OAAO,EAAP,EAAW;AACb,WAAO,GAAP,CADa;GAAf;;AAbuB,CAAzB;;AAmBA,OAAO,OAAP,GAAiB,IAAjB","file":"btoa-compiled.js","sourcesContent":["'use strict';\n\n/**\n * btoa() as defined by the HTML5 spec, which mostly just references RFC4648.\n */\nfunction btoa(s) {\n  var i;\n  // String conversion as required by WebIDL.\n  s = String(s);\n  // \"The btoa() method must throw an INVALID_CHARACTER_ERR exception if the\n  // method's first argument contains any character whose code point is\n  // greater than U+00FF.\"\n  for (i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 255) {\n      return null;\n    }\n  }\n  var out = '';\n  for (i = 0; i < s.length; i += 3) {\n    var groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = s.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n    if (s.length > i + 1) {\n      groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (s.length > i + 2) {\n      groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n    }\n    for (var j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] == 'undefined') {\n        out += '=';\n      } else {\n        out += btoaLookup(groupsOfSix[j]);\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Lookup table for btoa(), which converts a six-bit number into the\n * corresponding ASCII character.\n */\nfunction btoaLookup(idx) {\n  if (idx < 26) {\n    return String.fromCharCode(idx + 'A'.charCodeAt(0));\n  }\n  if (idx < 52) {\n    return String.fromCharCode(idx - 26 + 'a'.charCodeAt(0));\n  }\n  if (idx < 62) {\n    return String.fromCharCode(idx - 52 + '0'.charCodeAt(0));\n  }\n  if (idx == 62) {\n    return '+';\n  }\n  if (idx == 63) {\n    return '/';\n  }\n  // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n}\n\nmodule.exports = btoa;\n"]}