{"version":3,"sources":["walk.js"],"names":[],"mappings":"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","file":"walk-compiled.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).walk = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// AST walker module for Mozilla Parser API compatible trees\n\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression,\n// Statement, and ScopeBody, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.simple = simple;\nexports.ancestor = ancestor;\nexports.recursive = recursive;\nexports.findNodeAt = findNodeAt;\nexports.findNodeAround = findNodeAround;\nexports.findNodeAfter = findNodeAfter;\nexports.findNodeBefore = findNodeBefore;\nexports.make = make;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction simple(node, visitors, base, state, override) {\n  if (!base) base = exports.base;(function c(node, st, override) {\n    var type = override || node.type,\n        found = visitors[type];\n    base[type](node, st, c);\n    if (found) found(node, st);\n  })(node, state, override);\n}\n\n// An ancestor walk builds up an array of ancestor nodes (including\n// the current node) and passes them to the callback as the state parameter.\n\nfunction ancestor(node, visitors, base, state) {\n  if (!base) base = exports.base;\n  if (!state) state = [];(function c(node, st, override) {\n    var type = override || node.type,\n        found = visitors[type];\n    if (node != st[st.length - 1]) {\n      st = st.slice();\n      st.push(node);\n    }\n    base[type](node, st, c);\n    if (found) found(node, st);\n  })(node, state);\n}\n\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that's\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\n\nfunction recursive(node, state, funcs, base, override) {\n  var visitor = funcs ? exports.make(funcs, base) : base;(function c(node, st, override) {\n    visitor[override || node.type](node, st, c);\n  })(node, state, override);\n}\n\nfunction makeTest(test) {\n  if (typeof test == \"string\") return function (type) {\n    return type == test;\n  };else if (!test) return function () {\n    return true;\n  };else return test;\n}\n\nvar Found = function Found(node, state) {\n  _classCallCheck(this, Found);\n\n  this.node = node;this.state = state;\n}\n\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn't find a matching node.\n;\n\nfunction findNodeAt(node, start, end, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      if ((start == null || node.start <= start) && (end == null || node.end >= end)) base[type](node, st, c);\n      if ((start == null || node.start == start) && (end == null || node.end == end) && test(type, node)) throw new Found(node, st);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\n\nfunction findNodeAround(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      if (node.start > pos || node.end < pos) return;\n      base[type](node, st, c);\n      if (test(type, node)) throw new Found(node, st);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the outermost matching node after a given position.\n\nfunction findNodeAfter(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      if (node.end < pos) return;\n      var type = override || node.type;\n      if (node.start >= pos && test(type, node)) throw new Found(node, st);\n      base[type](node, st, c);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the outermost matching node before a given position.\n\nfunction findNodeBefore(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  var max = undefined;(function c(node, st, override) {\n    if (node.start > pos) return;\n    var type = override || node.type;\n    if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node)) max = new Found(node, st);\n    base[type](node, st, c);\n  })(node, state);\n  return max;\n}\n\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\n\nfunction make(funcs, base) {\n  if (!base) base = exports.base;\n  var visitor = {};\n  for (var type in base) visitor[type] = base[type];\n  for (var type in funcs) visitor[type] = funcs[type];\n  return visitor;\n}\n\nfunction skipThrough(node, st, c) {\n  c(node, st);\n}\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nexports.base = base;\nbase.Program = base.BlockStatement = function (node, st, c) {\n  for (var i = 0; i < node.body.length; ++i) {\n    c(node.body[i], st, \"Statement\");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression = function (node, st, c) {\n  return c(node.expression, st, \"Expression\");\n};\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) c(node.alternate, st, \"Statement\");\n};\nbase.LabeledStatement = function (node, st, c) {\n  return c(node.body, st, \"Statement\");\n};\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i = 0; i < node.cases.length; ++i) {\n    var cs = node.cases[i];\n    if (cs.test) c(cs.test, st, \"Expression\");\n    for (var j = 0; j < cs.consequent.length; ++j) {\n      c(cs.consequent[j], st, \"Statement\");\n    }\n  }\n};\nbase.ReturnStatement = base.YieldExpression = function (node, st, c) {\n  if (node.argument) c(node.argument, st, \"Expression\");\n};\nbase.ThrowStatement = base.SpreadElement = function (node, st, c) {\n  return c(node.argument, st, \"Expression\");\n};\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) {\n    c(node.handler.param, st, \"Pattern\");\n    c(node.handler.body, st, \"ScopeBody\");\n  }\n  if (node.finalizer) c(node.finalizer, st, \"Statement\");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) c(node.init, st, \"ForInit\");\n  if (node.test) c(node.test, st, \"Expression\");\n  if (node.update) c(node.update, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type == \"VariableDeclaration\") c(node, st);else c(node, st, \"Expression\");\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) {\n  return c(node, st, \"Function\");\n};\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0; i < node.declarations.length; ++i) {\n    c(node.declarations[i], st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) c(node.init, st, \"Expression\");\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) c(node.id, st, \"Pattern\");\n  for (var i = 0; i < node.params.length; i++) {\n    c(node.params[i], st, \"Pattern\");\n  }c(node.body, st, node.expression ? \"ScopeExpression\" : \"ScopeBody\");\n};\n// FIXME drop these node types in next major version\n// (They are awkward, and in ES6 every block can be a scope.)\nbase.ScopeBody = function (node, st, c) {\n  return c(node, st, \"Statement\");\n};\nbase.ScopeExpression = function (node, st, c) {\n  return c(node, st, \"Expression\");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type == \"Identifier\") c(node, st, \"VariablePattern\");else if (node.type == \"MemberExpression\") c(node, st, \"MemberPattern\");else c(node, st);\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) {\n  return c(node.argument, st, \"Pattern\");\n};\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0; i < node.elements.length; ++i) {\n    var elt = node.elements[i];\n    if (elt) c(elt, st, \"Pattern\");\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0; i < node.properties.length; ++i) {\n    c(node.properties[i].value, st, \"Pattern\");\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0; i < node.elements.length; ++i) {\n    var elt = node.elements[i];\n    if (elt) c(elt, st, \"Expression\");\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0; i < node.properties.length; ++i) {\n    c(node.properties[i], st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = base.TemplateLiteral = function (node, st, c) {\n  for (var i = 0; i < node.expressions.length; ++i) {\n    c(node.expressions[i], st, \"Expression\");\n  }\n};\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments) for (var i = 0; i < node.arguments.length; ++i) {\n    c(node.arguments[i], st, \"Expression\");\n  }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) c(node.property, st, \"Expression\");\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration) c(node.declaration, st, node.type == \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\");\n  if (node.source) c(node.source, st, \"Expression\");\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0; i < node.specifiers.length; i++) {\n    c(node.specifiers[i], st);\n  }c(node.source, st, \"Expression\");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st);\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) {\n  return c(node, st, \"Class\");\n};\nbase.Class = function (node, st, c) {\n  if (node.id) c(node.id, st, \"Pattern\");\n  if (node.superClass) c(node.superClass, st, \"Expression\");\n  for (var i = 0; i < node.body.body.length; i++) {\n    c(node.body.body[i], st);\n  }\n};\nbase.MethodDefinition = base.Property = function (node, st, c) {\n  if (node.computed) c(node.key, st, \"Expression\");\n  c(node.value, st, \"Expression\");\n};\nbase.ComprehensionExpression = function (node, st, c) {\n  for (var i = 0; i < node.blocks.length; i++) {\n    c(node.blocks[i].right, st, \"Expression\");\n  }c(node.body, st, \"Expression\");\n};\n\n},{}]},{},[1])(1)\n});"]}