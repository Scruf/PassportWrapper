{"version":3,"sources":["node.js"],"names":[],"mappings":"AAAA,SAAQ,MAAR,QAAqB,SAArB;AACA,SAAQ,cAAR,QAA6B,WAA7B;;AAEA,OAAO,MAAM,IAAN,CAAW;AAChB,cAAY,MAAZ,EAAoB,GAApB,EAAyB,GAAzB,EAA8B;AAC5B,SAAK,IAAL,GAAY,EAAZ,CAD4B;AAE5B,SAAK,KAAL,GAAa,GAAb,CAF4B;AAG5B,SAAK,GAAL,GAAW,CAAX,CAH4B;AAI5B,QAAI,OAAO,OAAP,CAAe,SAAf,EACF,KAAK,GAAL,GAAW,IAAI,cAAJ,CAAmB,MAAnB,EAA2B,GAA3B,CAAX,CADF;AAEA,QAAI,OAAO,OAAP,CAAe,gBAAf,EACF,KAAK,UAAL,GAAkB,OAAO,OAAP,CAAe,gBAAf,CADpB;AAEA,QAAI,OAAO,OAAP,CAAe,MAAf,EACF,KAAK,KAAL,GAAa,CAAC,GAAD,EAAM,CAAN,CAAb,CADF;GARF;CADK;;;;AAgBP,MAAM,KAAK,OAAO,SAAP;;AAEX,GAAG,SAAH,GAAe,YAAW;AACxB,SAAO,IAAI,IAAJ,CAAS,IAAT,EAAe,KAAK,KAAL,EAAY,KAAK,QAAL,CAAlC,CADwB;CAAX;;AAIf,GAAG,WAAH,GAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAClC,SAAO,IAAI,IAAJ,CAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,CAAP,CADkC;CAAnB;;;;AAMjB,SAAS,YAAT,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C;AAC1C,OAAK,IAAL,GAAY,IAAZ,CAD0C;AAE1C,OAAK,GAAL,GAAW,GAAX,CAF0C;AAG1C,MAAI,KAAK,OAAL,CAAa,SAAb,EACF,KAAK,GAAL,CAAS,GAAT,GAAe,GAAf,CADF;AAEA,MAAI,KAAK,OAAL,CAAa,MAAb,EACF,KAAK,KAAL,CAAW,CAAX,IAAgB,GAAhB,CADF;AAEA,SAAO,IAAP,CAP0C;CAA5C;;AAUA,GAAG,UAAH,GAAgB,UAAS,IAAT,EAAe,IAAf,EAAqB;AACnC,SAAO,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,KAAK,UAAL,EAAiB,KAAK,aAAL,CAA5D,CADmC;CAArB;;;;AAMhB,GAAG,YAAH,GAAkB,UAAS,IAAT,EAAe,IAAf,EAAqB,GAArB,EAA0B,GAA1B,EAA+B;AAC/C,SAAO,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,GAApC,EAAyC,GAAzC,CAAP,CAD+C;CAA/B","file":"node-compiled.js","sourcesContent":["import {Parser} from \"./state\"\nimport {SourceLocation} from \"./locutil\"\n\nexport class Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\"\n    this.start = pos\n    this.end = 0\n    if (parser.options.locations)\n      this.loc = new SourceLocation(parser, loc)\n    if (parser.options.directSourceFile)\n      this.sourceFile = parser.options.directSourceFile\n    if (parser.options.ranges)\n      this.range = [pos, 0]\n  }\n}\n\n// Start an AST node, attaching a start offset.\n\nconst pp = Parser.prototype\n\npp.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n}\n\npp.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type\n  node.end = pos\n  if (this.options.locations)\n    node.loc.end = loc\n  if (this.options.ranges)\n    node.range[1] = pos\n  return node\n}\n\npp.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n}\n\n// Finish node at given position\n\npp.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n}\n"]}