{"version":3,"sources":["state.js"],"names":[],"mappings":"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","file":"state-compiled.js","sourcesContent":["import {tokenizer, SourceLocation, tokTypes as tt, Node, lineBreak, isNewLine} from \"..\"\n\n// Registered plugins\nexport const pluginsLoose = {}\n\nexport class LooseParser {\n  constructor(input, options) {\n    this.toks = tokenizer(input, options)\n    this.options = this.toks.options\n    this.input = this.toks.input\n    this.tok = this.last = {type: tt.eof, start: 0, end: 0}\n    if (this.options.locations) {\n      let here = this.toks.curPosition()\n      this.tok.loc = new SourceLocation(this.toks, here, here)\n    }\n    this.ahead = []; // Tokens ahead\n    this.context = []; // Indentation contexted\n    this.curIndent = 0\n    this.curLineStart = 0\n    this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n    // Load plugins\n    this.options.pluginsLoose = options.pluginsLoose || {}\n    this.loadPlugins(this.options.pluginsLoose)\n  }\n\n  startNode() {\n    return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n  }\n\n  storeCurrentPos() {\n    return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n  }\n\n  startNodeAt(pos) {\n    if (this.options.locations) {\n      return new Node(this.toks, pos[0], pos[1])\n    } else {\n      return new Node(this.toks, pos)\n    }\n  }\n\n  finishNode(node, type) {\n    node.type = type\n    node.end = this.last.end\n    if (this.options.locations)\n      node.loc.end = this.last.loc.end\n    if (this.options.ranges)\n      node.range[1] = this.last.end\n    return node\n  }\n\n  dummyNode(type) {\n    let dummy = this.startNode()\n    dummy.type = type\n    dummy.end = dummy.start\n    if (this.options.locations)\n      dummy.loc.end = dummy.loc.start\n    if (this.options.ranges)\n      dummy.range[1] = dummy.start\n    this.last = {type: tt.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n    return dummy\n  }\n\n  dummyIdent() {\n    let dummy = this.dummyNode(\"Identifier\")\n    dummy.name = \"✖\"\n    return dummy\n  }\n\n  dummyString() {\n    let dummy = this.dummyNode(\"Literal\")\n    dummy.value = dummy.raw = \"✖\"\n    return dummy\n  }\n\n  eat(type) {\n    if (this.tok.type === type) {\n      this.next()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isContextual(name) {\n    return this.tok.type === tt.name && this.tok.value === name\n  }\n\n  eatContextual(name) {\n    return this.tok.value === name && this.eat(tt.name)\n  }\n\n  canInsertSemicolon() {\n    return this.tok.type === tt.eof || this.tok.type === tt.braceR ||\n      lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n  }\n\n  semicolon() {\n    return this.eat(tt.semi)\n  }\n\n  expect(type) {\n    if (this.eat(type)) return true\n    for (let i = 1; i <= 2; i++) {\n      if (this.lookAhead(i).type == type) {\n        for (let j = 0; j < i; j++) this.next()\n        return true\n      }\n    }\n  }\n\n  pushCx() {\n    this.context.push(this.curIndent)\n  }\n\n  popCx() {\n    this.curIndent = this.context.pop()\n  }\n\n  lineEnd(pos) {\n    while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n    return pos\n  }\n\n  indentationAfter(pos) {\n    for (let count = 0;; ++pos) {\n      let ch = this.input.charCodeAt(pos)\n      if (ch === 32) ++count\n      else if (ch === 9) count += this.options.tabSize\n      else return count\n    }\n  }\n\n  closes(closeTok, indent, line, blockHeuristic) {\n    if (this.tok.type === closeTok || this.tok.type === tt.eof) return true\n    return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n      (!blockHeuristic || this.nextLineStart >= this.input.length ||\n       this.indentationAfter(this.nextLineStart) < indent)\n  }\n\n  tokenStartsLine() {\n    for (let p = this.tok.start - 1; p >= this.curLineStart; --p) {\n      let ch = this.input.charCodeAt(p)\n      if (ch !== 9 && ch !== 32) return false\n    }\n    return true\n  }\n\n  extend(name, f) {\n    this[name] = f(this[name])\n  }\n\n  loadPlugins(pluginConfigs) {\n    for (let name in pluginConfigs) {\n      let plugin = pluginsLoose[name]\n      if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n      plugin(this, pluginConfigs[name])\n    }\n  }\n}\n"]}