{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["\"use strict\";\n/**\n * @fileOverview\n * A collection of general utility functions..\n */\n\n/*\n * Copyright (c) 2011, 2012, 2014 Ron Garret\n * Copyright (c) 2007, 2013, 2014 Michele Bini\n * Copyright (c) 2014 Mega Limited\n * under the MIT License.\n *\n * Authors: Guy K. Kloss, Michele Bini, Ron Garret\n *\n * You should have received a copy of the license along with this program.\n */\n\nvar core = require('./core');\n\n    /**\n     * @exports jodid25519/utils\n     * A collection of general utility functions..\n     *\n     * @description\n     * A collection of general utility functions..\n     */\n    var ns = {};\n\n    var _HEXCHARS = \"0123456789abcdef\";\n\n    function _hexencode(vector) {\n        var result = [];\n        for (var i = vector.length - 1; i >= 0; i--) {\n            var value = vector[i];\n            result.push(_HEXCHARS.substr((value >>> 12) & 0x0f, 1));\n            result.push(_HEXCHARS.substr((value >>> 8) & 0x0f, 1));\n            result.push(_HEXCHARS.substr((value >>> 4) & 0x0f, 1));\n            result.push(_HEXCHARS.substr(value & 0x0f, 1));\n        }\n        return result.join('');\n    }\n\n    function _hexdecode(vector) {\n        var result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (var i = vector.length - 1, l = 0; i >= 0; i -= 4) {\n            result[l] = (_HEXCHARS.indexOf(vector.charAt(i)))\n                      | (_HEXCHARS.indexOf(vector.charAt(i - 1)) << 4)\n                      | (_HEXCHARS.indexOf(vector.charAt(i - 2)) << 8)\n                      | (_HEXCHARS.indexOf(vector.charAt(i - 3)) << 12);\n            l++;\n        }\n        return result;\n    }\n\n    var _BASE32CHARS = \"abcdefghijklmnopqrstuvwxyz234567\";\n\n    var _BASE32VALUES = (function () {\n        var result = {};\n        for (var i = 0; i < _BASE32CHARS.length; i++) {\n            result[_BASE32CHARS.charAt(i)] = i;\n        }\n        return result;\n    })();\n\n    function _base32encode(n) {\n        var c;\n        var r = \"\";\n        for (c = 0; c < 255; c += 5) {\n            r = _BASE32CHARS.substr(core.getbit(n, c)\n                                    + (core.getbit(n, c + 1) << 1)\n                                    + (core.getbit(n, c + 2) << 2)\n                                    + (core.getbit(n, c + 3) << 3)\n                                    + (core.getbit(n, c + 4) << 4), 1)\n                                    + r;\n        }\n        return r;\n    }\n\n    function _base32decode(n) {\n        var c = 0;\n        var r = core.ZERO();\n        var l = n.length;\n        for (c = 0; (l > 0) && (c < 255); c += 5) {\n            l--;\n            var v = _BASE32VALUES[n.substr(l, 1)];\n            core.setbit(r, c, v & 1);\n            v >>= 1;\n            core.setbit(r, c + 1, v & 1);\n            v >>= 1;\n            core.setbit(r, c + 2, v & 1);\n            v >>= 1;\n            core.setbit(r, c + 3, v & 1);\n            v >>= 1;\n            core.setbit(r, c + 4, v & 1);\n           }\n        return r;\n    }\n\n    function _map(f, l) {\n        var result = new Array(l.length);\n        for (var i = 0; i < l.length; i++) {\n            result[i] = f(l[i]);\n        }\n        return result;\n    }\n\n    function _chr(n) {\n        return String.fromCharCode(n);\n    }\n\n    function _ord(c) {\n        return c.charCodeAt(0);\n    }\n\n    function _bytes2string(bytes) {\n        return _map(_chr, bytes).join('');\n    }\n\n    function _string2bytes(s) {\n        return _map(_ord, s);\n    }\n\n\n    // Expose some functions to the outside through this name space.\n\n    /**\n     * Encodes an array of unsigned 8-bit integers to a hex string.\n     *\n     * @function\n     * @param vector {array}\n     *     Array containing the byte values.\n     * @returns {string}\n     *     String containing vector in a hexadecimal representation.\n     */\n    ns.hexEncode = _hexencode;\n\n\n    /**\n     * Decodes a hex string to an array of unsigned 8-bit integers.\n     *\n     * @function\n     * @param vector {string}\n     *     String containing vector in a hexadecimal representation.\n     * @returns {array}\n     *     Array containing the byte values.\n     */\n    ns.hexDecode = _hexdecode;\n\n\n    /**\n     * Encodes an array of unsigned 8-bit integers using base32 encoding.\n     *\n     * @function\n     * @param vector {array}\n     *     Array containing the byte values.\n     * @returns {string}\n     *     String containing vector in a hexadecimal representation.\n     */\n    ns.base32encode = _base32encode;\n\n\n    /**\n     * Decodes a base32 encoded string to an array of unsigned 8-bit integers.\n     *\n     * @function\n     * @param vector {string}\n     *     String containing vector in a hexadecimal representation.\n     * @returns {array}\n     *     Array containing the byte values.\n     */\n    ns.base32decode = _base32decode;\n\n\n    /**\n     * Converts an unsigned 8-bit integer array representation to a byte string.\n     *\n     * @function\n     * @param vector {array}\n     *     Array containing the byte values.\n     * @returns {string}\n     *     Byte string representation of vector.\n     */\n    ns.bytes2string = _bytes2string;\n\n\n    /**\n     * Converts a byte string representation to an array of unsigned\n     * 8-bit integers.\n     *\n     * @function\n     * @param vector {array}\n     *     Array containing the byte values.\n     * @returns {string}\n     *     Byte string representation of vector.\n     */\n    ns.string2bytes = _string2bytes;\n\nmodule.exports = ns;\n"]}