{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["// Copyright 2012 Joyent, Inc.  All rights reserved.\n\nvar assert = require('assert-plus');\nvar util = require('util');\nvar utils = require('./utils');\n\n\n\n///--- Globals\n\nvar HASH_ALGOS = utils.HASH_ALGOS;\nvar PK_ALGOS = utils.PK_ALGOS;\nvar HttpSignatureError = utils.HttpSignatureError;\nvar InvalidAlgorithmError = utils.InvalidAlgorithmError;\nvar validateAlgorithm = utils.validateAlgorithm;\n\nvar State = {\n  New: 0,\n  Params: 1\n};\n\nvar ParamsState = {\n  Name: 0,\n  Quote: 1,\n  Value: 2,\n  Comma: 3\n};\n\n\n///--- Specific Errors\n\n\nfunction ExpiredRequestError(message) {\n  HttpSignatureError.call(this, message, ExpiredRequestError);\n}\nutil.inherits(ExpiredRequestError, HttpSignatureError);\n\n\nfunction InvalidHeaderError(message) {\n  HttpSignatureError.call(this, message, InvalidHeaderError);\n}\nutil.inherits(InvalidHeaderError, HttpSignatureError);\n\n\nfunction InvalidParamsError(message) {\n  HttpSignatureError.call(this, message, InvalidParamsError);\n}\nutil.inherits(InvalidParamsError, HttpSignatureError);\n\n\nfunction MissingHeaderError(message) {\n  HttpSignatureError.call(this, message, MissingHeaderError);\n}\nutil.inherits(MissingHeaderError, HttpSignatureError);\n\nfunction StrictParsingError(message) {\n  HttpSignatureError.call(this, message, StrictParsingError);\n}\nutil.inherits(StrictParsingError, HttpSignatureError);\n\n///--- Exported API\n\nmodule.exports = {\n\n  /**\n   * Parses the 'Authorization' header out of an http.ServerRequest object.\n   *\n   * Note that this API will fully validate the Authorization header, and throw\n   * on any error.  It will not however check the signature, or the keyId format\n   * as those are specific to your environment.  You can use the options object\n   * to pass in extra constraints.\n   *\n   * As a response object you can expect this:\n   *\n   *     {\n   *       \"scheme\": \"Signature\",\n   *       \"params\": {\n   *         \"keyId\": \"foo\",\n   *         \"algorithm\": \"rsa-sha256\",\n   *         \"headers\": [\n   *           \"date\" or \"x-date\",\n   *           \"digest\"\n   *         ],\n   *         \"signature\": \"base64\"\n   *       },\n   *       \"signingString\": \"ready to be passed to crypto.verify()\"\n   *     }\n   *\n   * @param {Object} request an http.ServerRequest.\n   * @param {Object} options an optional options object with:\n   *                   - clockSkew: allowed clock skew in seconds (default 300).\n   *                   - headers: required header names (def: date or x-date)\n   *                   - algorithms: algorithms to support (default: all).\n   *                   - strict: should enforce latest spec parsing\n   *                             (default: false).\n   * @return {Object} parsed out object (see above).\n   * @throws {TypeError} on invalid input.\n   * @throws {InvalidHeaderError} on an invalid Authorization header error.\n   * @throws {InvalidParamsError} if the params in the scheme are invalid.\n   * @throws {MissingHeaderError} if the params indicate a header not present,\n   *                              either in the request headers from the params,\n   *                              or not in the params from a required header\n   *                              in options.\n   * @throws {StrictParsingError} if old attributes are used in strict parsing\n   *                              mode.\n   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.\n   */\n  parseRequest: function parseRequest(request, options) {\n    assert.object(request, 'request');\n    assert.object(request.headers, 'request.headers');\n    if (options === undefined) {\n      options = {};\n    }\n    if (options.headers === undefined) {\n      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];\n    }\n    assert.object(options, 'options');\n    assert.arrayOfString(options.headers, 'options.headers');\n    assert.optionalNumber(options.clockSkew, 'options.clockSkew');\n\n    if (!request.headers.authorization)\n      throw new MissingHeaderError('no authorization header present in ' +\n                                   'the request');\n\n    options.clockSkew = options.clockSkew || 300;\n\n\n    var i = 0;\n    var state = State.New;\n    var substate = ParamsState.Name;\n    var tmpName = '';\n    var tmpValue = '';\n\n    var parsed = {\n      scheme: '',\n      params: {},\n      signingString: '',\n\n      get algorithm() {\n        return this.params.algorithm.toUpperCase();\n      },\n\n      get keyId() {\n        return this.params.keyId;\n      }\n    };\n\n    var authz = request.headers.authorization;\n    for (i = 0; i < authz.length; i++) {\n      var c = authz.charAt(i);\n\n      switch (Number(state)) {\n\n      case State.New:\n        if (c !== ' ') parsed.scheme += c;\n        else state = State.Params;\n        break;\n\n      case State.Params:\n        switch (Number(substate)) {\n\n        case ParamsState.Name:\n          var code = c.charCodeAt(0);\n          // restricted name of A-Z / a-z\n          if ((code >= 0x41 && code <= 0x5a) || // A-Z\n              (code >= 0x61 && code <= 0x7a)) { // a-z\n            tmpName += c;\n          } else if (c === '=') {\n            if (tmpName.length === 0)\n              throw new InvalidHeaderError('bad param format');\n            substate = ParamsState.Quote;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        case ParamsState.Quote:\n          if (c === '\"') {\n            tmpValue = '';\n            substate = ParamsState.Value;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        case ParamsState.Value:\n          if (c === '\"') {\n            parsed.params[tmpName] = tmpValue;\n            substate = ParamsState.Comma;\n          } else {\n            tmpValue += c;\n          }\n          break;\n\n        case ParamsState.Comma:\n          if (c === ',') {\n            tmpName = '';\n            substate = ParamsState.Name;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        default:\n          throw new Error('Invalid substate');\n        }\n        break;\n\n      default:\n        throw new Error('Invalid substate');\n      }\n\n    }\n\n    if (!parsed.params.headers || parsed.params.headers === '') {\n      if (request.headers['x-date']) {\n        parsed.params.headers = ['x-date'];\n      } else {\n        parsed.params.headers = ['date'];\n      }\n    } else {\n      parsed.params.headers = parsed.params.headers.split(' ');\n    }\n\n    // Minimally validate the parsed object\n    if (!parsed.scheme || parsed.scheme !== 'Signature')\n      throw new InvalidHeaderError('scheme was not \"Signature\"');\n\n    if (!parsed.params.keyId)\n      throw new InvalidHeaderError('keyId was not specified');\n\n    if (!parsed.params.algorithm)\n      throw new InvalidHeaderError('algorithm was not specified');\n\n    if (!parsed.params.signature)\n      throw new InvalidHeaderError('signature was not specified');\n\n    // Check the algorithm against the official list\n    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();\n    try {\n      validateAlgorithm(parsed.params.algorithm);\n    } catch (e) {\n      if (e instanceof InvalidAlgorithmError)\n        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +\n          'supported'));\n      else\n        throw (e);\n    }\n\n    // Build the signingString\n    for (i = 0; i < parsed.params.headers.length; i++) {\n      var h = parsed.params.headers[i].toLowerCase();\n      parsed.params.headers[i] = h;\n\n      if (h === 'request-line') {\n        if (!options.strict) {\n          /*\n           * We allow headers from the older spec drafts if strict parsing isn't\n           * specified in options.\n           */\n          parsed.signingString +=\n            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;\n        } else {\n          /* Strict parsing doesn't allow older draft headers. */\n          throw (new StrictParsingError('request-line is not a valid header ' +\n            'with strict parsing enabled.'));\n        }\n      } else if (h === '(request-target)') {\n        parsed.signingString +=\n          '(request-target): ' + request.method.toLowerCase() + ' ' +\n          request.url;\n      } else {\n        var value = request.headers[h];\n        if (value === undefined)\n          throw new MissingHeaderError(h + ' was not in the request');\n        parsed.signingString += h + ': ' + value;\n      }\n\n      if ((i + 1) < parsed.params.headers.length)\n        parsed.signingString += '\\n';\n    }\n\n    // Check against the constraints\n    var date;\n    if (request.headers.date || request.headers['x-date']) {\n        if (request.headers['x-date']) {\n          date = new Date(request.headers['x-date']);\n        } else {\n          date = new Date(request.headers.date);\n        }\n      var now = new Date();\n      var skew = Math.abs(now.getTime() - date.getTime());\n\n      if (skew > options.clockSkew * 1000) {\n        throw new ExpiredRequestError('clock skew of ' +\n                                      (skew / 1000) +\n                                      's was greater than ' +\n                                      options.clockSkew + 's');\n      }\n    }\n\n    options.headers.forEach(function (hdr) {\n      // Remember that we already checked any headers in the params\n      // were in the request, so if this passes we're good.\n      if (parsed.params.headers.indexOf(hdr) < 0)\n        throw new MissingHeaderError(hdr + ' was not a signed header');\n    });\n\n    if (options.algorithms) {\n      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)\n        throw new InvalidParamsError(parsed.params.algorithm +\n                                     ' is not a supported algorithm');\n    }\n\n    return parsed;\n  }\n\n};\n"]}