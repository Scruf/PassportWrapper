{"version":3,"sources":["verror.js"],"names":[],"mappings":"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","file":"verror-compiled.js","sourcesContent":["/*\n * verror.js: richer JavaScript errors\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\n\n/*\n * Public interface\n */\nexports.VError = VError;\nexports.WError = WError;\nexports.MultiError = MultiError;\n\n/*\n * Like JavaScript's built-in Error class, but supports a \"cause\" argument and a\n * printf-style message.  The cause argument can be null.\n */\nfunction VError(options)\n{\n\tvar args, causedBy, ctor, tailmsg;\n\n\tif (options instanceof Error || typeof (options) === 'object') {\n\t\targs = Array.prototype.slice.call(arguments, 1);\n\t} else {\n\t\targs = Array.prototype.slice.call(arguments, 0);\n\t\toptions = undefined;\n\t}\n\n\ttailmsg = args.length > 0 ?\n\t    mod_extsprintf.sprintf.apply(null, args) : '';\n\tthis.jse_shortmsg = tailmsg;\n\tthis.jse_summary = tailmsg;\n\n\tif (options) {\n\t\tcausedBy = options.cause;\n\n\t\tif (!causedBy || !(options.cause instanceof Error))\n\t\t\tcausedBy = options;\n\n\t\tif (causedBy && (causedBy instanceof Error)) {\n\t\t\tthis.jse_cause = causedBy;\n\t\t\tthis.jse_summary += ': ' + causedBy.message;\n\t\t}\n\t}\n\n\tthis.message = this.jse_summary;\n\tError.call(this, this.jse_summary);\n\n\tif (Error.captureStackTrace) {\n\t\tctor = options ? options.constructorOpt : undefined;\n\t\tctor = ctor || arguments.callee;\n\t\tError.captureStackTrace(this, ctor);\n\t}\n}\n\nmod_util.inherits(VError, Error);\nVError.prototype.name = 'VError';\n\nVError.prototype.toString = function ve_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\n\treturn (str);\n};\n\nVError.prototype.cause = function ve_cause()\n{\n\treturn (this.jse_cause);\n};\n\n\n/*\n * Represents a collection of errors for the purpose of consumers that generally\n * only deal with one error.  Callers can extract the individual errors\n * contained in this object, but may also just treat it as a normal single\n * error, in which case a summary message will be printed.\n */\nfunction MultiError(errors)\n{\n\tmod_assert.ok(errors.length > 0);\n\tthis.ase_errors = errors;\n\n\tVError.call(this, errors[0], 'first of %d error%s',\n\t    errors.length, errors.length == 1 ? '' : 's');\n}\n\nmod_util.inherits(MultiError, VError);\n\n\n\n/*\n * Like JavaScript's built-in Error class, but supports a \"cause\" argument which\n * is wrapped, not \"folded in\" as with VError.\tAccepts a printf-style message.\n * The cause argument can be null.\n */\nfunction WError(options)\n{\n\tError.call(this);\n\n\tvar args, cause, ctor;\n\tif (typeof (options) === 'object') {\n\t\targs = Array.prototype.slice.call(arguments, 1);\n\t} else {\n\t\targs = Array.prototype.slice.call(arguments, 0);\n\t\toptions = undefined;\n\t}\n\n\tif (args.length > 0) {\n\t\tthis.message = mod_extsprintf.sprintf.apply(null, args);\n\t} else {\n\t\tthis.message = '';\n\t}\n\n\tif (options) {\n\t\tif (options instanceof Error) {\n\t\t\tcause = options;\n\t\t} else {\n\t\t\tcause = options.cause;\n\t\t\tctor = options.constructorOpt;\n\t\t}\n\t}\n\n\tError.captureStackTrace(this, ctor || this.constructor);\n\tif (cause)\n\t\tthis.cause(cause);\n\n}\n\nmod_util.inherits(WError, Error);\nWError.prototype.name = 'WError';\n\n\nWError.prototype.toString = function we_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\tif (this.we_cause && this.we_cause.message)\n\t\tstr += '; caused by ' + this.we_cause.toString();\n\n\treturn (str);\n};\n\nWError.prototype.cause = function we_cause(c)\n{\n\tif (c instanceof Error)\n\t\tthis.we_cause = c;\n\n\treturn (this.we_cause);\n};\n"]}