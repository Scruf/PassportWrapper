{"version":3,"sources":["tests.js"],"names":[],"mappings":"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","file":"tests-compiled.js","sourcesContent":["var assert = require('assert');\r\nvar vows = require('vows');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\nvar validate = require('../lib/validate').validate;\r\n\r\n\r\nvar revision = 'draft-03';\r\nvar schemaRoot = path.join(__dirname, '..', revision);\r\nvar schemaNames = ['schema', 'hyper-schema', 'links', 'json-ref' ];\r\nvar schemas = {};\r\n\r\nschemaNames.forEach(function(name) {\r\n    var file = path.join(schemaRoot, name);\r\n    schemas[name] = loadSchema(file);\r\n});\r\n\r\nschemaNames.forEach(function(name) {\r\n    var s, n = name+'-nsd', f = path.join(schemaRoot, name);\r\n    schemas[n] = loadSchema(f);\r\n    s = schemas[n];\r\n    delete s['$schema'];\r\n});\r\n\r\nfunction loadSchema(path) {\r\n    var data = fs.readFileSync(path, 'utf-8');\r\n    var schema = JSON.parse(data);\r\n    return schema;\r\n}\r\n\r\nfunction resultIsValid() {\r\n    return function(result) {\r\n        assert.isObject(result);\r\n        //assert.isBoolean(result.valid);\r\n        assert.equal(typeof(result.valid), 'boolean');\r\n        assert.isArray(result.errors);\r\n        for (var i = 0; i < result.errors.length; i++) {\r\n            assert.notEqual(result.errors[i], null, 'errors['+i+'] is null');\r\n        }\r\n    }\r\n}\r\n\r\nfunction assertValidates(doc, schema) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+', '+schema+')'] = {\r\n        topic: validate(schemas[doc], schemas[schema]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) {\r\n            // XXX work-around for bug in vows: [null] chokes it\r\n            if (result.errors[0] == null) assert.fail('(errors contains null)');\r\n            assert.length(result.errors, 0);\r\n        }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nfunction assertSelfValidates(doc) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+')'] = {\r\n        topic: validate(schemas[doc]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) { assert.length(result.errors, 0); }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nvar suite = vows.describe('JSON Schema').addBatch({\r\n    'Core-NSD self-validates': assertSelfValidates('schema-nsd'),\r\n    'Core-NSD/Core-NSD': assertValidates('schema-nsd', 'schema-nsd'),\r\n    'Core-NSD/Core': assertValidates('schema-nsd', 'schema'),\r\n\r\n    'Core self-validates': assertSelfValidates('schema'),\r\n    'Core/Core': assertValidates('schema', 'schema'),\r\n\r\n    'Hyper-NSD self-validates': assertSelfValidates('hyper-schema-nsd'),\r\n    'Hyper self-validates': assertSelfValidates('hyper-schema'),\r\n    'Hyper/Hyper': assertValidates('hyper-schema', 'hyper-schema'),\r\n    'Hyper/Core': assertValidates('hyper-schema', 'schema'),\r\n\r\n    'Links-NSD self-validates': assertSelfValidates('links-nsd'),\r\n    'Links self-validates': assertSelfValidates('links'),\r\n    'Links/Hyper': assertValidates('links', 'hyper-schema'),\r\n    'Links/Core': assertValidates('links', 'schema'),\r\n\r\n    'Json-Ref self-validates': assertSelfValidates('json-ref'),\r\n    'Json-Ref/Hyper': assertValidates('json-ref', 'hyper-schema'),\r\n    'Json-Ref/Core': assertValidates('json-ref', 'schema')\r\n}).export(module);\r\n"]}