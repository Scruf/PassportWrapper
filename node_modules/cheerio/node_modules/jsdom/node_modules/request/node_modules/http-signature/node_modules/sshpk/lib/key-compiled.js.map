{"version":3,"sources":["key.js"],"names":[],"mappings":"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","file":"key-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Key;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar DiffieHellman = require('./dhe');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar PrivateKey = require('./private-key');\nvar edCompat;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh'] = require('./formats/ssh');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\n\nfunction Key(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\tassert.optionalString(opts.comment, 'options.comment');\n\n\tvar algInfo = algs.info[opts.type];\n\tif (typeof (algInfo) !== 'object')\n\t\tthrow (new InvalidAlgorithmError(opts.type));\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n\tthis.comment = undefined;\n\tthis.source = opts.source;\n\n\t/* for speeding up hashing/fingerprint operations */\n\tthis._rfc4253Cache = opts._rfc4253Cache;\n\tthis._hashCache = {};\n\n\tvar sz;\n\tthis.curve = undefined;\n\tif (this.type === 'ecdsa') {\n\t\tvar curve = this.part.curve.data.toString();\n\t\tthis.curve = curve;\n\t\tsz = algs.curves[curve].size;\n\t} else if (this.type === 'ed25519') {\n\t\tsz = 256;\n\t\tthis.curve = 'curve25519';\n\t} else {\n\t\tvar szPart = this.part[algInfo.sizePart];\n\t\tsz = szPart.data.length;\n\t\tsz = sz * 8 - utils.countZeros(szPart.data);\n\t}\n\tthis.size = sz;\n}\n\nKey.formats = formats;\n\nKey.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'ssh';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\n\tif (format === 'rfc4253') {\n\t\tif (this._rfc4253Cache === undefined)\n\t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n\t\treturn (this._rfc4253Cache);\n\t}\n\n\treturn (formats[format].write(this));\n};\n\nKey.prototype.toString = function (format) {\n\treturn (this.toBuffer(format).toString());\n};\n\nKey.prototype.hash = function (algo) {\n\tassert.string(algo, 'algorithm');\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tif (this._hashCache[algo])\n\t\treturn (this._hashCache[algo]);\n\n\tvar hash = crypto.createHash(algo).\n\t    update(this.toBuffer('rfc4253')).digest();\n\t/* Workaround for node 0.8 */\n\tif (typeof (hash) === 'string')\n\t\thash = new Buffer(hash, 'binary');\n\tthis._hashCache[algo] = hash;\n\treturn (hash);\n};\n\nKey.prototype.fingerprint = function (algo) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tassert.string(algo, 'algorithm');\n\tvar opts = {\n\t\thash: this.hash(algo),\n\t\talgorithm: algo\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nKey.prototype.defaultHashAlgorithm = function () {\n\tvar hashAlgo = 'sha1';\n\tif (this.type === 'rsa')\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'dsa' && this.size > 1024)\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'ed25519')\n\t\thashAlgo = 'sha512';\n\tif (this.type === 'ecdsa') {\n\t\tif (this.size <= 256)\n\t\t\thashAlgo = 'sha256';\n\t\telse if (this.size <= 384)\n\t\t\thashAlgo = 'sha384';\n\t\telse\n\t\t\thashAlgo = 'sha512';\n\t}\n\treturn (hashAlgo);\n};\n\nKey.prototype.createVerify = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Verifier(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = this.type.toUpperCase() + '-';\n\t\tif (this.type === 'ecdsa')\n\t\t\tnm = 'ecdsa-with-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldVerify = v.verify.bind(v);\n\tvar key = this.toBuffer('pkcs8');\n\tvar self = this;\n\tv.verify = function (signature, fmt) {\n\t\tif (Signature.isSignature(signature, [2, 0])) {\n\t\t\tif (signature.type !== self.type)\n\t\t\t\treturn (false);\n\t\t\tif (signature.hashAlgorithm &&\n\t\t\t    signature.hashAlgorithm !== hashAlgo)\n\t\t\t\treturn (false);\n\t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n\t\t} else if (typeof (signature) === 'string' ||\n\t\t    Buffer.isBuffer(signature)) {\n\t\t\treturn (oldVerify(key, signature, fmt));\n\n\t\t/*\n\t\t * Avoid doing this on valid arguments, walking the prototype\n\t\t * chain can be quite slow.\n\t\t */\n\t\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\t\tthrow (new Error('signature was created by too old ' +\n\t\t\t    'a version of sshpk and cannot be verified'));\n\n\t\t} else {\n\t\t\tthrow (new TypeError('signature must be a string, ' +\n\t\t\t    'Buffer, or Signature object'));\n\t\t}\n\t};\n\treturn (v);\n};\n\nKey.prototype.createDiffieHellman = function () {\n\tif (this.type === 'rsa')\n\t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n\treturn (new DiffieHellman(this));\n};\nKey.prototype.createDH = Key.prototype.createDiffieHellman;\n\nKey.parse = function (data, format, name) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (name === undefined)\n\t\tname = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data);\n\t\tif (k instanceof PrivateKey)\n\t\t\tk = k.toPublic();\n\t\tif (!k.comment)\n\t\t\tk.comment = name;\n\t\treturn (k);\n\t} catch (e) {\n\t\tthrow (new KeyParseError(name, format, e));\n\t}\n};\n\nKey.isKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Key, ver));\n};\n\n/*\n * API versions for Key:\n * [1,0] -- initial ver, may take Signature for createVerify or may not\n * [1,1] -- added pkcs1, pkcs8 formats\n * [1,2] -- added auto, ssh-private, openssh formats\n * [1,3] -- added defaultHashAlgorithm\n * [1,4] -- added ed support, createDH\n * [1,5] -- first explicitly tagged version\n */\nKey.prototype._sshpkApiVersion = [1, 5];\n\nKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tassert.func(obj.fingerprint);\n\tif (obj.createDH)\n\t\treturn ([1, 4]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 3]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 2]);\n\tif (obj.formats['pkcs1'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}