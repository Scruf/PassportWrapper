{"version":3,"sources":["ed-compat.js"],"names":[],"mappings":"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","file":"ed-compat-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tVerifier: Verifier,\n\tSigner: Signer\n};\n\nvar nacl;\nvar stream = require('stream');\nvar util = require('util');\nvar assert = require('assert-plus');\nvar Signature = require('./signature');\n\nfunction Verifier(key, hashAlgo) {\n\tif (nacl === undefined)\n\t\tnacl = require('tweetnacl');\n\n\tif (hashAlgo.toLowerCase() !== 'sha512')\n\t\tthrow (new Error('ED25519 only supports the use of ' +\n\t\t    'SHA-512 hashes'));\n\n\tthis.key = key;\n\tthis.chunks = [];\n\n\tstream.Writable.call(this, {});\n}\nutil.inherits(Verifier, stream.Writable);\n\nVerifier.prototype._write = function (chunk, enc, cb) {\n\tthis.chunks.push(chunk);\n\tcb();\n};\n\nVerifier.prototype.update = function (chunk) {\n\tif (typeof (chunk) === 'string')\n\t\tchunk = new Buffer(chunk, 'binary');\n\tthis.chunks.push(chunk);\n};\n\nVerifier.prototype.verify = function (signature, fmt) {\n\tvar sig;\n\tif (Signature.isSignature(signature, [2, 0])) {\n\t\tif (signature.type !== 'ed25519')\n\t\t\treturn (false);\n\t\tsig = signature.toBuffer('raw');\n\n\t} else if (typeof (signature) === 'string') {\n\t\tsig = new Buffer(signature, 'base64');\n\n\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\tthrow (new Error('signature was created by too old ' +\n\t\t    'a version of sshpk and cannot be verified'));\n\t}\n\n\tassert.buffer(sig);\n\treturn (nacl.sign.detached.verify(\n\t    new Uint8Array(Buffer.concat(this.chunks)),\n\t    new Uint8Array(sig),\n\t    new Uint8Array(this.key.part.R.data)));\n};\n\nfunction Signer(key, hashAlgo) {\n\tif (nacl === undefined)\n\t\tnacl = require('tweetnacl');\n\n\tif (hashAlgo.toLowerCase() !== 'sha512')\n\t\tthrow (new Error('ED25519 only supports the use of ' +\n\t\t    'SHA-512 hashes'));\n\n\tthis.key = key;\n\tthis.chunks = [];\n\n\tstream.Writable.call(this, {});\n}\nutil.inherits(Signer, stream.Writable);\n\nSigner.prototype._write = function (chunk, enc, cb) {\n\tthis.chunks.push(chunk);\n\tcb();\n};\n\nSigner.prototype.update = function (chunk) {\n\tif (typeof (chunk) === 'string')\n\t\tchunk = new Buffer(chunk, 'binary');\n\tthis.chunks.push(chunk);\n};\n\nSigner.prototype.sign = function () {\n\tvar sig = nacl.sign.detached(\n\t    new Uint8Array(Buffer.concat(this.chunks)),\n\t    new Uint8Array(this.key.part.r.data));\n\tvar sigBuf = new Buffer(sig);\n\tvar sigObj = Signature.parse(sigBuf, 'ed25519', 'raw');\n\tsigObj.hashAlgorithm = 'sha512';\n\treturn (sigObj);\n};\n"]}