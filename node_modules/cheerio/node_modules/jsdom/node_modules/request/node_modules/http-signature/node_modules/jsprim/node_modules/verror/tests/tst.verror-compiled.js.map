{"version":3,"sources":["tst.verror.js"],"names":[],"mappings":"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","file":"tst.verror-compiled.js","sourcesContent":["/*\n * tst.verror.js: tests basic functionality of the VError class.\n */\n\nvar mod_assert = require('assert');\nvar mod_verror = require('../lib/verror');\n\nvar VError = mod_verror.VError;\nvar WError = mod_verror.WError;\n\nvar err, suberr, stack, substack;\n\n/*\n * Remove full paths and relative line numbers from stack traces so that we can\n * compare against \"known-good\" output.\n */\nfunction cleanStack(stacktxt)\n{\n\tvar re = new RegExp(__filename + ':\\\\d+:\\\\d+', 'gm');\n\tstacktxt = stacktxt.replace(re, 'tst.verror.js');\n\treturn (stacktxt);\n}\n\n/*\n * Save the generic parts of all stack traces so we can avoid hardcoding\n * Node-specific implementation details in our testing of stack traces.\n */\nvar nodestack = new Error().stack.split('\\n').slice(2).join('\\n');\n\n/* no arguments */\nerr = new VError();\nmod_assert.equal(err.name, 'VError');\nmod_assert.ok(err instanceof Error);\nmod_assert.ok(err instanceof VError);\nmod_assert.equal(err.message, '');\nmod_assert.ok(err.cause() === undefined);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\n/* options-argument form */\nerr = new VError({});\nmod_assert.equal(err.message, '');\nmod_assert.ok(err.cause() === undefined);\n\n/* simple message */\nerr = new VError('my error');\nmod_assert.equal(err.message, 'my error');\nmod_assert.ok(err.cause() === undefined);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: my error',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\nerr = new VError({}, 'my error');\nmod_assert.equal(err.message, 'my error');\nmod_assert.ok(err.cause() === undefined);\n\n/* printf-style message */\nerr = new VError('%s error: %3d problems', 'very bad', 15);\nmod_assert.equal(err.message, 'very bad error:  15 problems');\nmod_assert.ok(err.cause() === undefined);\n\nerr = new VError({}, '%s error: %3d problems', 'very bad', 15);\nmod_assert.equal(err.message, 'very bad error:  15 problems');\nmod_assert.ok(err.cause() === undefined);\n\n/* caused by another error, with no additional message */\nsuberr = new Error('root cause');\nerr = new VError(suberr);\nmod_assert.equal(err.message, ': root cause');\nmod_assert.ok(err.cause() === suberr);\n\nerr = new VError({ 'cause': suberr });\nmod_assert.equal(err.message, ': root cause');\nmod_assert.ok(err.cause() === suberr);\n\n/* caused by another error, with annotation */\nerr = new VError(suberr, 'proximate cause: %d issues', 3);\nmod_assert.equal(err.message, 'proximate cause: 3 issues: root cause');\nmod_assert.ok(err.cause() === suberr);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: proximate cause: 3 issues: root cause',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\nerr = new VError({ 'cause': suberr }, 'proximate cause: %d issues', 3);\nmod_assert.equal(err.message, 'proximate cause: 3 issues: root cause');\nmod_assert.ok(err.cause() === suberr);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: proximate cause: 3 issues: root cause',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\n/* caused by another VError, with annotation. */\nsuberr = err;\nerr = new VError(suberr, 'top');\nmod_assert.equal(err.message, 'top: proximate cause: 3 issues: root cause');\nmod_assert.ok(err.cause() === suberr);\n\nerr = new VError({ 'cause': suberr }, 'top');\nmod_assert.equal(err.message, 'top: proximate cause: 3 issues: root cause');\nmod_assert.ok(err.cause() === suberr);\n\n/* caused by a WError */\nsuberr = new WError(new Error('root cause'), 'mid');\nerr = new VError(suberr, 'top');\nmod_assert.equal(err.message, 'top: mid');\nmod_assert.ok(err.cause() === suberr);\n\n/* null cause (for backwards compatibility with older versions) */\nerr = new VError(null, 'my error');\nmod_assert.equal(err.message, 'my error');\nmod_assert.ok(err.cause() === undefined);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: my error',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\nerr = new VError({ 'cause': null }, 'my error');\nmod_assert.equal(err.message, 'my error');\nmod_assert.ok(err.cause() === undefined);\n\nerr = new VError(null);\nmod_assert.equal(err.message, '');\nmod_assert.ok(err.cause() === undefined);\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\n/* constructorOpt */\nfunction makeErr(options) {\n\treturn (new VError(options, 'test error'));\n}\nerr = makeErr({});\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: test error',\n    '    at makeErr (tst.verror.js)',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n\nerr = makeErr({ 'constructorOpt': makeErr });\nstack = cleanStack(err.stack);\nmod_assert.equal(stack, [\n    'VError: test error',\n    '    at Object.<anonymous> (tst.verror.js)'\n].join('\\n') + '\\n' + nodestack);\n"]}