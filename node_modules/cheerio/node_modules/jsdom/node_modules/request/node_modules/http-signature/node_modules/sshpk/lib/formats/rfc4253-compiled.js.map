{"version":3,"sources":["rfc4253.js"],"names":[],"mappings":"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","file":"rfc4253-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read.bind(undefined, false, undefined),\n\treadType: read.bind(undefined, false),\n\twrite: write,\n\t/* semi-private api, used by sshpk-agent */\n\treadPartial: read.bind(undefined, true),\n\n\t/* shared with ssh format */\n\treadInternal: read,\n\tkeyTypeToAlg: keyTypeToAlg,\n\talgToKeyType: algToKeyType\n};\n\nvar assert = require('assert-plus');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar SSHBuffer = require('../ssh-buffer');\n\nfunction algToKeyType(alg) {\n\tassert.string(alg);\n\tif (alg === 'ssh-dss')\n\t\treturn ('dsa');\n\telse if (alg === 'ssh-rsa')\n\t\treturn ('rsa');\n\telse if (alg === 'ssh-ed25519')\n\t\treturn ('ed25519');\n\telse if (alg === 'ssh-curve25519')\n\t\treturn ('curve25519');\n\telse if (alg.match(/^ecdsa-sha2-/))\n\t\treturn ('ecdsa');\n\telse\n\t\tthrow (new Error('Unknown algorithm ' + alg));\n}\n\nfunction keyTypeToAlg(key) {\n\tassert.object(key);\n\tif (key.type === 'dsa')\n\t\treturn ('ssh-dss');\n\telse if (key.type === 'rsa')\n\t\treturn ('ssh-rsa');\n\telse if (key.type === 'ed25519')\n\t\treturn ('ssh-ed25519');\n\telse if (key.type === 'curve25519')\n\t\treturn ('ssh-curve25519');\n\telse if (key.type === 'ecdsa')\n\t\treturn ('ecdsa-sha2-' + key.part.curve.data.toString());\n\telse\n\t\tthrow (new Error('Unknown key type ' + key.type));\n}\n\nfunction read(partial, type, buf) {\n\tif (typeof (buf) === 'string')\n\t\tbuf = new Buffer(buf);\n\tassert.buffer(buf, 'buf');\n\n\tvar key = {};\n\n\tvar parts = key.parts = [];\n\tvar sshbuf = new SSHBuffer({buffer: buf});\n\n\tvar alg = sshbuf.readString();\n\tassert.ok(!sshbuf.atEnd(), 'key must have at least one part');\n\n\tkey.type = algToKeyType(alg);\n\n\tvar partCount = algs.info[key.type].parts.length;\n\tif (type && type === 'private')\n\t\tpartCount = algs.privInfo[key.type].parts.length;\n\n\twhile (!sshbuf.atEnd() && parts.length < partCount)\n\t\tparts.push(sshbuf.readPart());\n\twhile (!partial && !sshbuf.atEnd())\n\t\tparts.push(sshbuf.readPart());\n\n\tassert.ok(parts.length >= 1,\n\t    'key must have at least one part');\n\tassert.ok(partial || sshbuf.atEnd(),\n\t    'leftover bytes at end of key');\n\n\tvar Constructor = Key;\n\tvar algInfo = algs.info[key.type];\n\tif (type === 'private' || algInfo.parts.length !== parts.length) {\n\t\talgInfo = algs.privInfo[key.type];\n\t\tConstructor = PrivateKey;\n\t}\n\tassert.strictEqual(algInfo.parts.length, parts.length);\n\n\tif (key.type === 'ecdsa') {\n\t\tvar res = /^ecdsa-sha2-(.+)$/.exec(alg);\n\t\tassert.ok(res !== null);\n\t\tassert.strictEqual(res[1], parts[0].data.toString());\n\t}\n\n\tvar normalized = true;\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tparts[i].name = algInfo.parts[i];\n\t\tif (parts[i].name !== 'curve' &&\n\t\t    algInfo.normalize !== false) {\n\t\t\tvar p = parts[i];\n\t\t\tvar nd = utils.mpNormalize(p.data);\n\t\t\tif (nd !== p.data) {\n\t\t\t\tp.data = nd;\n\t\t\t\tnormalized = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (normalized)\n\t\tkey._rfc4253Cache = sshbuf.toBuffer();\n\n\tif (partial && typeof (partial) === 'object') {\n\t\tpartial.remainder = sshbuf.remainder();\n\t\tpartial.consumed = sshbuf._offset;\n\t}\n\n\treturn (new Constructor(key));\n}\n\nfunction write(key) {\n\tassert.object(key);\n\n\tvar alg = keyTypeToAlg(key);\n\tvar i;\n\n\tvar algInfo = algs.info[key.type];\n\tif (PrivateKey.isPrivateKey(key))\n\t\talgInfo = algs.privInfo[key.type];\n\tvar parts = algInfo.parts;\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeString(alg);\n\n\tfor (i = 0; i < parts.length; ++i) {\n\t\tvar data = key.part[parts[i]].data;\n\t\tif (algInfo.normalize !== false)\n\t\t\tdata = utils.mpNormalize(data);\n\t\tbuf.writeBuffer(data);\n\t}\n\n\treturn (buf.toBuffer());\n}\n"]}