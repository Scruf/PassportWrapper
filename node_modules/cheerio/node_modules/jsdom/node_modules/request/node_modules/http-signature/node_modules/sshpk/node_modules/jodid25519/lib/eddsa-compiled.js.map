{"version":3,"sources":["eddsa.js"],"names":[],"mappings":"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","file":"eddsa-compiled.js","sourcesContent":["\"use strict\";\n/**\n * @fileOverview\n * Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).\n */\n\n/*\n * Copyright (c) 2011, 2012, 2014 Ron Garret\n * Copyright (c) 2014 Mega Limited\n * under the MIT License.\n *\n * Authors: Guy K. Kloss, Ron Garret\n *\n * You should have received a copy of the license along with this program.\n */\n\nvar core = require('./core');\nvar curve255 = require('./curve255');\nvar utils = require('./utils');\nvar BigInteger = require('jsbn').BigInteger;\nvar crypto = require('crypto');\n\n    /**\n     * @exports jodid25519/eddsa\n     * Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).\n     *\n     * @description\n     * Digital signature scheme based on Curve25519 (Ed25519 or EdDSA).\n     *\n     * <p>\n     * This code is adapted from fast-djbec.js, a faster but more complicated\n     * version of the Ed25519 encryption scheme (as compared to djbec.js).\n     * It uses two different representations for big integers: The jsbn\n     * BigInteger class, which can represent arbitrary-length numbers, and a\n     * special fixed-length representation optimised for 256-bit integers.\n     * The reason both are needed is that the Ed25519 algorithm requires some\n     * 512-bit numbers.</p>\n    */\n    var ns = {};\n\n    function _bi255(value) {\n        if (!(this instanceof _bi255)) {\n            return new _bi255(value);\n        }\n        if (typeof value === 'undefined') {\n            return _ZERO;\n        }\n        var c = value.constructor;\n        if ((c === Array || c === Uint16Array || c === Uint32Array) && (value.length === 16)) {\n            this.n = value;\n        } else if ((c === Array) && (value.length === 32)) {\n            this.n = _bytes2bi255(value).n;\n        } else if (c === String) {\n            this.n = utils.hexDecode(value);\n        } else if (c === Number) {\n            this.n = [value & 0xffff,\n                      value >> 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        } else if (value instanceof _bi255) {\n            this.n = value.n.slice(0); // Copy constructor\n        } else {\n            throw \"Bad argument for bignum: \" + value;\n        }\n    }\n\n   _bi255.prototype = {\n        'toString' : function() {\n            return utils.hexEncode(this.n);\n        },\n        'toSource' : function() {\n            return '_' + utils.hexEncode(this.n);\n        },\n        'plus' : function(n1) {\n            return _bi255(core.bigintadd(this.n, n1.n));\n        },\n        'minus' : function(n1) {\n            return _bi255(core.bigintsub(this.n, n1.n)).modq();\n        },\n        'times' : function(n1) {\n            return _bi255(core.mulmodp(this.n, n1.n));\n        },\n        'divide' : function(n1) {\n            return this.times(n1.inv());\n        },\n        'sqr' : function() {\n            return _bi255(core.sqrmodp(this.n));\n        },\n        'cmp' : function(n1) {\n            return core.bigintcmp(this.n, n1.n);\n        },\n        'equals' : function(n1) {\n            return this.cmp(n1) === 0;\n        },\n        'isOdd' : function() {\n            return (this.n[0] & 1) === 1;\n        },\n        'shiftLeft' : function(cnt) {\n            _shiftL(this.n, cnt);\n            return this;\n        },\n        'shiftRight' : function(cnt) {\n            _shiftR(this.n, cnt);\n            return this;\n        },\n        'inv' : function() {\n            return _bi255(core.invmodp(this.n));\n        },\n        'pow' : function(e) {\n            return _bi255(_pow(this.n, e.n));\n        },\n        'modq' : function() {\n            return _modq(this);\n        },\n        'bytes' : function() {\n            return _bi255_bytes(this);\n        }\n    };\n\n    function _shiftL(n, cnt) {\n        var lastcarry = 0;\n        for (var i = 0; i < 16; i++) {\n            var carry = n[i] >> (16 - cnt);\n            n[i] = (n[i] << cnt) & 0xffff | lastcarry;\n            lastcarry = carry;\n        }\n        return n;\n    }\n\n    function _shiftR(n, cnt) {\n        var lastcarry = 0;\n        for (var i = 15; i >= 0; i--) {\n            var carry = n[i] << (16 - cnt) & 0xffff;\n            n[i] = (n[i] >> cnt) | lastcarry;\n            lastcarry = carry;\n        }\n        return n;\n    }\n\n    function _bi255_bytes(n) {\n        n = _bi255(n); // Make a copy because shiftRight is destructive\n        var a = new Array(32);\n        for (var i = 31; i >= 0; i--) {\n            a[i] = n.n[0] & 0xff;\n            n.shiftRight(8);\n        }\n        return a;\n    }\n\n    function _bytes2bi255(a) {\n        var n = _ZERO;\n        for (var i = 0; i < 32; i++) {\n            n.shiftLeft(8);\n            n = n.plus(_bi255(a[i]));\n        }\n        return n;\n    }\n\n    function _pow(n, e) {\n        var result = core.ONE();\n        for (var i = 0; i < 256; i++) {\n            if (core.getbit(e, i) === 1) {\n                result = core.mulmodp(result, n);\n            }\n            n = core.sqrmodp(n);\n        }\n        return result;\n    }\n\n    var _ZERO = _bi255(0);\n    var _ONE = _bi255(1);\n    var _TWO = _bi255(2);\n    // This is the core prime.\n    var _Q = _bi255([0xffff - 18, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,\n                     0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,\n                     0xffff, 0xffff, 0x7fff]);\n\n    function _modq(n) {\n        core.reduce(n.n);\n        if (n.cmp(_Q) >= 0) {\n            return _modq(n.minus(_Q));\n        }\n        if (n.cmp(_ZERO) === -1) {\n            return _modq(n.plus(_Q));\n        } else {\n            return n;\n        }\n    }\n\n    // _RECOVERY_EXPONENT = _Q.plus(_bi255(3)).divide(_bi255(8));\n    var _RECOVERY_EXPONENT = _bi255('0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe');\n    // _D = _Q.minus(_bi255(121665)).divide(_bi255(121666));\n    var _D = _bi255('52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3');\n    // _I = _TWO.pow(_Q.minus(_ONE).divide(_bi255(4)));\n    var _I = _bi255('2b8324804fc1df0b2b4d00993dfbd7a72f431806ad2fe478c4ee1b274a0ea0b0');\n    // _L = _TWO.pow(_bi255(252)).plus(_bi255('14def9dea2f79cd65812631a5cf5d3ed'));\n    var _L = _bi255('1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed');\n    var _L_BI = _bi('1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed', 16);\n\n\n    // ////////////////////////////////////////////////////////////\n\n    function _isoncurve(p) {\n        var x = p[0];\n        var y = p[1];\n        var xsqr = x.sqr();\n        var ysqr = y.sqr();\n        var v = _D.times(xsqr).times(ysqr);\n        return ysqr.minus(xsqr).minus(_ONE).minus(v).modq().equals(_ZERO);\n    }\n\n    function _xrecover(y) {\n        var ysquared = y.sqr();\n        var xx = ysquared.minus(_ONE).divide(_ONE.plus(_D.times(ysquared)));\n        var x = xx.pow(_RECOVERY_EXPONENT);\n        if (!(x.times(x).minus(xx).equals(_ZERO))) {\n            x = x.times(_I);\n        }\n        if (x.isOdd()) {\n            x = _Q.minus(x);\n        }\n        return x;\n    }\n\n    function _x_pt_add(pt1, pt2) {\n        var x1 = pt1[0];\n        var y1 = pt1[1];\n        var z1 = pt1[2];\n        var t1 = pt1[3];\n        var x2 = pt2[0];\n        var y2 = pt2[1];\n        var z2 = pt2[2];\n        var t2 = pt2[3];\n        var A = y1.minus(x1).times(y2.plus(x2));\n        var B = y1.plus(x1).times(y2.minus(x2));\n        var C = z1.times(_TWO).times(t2);\n        var D = t1.times(_TWO).times(z2);\n        var E = D.plus(C);\n        var F = B.minus(A);\n        var G = B.plus(A);\n        var H = D.minus(C);\n        return [E.times(F), G.times(H), F.times(G), E.times(H)];\n    }\n\n    function _xpt_double(pt1) {\n        var x1 = pt1[0];\n        var y1 = pt1[1];\n        var z1 = pt1[2];\n        var A = x1.times(x1);\n        var B = y1.times(y1);\n        var C = _TWO.times(z1).times(z1);\n        var D = _Q.minus(A);\n        var J = x1.plus(y1);\n        var E = J.times(J).minus(A).minus(B);\n        var G = D.plus(B);\n        var F = G.minus(C);\n        var H = D.minus(B);\n        return [E.times(F), G.times(H), F.times(G), E.times(H)];\n    }\n\n    function _xpt_mult(pt, n) {\n        if (n.equals(_ZERO)) {\n            return [_ZERO, _ONE, _ONE, _ZERO];\n        }\n        var odd = n.isOdd();\n        n.shiftRight(1);\n        var value = _xpt_double(_xpt_mult(pt, n));\n        return odd ? _x_pt_add(value, pt) : value;\n    }\n\n    function _pt_xform(pt) {\n        var x = pt[0];\n        var y = pt[1];\n        return [x, y, _ONE, x.times(y)];\n    }\n\n    function _pt_unxform(pt) {\n        var x = pt[0];\n        var y = pt[1];\n        var z = pt[2];\n        var invz = z.inv();\n        return [x.times(invz), y.times(invz)];\n    }\n\n    function _scalarmult(pt, n) {\n        return _pt_unxform(_xpt_mult(_pt_xform(pt), n));\n    }\n\n    function _bytesgetbit(bytes, n) {\n        return (bytes[bytes.length - (n >>> 3) - 1] >> (n & 7)) & 1;\n    }\n\n    function _xpt_mult_bytes(pt, bytes) {\n        var r = [_ZERO, _ONE, _ONE, _ZERO];\n        for (var i = (bytes.length << 3) - 1; i >= 0; i--) {\n            r = _xpt_double(r);\n            if (_bytesgetbit(bytes, i) === 1) {\n                r = _x_pt_add(r, pt);\n            }\n        }\n        return r;\n    }\n\n    function _scalarmultBytes(pt, bytes) {\n        return _pt_unxform(_xpt_mult_bytes(_pt_xform(pt), bytes));\n    }\n\n    var _by = _bi255(4).divide(_bi255(5));\n    var _bx = _xrecover(_by);\n    var _bp = [_bx, _by];\n\n    function _encodeint(n) {\n        return n.bytes(32).reverse();\n    }\n    function _decodeint(b) {\n        return _bi255(b.slice(0).reverse());\n    }\n\n    function _encodepoint(p) {\n        var v = _encodeint(p[1]);\n        if (p[0].isOdd()) {\n            v[31] |= 0x80;\n        }\n        return v;\n    }\n\n    function _decodepoint(v) {\n        v = v.slice(0);\n        var signbit = v[31] >> 7;\n        v[31] &= 127;\n        var y = _decodeint(v);\n        var x = _xrecover(y);\n        if ((x.n[0] & 1) !== signbit) {\n            x = _Q.minus(x);\n        }\n        var p = [x, y];\n        if (!_isoncurve(p)) {\n            throw ('Point is not on curve');\n        }\n        return p;\n    }\n\n    // //////////////////////////////////////////////////\n\n    /**\n     * Factory function to create a suitable BigInteger.\n     *\n     * @param value\n     *     The value for the big integer.\n     * @param base {integer}\n     *     Base of the conversion of elements in ``value``.\n     * @returns\n     *     A BigInteger object.\n     */\n    function _bi(value, base) {\n        if (base !== undefined) {\n            if (base === 256) {\n                return _bi(utils.string2bytes(value));\n            }\n            return new BigInteger(value, base);\n        } else if (typeof value === 'string') {\n            return new BigInteger(value, 10);\n        } else if ((value instanceof Array) || (value instanceof Uint8Array)\n          || Buffer.isBuffer(value)) {\n            return new BigInteger(value);\n        } else if (typeof value === 'number') {\n            return new BigInteger(value.toString(), 10);\n        } else {\n            throw \"Can't convert \" + value + \" to BigInteger\";\n        }\n    }\n\n    function _bi2bytes(n, cnt) {\n        if (cnt === undefined) {\n            cnt = (n.bitLength() + 7) >>> 3;\n        }\n        var bytes = new Array(cnt);\n        for (var i = cnt - 1; i >= 0; i--) {\n            bytes[i] = n[0] & 255; // n.and(0xff);\n            n = n.shiftRight(8);\n        }\n        return bytes;\n    }\n\n    BigInteger.prototype.bytes = function(n) {\n        return _bi2bytes(this, n);\n    };\n\n    // /////////////////////////////////////////////////////////\n\n    function _bytehash(s) {\n        var sha = crypto.createHash('sha512').update(s).digest();\n        return _bi2bytes(_bi(sha), 64).reverse();\n    }\n\n    function _stringhash(s) {\n        var sha = crypto.createHash('sha512').update(s).digest();\n        return _map(_chr, _bi2bytes(_bi(sha), 64)).join('');\n    }\n\n    function _inthash(s) {\n        // Need a leading 0 to prevent sign extension\n        return _bi([0].concat(_bytehash(s)));\n    }\n\n    function _inthash_lo(s) {\n        return _bi255(_bytehash(s).slice(32, 64));\n    }\n\n    function _inthash_mod_l(s) {\n        return _inthash(s).mod(_L_BI);\n    }\n\n    function _get_a(sk) {\n        var a = _inthash_lo(sk);\n        a.n[0] &= 0xfff8;\n        a.n[15] &= 0x3fff;\n        a.n[15] |= 0x4000;\n        return a;\n    }\n\n    function _publickey(sk) {\n        return _encodepoint(_scalarmult(_bp, _get_a(sk)));\n    }\n\n    function _map(f, l) {\n        var result = new Array(l.length);\n        for (var i = 0; i < l.length; i++) {\n            result[i] = f(l[i]);\n        }\n        return result;\n    }\n\n    function _chr(n) {\n        return String.fromCharCode(n);\n    }\n\n    function _ord(c) {\n        return c.charCodeAt(0);\n    }\n\n    function _pt_add(p1, p2) {\n        return _pt_unxform(_x_pt_add(_pt_xform(p1), _pt_xform(p2)));\n    }\n\n\n    // Exports for the API.\n\n    /**\n     * Checks whether a point is on the curve.\n     *\n     * @function\n     * @param point {string}\n     *     The point to check for in a byte string representation.\n     * @returns {boolean}\n     *     true if the point is on the curve, false otherwise.\n     */\n    ns.isOnCurve = function(point) {\n        try {\n            _isoncurve(_decodepoint(utils.string2bytes(point)));\n        } catch(e) {\n            if (e === 'Point is not on curve') {\n                return false;\n            } else {\n                throw e;\n            }\n        }\n        return true;\n    };\n\n\n    /**\n     * Computes the EdDSA public key.\n     *\n     * <p>Note: Seeds should be a byte string, not a unicode string containing\n     * multi-byte characters.</p>\n     *\n     * @function\n     * @param keySeed {string}\n     *     Private key seed in the form of a byte string.\n     * @returns {string}\n     *     Public key as byte string computed from the private key seed\n     *     (32 bytes).\n     */\n    ns.publicKey = function(keySeed) {\n        return utils.bytes2string(_publickey(keySeed));\n    };\n\n\n    /**\n     * Computes an EdDSA signature of a message.\n     *\n     * <p>Notes:</p>\n     *\n     * <ul>\n     *   <li>Unicode messages need to be converted to a byte representation\n     *   (e. g. UTF-8).</li>\n     *   <li>If `publicKey` is given, and it is *not* a point of the curve,\n     *   the signature will be faulty, but no error will be thrown.</li>\n     * </ul>\n     *\n     * @function\n     * @param message {string}\n     *     Message in the form of a byte string.\n     * @param keySeed {string}\n     *     Private key seed in the form of a byte string.\n     * @param publicKey {string}\n     *     Public key as byte string (if not present, it will be computed from\n     *     the private key seed).\n     * @returns {string}\n     *     Detached message signature in the form of a byte string (64 bytes).\n     */\n    ns.sign = function(message, keySeed, publicKey) {\n        if (publicKey === undefined) {\n            publicKey = _publickey(keySeed);\n        } else {\n            publicKey = utils.string2bytes(publicKey);\n        }\n        var a = _bi(_get_a(keySeed).toString(), 16);\n        var hs = _stringhash(keySeed);\n        var r = _bytehash(hs.slice(32, 64) + message);\n        var rp = _scalarmultBytes(_bp, r);\n        var erp = _encodepoint(rp);\n        r = _bi(r).mod(_bi(1, 10).shiftLeft(512));\n        var s = _map(_chr, erp).join('') + _map(_chr, publicKey).join('') + message;\n        s = _inthash_mod_l(s).multiply(a).add(r).mod(_L_BI);\n        return utils.bytes2string(erp.concat(_encodeint(s)));\n    };\n\n\n    /**\n     * Verifies an EdDSA signature of a message with the public key.\n     *\n     * <p>Note: Unicode messages need to be converted to a byte representation\n     * (e. g. UTF-8).</p>\n     *\n     * @function\n     * @param signature {string}\n     *     Message signature in the form of a byte string. Can be detached\n     *     (64 bytes), or attached to be sliced off.\n     * @param message {string}\n     *     Message in the form of a byte string.\n     * @param publicKey {string}\n     *     Public key as byte string (if not present, it will be computed from\n     *     the private key seed).\n     * @returns {boolean}\n     *     true, if the signature verifies.\n     */\n    ns.verify = function(signature, message, publicKey) {\n        signature = utils.string2bytes(signature.slice(0, 64));\n        publicKey = utils.string2bytes(publicKey);\n        var rpe = signature.slice(0, 32);\n        var rp = _decodepoint(rpe);\n        var a = _decodepoint(publicKey);\n        var s = _decodeint(signature.slice(32, 64));\n        var h = _inthash(utils.bytes2string(rpe.concat(publicKey)) + message);\n        var v1 = _scalarmult(_bp, s);\n        var value = _scalarmultBytes(a, _bi2bytes(h));\n        var v2 = _pt_add(rp, value);\n        return v1[0].equals(v2[0]) && v1[1].equals(v2[1]);\n    };\n\n\n    /**\n     * Generates a new random private key seed of 32 bytes length (256 bit).\n     *\n     * @function\n     * @returns {string}\n     *     Byte string containing a new random private key seed.\n     */\n    ns.generateKeySeed = function() {\n        return core.generateKey(false);\n    };\n\nmodule.exports = ns;\n"]}