{"version":3,"sources":["signature.js"],"names":[],"mappings":"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","file":"signature-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Signature;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar SSHBuffer = require('./ssh-buffer');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar SignatureParseError = errs.SignatureParseError;\n\nfunction Signature(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.hashAlgorithm = opts.hashAlgo;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n}\n\nSignature.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'asn1';\n\tassert.string(format, 'format');\n\n\tvar buf;\n\n\tswitch (this.type) {\n\tcase 'rsa':\n\tcase 'ed25519':\n\t\tif (format === 'ssh') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-' + this.type);\n\t\t\tbuf.writePart(this.part.sig);\n\t\t\treturn (buf.toBuffer());\n\t\t} else {\n\t\t\treturn (this.part.sig.data);\n\t\t}\n\n\tcase 'dsa':\n\tcase 'ecdsa':\n\t\tvar r, s;\n\t\tif (format === 'asn1') {\n\t\t\tvar der = new asn1.BerWriter();\n\t\t\tder.startSequence();\n\t\t\tr = utils.mpNormalize(this.part.r.data);\n\t\t\ts = utils.mpNormalize(this.part.s.data);\n\t\t\tder.writeBuffer(r, asn1.Ber.Integer);\n\t\t\tder.writeBuffer(s, asn1.Ber.Integer);\n\t\t\tder.endSequence();\n\t\t\treturn (der.buffer);\n\t\t} else if (format === 'ssh' && this.type === 'dsa') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-dss');\n\t\t\tr = this.part.r.data;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\ts = this.part.s.data;\n\t\t\tbuf.writeBuffer(Buffer.concat([r, s]));\n\t\t\treturn (buf.toBuffer());\n\t\t} else if (format === 'ssh' && this.type === 'ecdsa') {\n\t\t\tvar inner = new SSHBuffer({});\n\t\t\tr = this.part.r;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\tinner.writePart(r);\n\t\t\tinner.writePart(this.part.s);\n\n\t\t\tbuf = new SSHBuffer({});\n\t\t\t/* XXX: find a more proper way to do this? */\n\t\t\tvar curve;\n\t\t\tvar sz = this.part.r.data.length * 8;\n\t\t\tif (sz === 256)\n\t\t\t\tcurve = 'nistp256';\n\t\t\telse if (sz === 384)\n\t\t\t\tcurve = 'nistp384';\n\t\t\telse if (sz === 528)\n\t\t\t\tcurve = 'nistp521';\n\t\t\tbuf.writeString('ecdsa-sha2-' + curve);\n\t\t\tbuf.writeBuffer(inner.toBuffer());\n\t\t\treturn (buf.toBuffer());\n\t\t}\n\t\tthrow (new Error('Invalid signature format'));\n\tdefault:\n\t\tthrow (new Error('Invalid signature data'));\n\t}\n};\n\nSignature.prototype.toString = function (format) {\n\tassert.optionalString(format, 'format');\n\treturn (this.toBuffer(format).toString('base64'));\n};\n\nSignature.parse = function (data, type, format) {\n\tif (typeof (data) === 'string')\n\t\tdata = new Buffer(data, 'base64');\n\tassert.buffer(data, 'data');\n\tassert.string(format, 'format');\n\tassert.string(type, 'type');\n\n\tvar opts = {};\n\topts.type = type.toLowerCase();\n\topts.parts = [];\n\n\ttry {\n\t\tassert.ok(data.length > 0, 'signature must not be empty');\n\t\tswitch (opts.type) {\n\t\tcase 'rsa':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-rsa'));\n\t\tcase 'ed25519':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-ed25519'));\n\n\t\tcase 'dsa':\n\t\tcase 'ecdsa':\n\t\t\tif (format === 'asn1')\n\t\t\t\treturn (parseDSAasn1(data, type, format, opts));\n\t\t\telse if (opts.type === 'dsa')\n\t\t\t\treturn (parseDSA(data, type, format, opts));\n\t\t\telse\n\t\t\t\treturn (parseECDSA(data, type, format, opts));\n\n\t\tdefault:\n\t\t\tthrow (new InvalidAlgorithmError(type));\n\t\t}\n\n\t} catch (e) {\n\t\tif (e instanceof InvalidAlgorithmError)\n\t\t\tthrow (e);\n\t\tthrow (new SignatureParseError(type, format, e));\n\t}\n};\n\nfunction parseOneNum(data, type, format, opts, headType) {\n\tif (format === 'ssh') {\n\t\ttry {\n\t\t\tvar buf = new SSHBuffer({buffer: data});\n\t\t\tvar head = buf.readString();\n\t\t} catch (e) {\n\t\t\t/* fall through */\n\t\t}\n\t\tif (head === headType) {\n\t\t\tvar sig = buf.readPart();\n\t\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\t\tsig.name = 'sig';\n\t\t\topts.parts.push(sig);\n\t\t\treturn (new Signature(opts));\n\t\t}\n\t}\n\topts.parts.push({name: 'sig', data: data});\n\treturn (new Signature(opts));\n}\n\nfunction parseDSAasn1(data, type, format, opts) {\n\tvar der = new asn1.BerReader(data);\n\tder.readSequence();\n\tvar r = der.readString(asn1.Ber.Integer, true);\n\tvar s = der.readString(asn1.Ber.Integer, true);\n\n\topts.parts.push({name: 'r', data: utils.mpNormalize(r)});\n\topts.parts.push({name: 's', data: utils.mpNormalize(s)});\n\n\treturn (new Signature(opts));\n}\n\nfunction parseDSA(data, type, format, opts) {\n\tif (data.length != 40) {\n\t\tvar buf = new SSHBuffer({buffer: data});\n\t\tvar d = buf.readBuffer();\n\t\tif (d.toString('ascii') === 'ssh-dss')\n\t\t\td = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\tassert.strictEqual(d.length, 40, 'invalid inner length');\n\t\tdata = d;\n\t}\n\topts.parts.push({name: 'r', data: data.slice(0, 20)});\n\topts.parts.push({name: 's', data: data.slice(20, 40)});\n\treturn (new Signature(opts));\n}\n\nfunction parseECDSA(data, type, format, opts) {\n\tvar buf = new SSHBuffer({buffer: data});\n\n\tvar r, s;\n\tvar inner = buf.readBuffer();\n\tif (inner.toString('ascii').match(/^ecdsa-/)) {\n\t\tinner = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes on outer');\n\t\tbuf = new SSHBuffer({buffer: inner});\n\t\tr = buf.readPart();\n\t} else {\n\t\tr = {data: inner};\n\t}\n\n\ts = buf.readPart();\n\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\n\tr.name = 'r';\n\ts.name = 's';\n\n\topts.parts.push(r);\n\topts.parts.push(s);\n\treturn (new Signature(opts));\n}\n\nSignature.isSignature = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Signature, ver));\n};\n\n/*\n * API versions for Signature:\n * [1,0] -- initial ver\n * [2,0] -- support for rsa in full ssh format, compat with sshpk-agent\n *          hashAlgorithm property\n * [2,1] -- first tagged version\n */\nSignature.prototype._sshpkApiVersion = [2, 1];\n\nSignature._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tif (obj.hasOwnProperty('hashAlgorithm'))\n\t\treturn ([2, 0]);\n\treturn ([1, 0]);\n};\n"]}