{"version":3,"sources":["ec.js"],"names":[],"mappings":"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","file":"ec-compiled.js","sourcesContent":["// Basic Javascript Elliptic Curve implementation\n// Ported loosely from BouncyCastle's Java EC code\n// Only Fp curves implemented for now\n\n// Requires jsbn.js and jsbn2.js\nvar BigInteger = require('jsbn').BigInteger\nvar Barrett = BigInteger.prototype.Barrett\n\n// ----------------\n// ECFieldElementFp\n\n// constructor\nfunction ECFieldElementFp(q,x) {\n    this.x = x;\n    // TODO if(x.compareTo(q) >= 0) error\n    this.q = q;\n}\n\nfunction feFpEquals(other) {\n    if(other == this) return true;\n    return (this.q.equals(other.q) && this.x.equals(other.x));\n}\n\nfunction feFpToBigInteger() {\n    return this.x;\n}\n\nfunction feFpNegate() {\n    return new ECFieldElementFp(this.q, this.x.negate().mod(this.q));\n}\n\nfunction feFpAdd(b) {\n    return new ECFieldElementFp(this.q, this.x.add(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpSubtract(b) {\n    return new ECFieldElementFp(this.q, this.x.subtract(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpMultiply(b) {\n    return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpSquare() {\n    return new ECFieldElementFp(this.q, this.x.square().mod(this.q));\n}\n\nfunction feFpDivide(b) {\n    return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger().modInverse(this.q)).mod(this.q));\n}\n\nECFieldElementFp.prototype.equals = feFpEquals;\nECFieldElementFp.prototype.toBigInteger = feFpToBigInteger;\nECFieldElementFp.prototype.negate = feFpNegate;\nECFieldElementFp.prototype.add = feFpAdd;\nECFieldElementFp.prototype.subtract = feFpSubtract;\nECFieldElementFp.prototype.multiply = feFpMultiply;\nECFieldElementFp.prototype.square = feFpSquare;\nECFieldElementFp.prototype.divide = feFpDivide;\n\n// ----------------\n// ECPointFp\n\n// constructor\nfunction ECPointFp(curve,x,y,z) {\n    this.curve = curve;\n    this.x = x;\n    this.y = y;\n    // Projective coordinates: either zinv == null or z * zinv == 1\n    // z and zinv are just BigIntegers, not fieldElements\n    if(z == null) {\n      this.z = BigInteger.ONE;\n    }\n    else {\n      this.z = z;\n    }\n    this.zinv = null;\n    //TODO: compression flag\n}\n\nfunction pointFpGetX() {\n    if(this.zinv == null) {\n      this.zinv = this.z.modInverse(this.curve.q);\n    }\n    var r = this.x.toBigInteger().multiply(this.zinv);\n    this.curve.reduce(r);\n    return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpGetY() {\n    if(this.zinv == null) {\n      this.zinv = this.z.modInverse(this.curve.q);\n    }\n    var r = this.y.toBigInteger().multiply(this.zinv);\n    this.curve.reduce(r);\n    return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpEquals(other) {\n    if(other == this) return true;\n    if(this.isInfinity()) return other.isInfinity();\n    if(other.isInfinity()) return this.isInfinity();\n    var u, v;\n    // u = Y2 * Z1 - Y1 * Z2\n    u = other.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(other.z)).mod(this.curve.q);\n    if(!u.equals(BigInteger.ZERO)) return false;\n    // v = X2 * Z1 - X1 * Z2\n    v = other.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(other.z)).mod(this.curve.q);\n    return v.equals(BigInteger.ZERO);\n}\n\nfunction pointFpIsInfinity() {\n    if((this.x == null) && (this.y == null)) return true;\n    return this.z.equals(BigInteger.ZERO) && !this.y.toBigInteger().equals(BigInteger.ZERO);\n}\n\nfunction pointFpNegate() {\n    return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);\n}\n\nfunction pointFpAdd(b) {\n    if(this.isInfinity()) return b;\n    if(b.isInfinity()) return this;\n\n    // u = Y2 * Z1 - Y1 * Z2\n    var u = b.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(b.z)).mod(this.curve.q);\n    // v = X2 * Z1 - X1 * Z2\n    var v = b.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(b.z)).mod(this.curve.q);\n\n    if(BigInteger.ZERO.equals(v)) {\n        if(BigInteger.ZERO.equals(u)) {\n            return this.twice(); // this == b, so double\n        }\n\treturn this.curve.getInfinity(); // this = -b, so infinity\n    }\n\n    var THREE = new BigInteger(\"3\");\n    var x1 = this.x.toBigInteger();\n    var y1 = this.y.toBigInteger();\n    var x2 = b.x.toBigInteger();\n    var y2 = b.y.toBigInteger();\n\n    var v2 = v.square();\n    var v3 = v2.multiply(v);\n    var x1v2 = x1.multiply(v2);\n    var zu2 = u.square().multiply(this.z);\n\n    // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n    var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.q);\n    // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n    var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.q);\n    // z3 = v^3 * z1 * z2\n    var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.q);\n\n    return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\nfunction pointFpTwice() {\n    if(this.isInfinity()) return this;\n    if(this.y.toBigInteger().signum() == 0) return this.curve.getInfinity();\n\n    // TODO: optimized handling of constants\n    var THREE = new BigInteger(\"3\");\n    var x1 = this.x.toBigInteger();\n    var y1 = this.y.toBigInteger();\n\n    var y1z1 = y1.multiply(this.z);\n    var y1sqz1 = y1z1.multiply(y1).mod(this.curve.q);\n    var a = this.curve.a.toBigInteger();\n\n    // w = 3 * x1^2 + a * z1^2\n    var w = x1.square().multiply(THREE);\n    if(!BigInteger.ZERO.equals(a)) {\n      w = w.add(this.z.square().multiply(a));\n    }\n    w = w.mod(this.curve.q);\n    //this.curve.reduce(w);\n    // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n    var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.q);\n    // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n    var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.square().multiply(w)).mod(this.curve.q);\n    // z3 = 8 * (y1 * z1)^3\n    var z3 = y1z1.square().multiply(y1z1).shiftLeft(3).mod(this.curve.q);\n\n    return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nfunction pointFpMultiply(k) {\n    if(this.isInfinity()) return this;\n    if(k.signum() == 0) return this.curve.getInfinity();\n\n    var e = k;\n    var h = e.multiply(new BigInteger(\"3\"));\n\n    var neg = this.negate();\n    var R = this;\n\n    var i;\n    for(i = h.bitLength() - 2; i > 0; --i) {\n\tR = R.twice();\n\n\tvar hBit = h.testBit(i);\n\tvar eBit = e.testBit(i);\n\n\tif (hBit != eBit) {\n\t    R = R.add(hBit ? this : neg);\n\t}\n    }\n\n    return R;\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nfunction pointFpMultiplyTwo(j,x,k) {\n  var i;\n  if(j.bitLength() > k.bitLength())\n    i = j.bitLength() - 1;\n  else\n    i = k.bitLength() - 1;\n\n  var R = this.curve.getInfinity();\n  var both = this.add(x);\n  while(i >= 0) {\n    R = R.twice();\n    if(j.testBit(i)) {\n      if(k.testBit(i)) {\n        R = R.add(both);\n      }\n      else {\n        R = R.add(this);\n      }\n    }\n    else {\n      if(k.testBit(i)) {\n        R = R.add(x);\n      }\n    }\n    --i;\n  }\n\n  return R;\n}\n\nECPointFp.prototype.getX = pointFpGetX;\nECPointFp.prototype.getY = pointFpGetY;\nECPointFp.prototype.equals = pointFpEquals;\nECPointFp.prototype.isInfinity = pointFpIsInfinity;\nECPointFp.prototype.negate = pointFpNegate;\nECPointFp.prototype.add = pointFpAdd;\nECPointFp.prototype.twice = pointFpTwice;\nECPointFp.prototype.multiply = pointFpMultiply;\nECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo;\n\n// ----------------\n// ECCurveFp\n\n// constructor\nfunction ECCurveFp(q,a,b) {\n    this.q = q;\n    this.a = this.fromBigInteger(a);\n    this.b = this.fromBigInteger(b);\n    this.infinity = new ECPointFp(this, null, null);\n    this.reducer = new Barrett(this.q);\n}\n\nfunction curveFpGetQ() {\n    return this.q;\n}\n\nfunction curveFpGetA() {\n    return this.a;\n}\n\nfunction curveFpGetB() {\n    return this.b;\n}\n\nfunction curveFpEquals(other) {\n    if(other == this) return true;\n    return(this.q.equals(other.q) && this.a.equals(other.a) && this.b.equals(other.b));\n}\n\nfunction curveFpGetInfinity() {\n    return this.infinity;\n}\n\nfunction curveFpFromBigInteger(x) {\n    return new ECFieldElementFp(this.q, x);\n}\n\nfunction curveReduce(x) {\n    this.reducer.reduce(x);\n}\n\n// for now, work with hex strings because they're easier in JS\nfunction curveFpDecodePointHex(s) {\n    switch(parseInt(s.substr(0,2), 16)) { // first byte\n    case 0:\n\treturn this.infinity;\n    case 2:\n    case 3:\n\t// point compression not supported yet\n\treturn null;\n    case 4:\n    case 6:\n    case 7:\n\tvar len = (s.length - 2) / 2;\n\tvar xHex = s.substr(2, len);\n\tvar yHex = s.substr(len+2, len);\n\n\treturn new ECPointFp(this,\n\t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n\t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n    default: // unsupported\n\treturn null;\n    }\n}\n\nfunction curveFpEncodePointHex(p) {\n\tif (p.isInfinity()) return \"00\";\n\tvar xHex = p.getX().toBigInteger().toString(16);\n\tvar yHex = p.getY().toBigInteger().toString(16);\n\tvar oLen = this.getQ().toString(16).length;\n\tif ((oLen % 2) != 0) oLen++;\n\twhile (xHex.length < oLen) {\n\t\txHex = \"0\" + xHex;\n\t}\n\twhile (yHex.length < oLen) {\n\t\tyHex = \"0\" + yHex;\n\t}\n\treturn \"04\" + xHex + yHex;\n}\n\nECCurveFp.prototype.getQ = curveFpGetQ;\nECCurveFp.prototype.getA = curveFpGetA;\nECCurveFp.prototype.getB = curveFpGetB;\nECCurveFp.prototype.equals = curveFpEquals;\nECCurveFp.prototype.getInfinity = curveFpGetInfinity;\nECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger;\nECCurveFp.prototype.reduce = curveReduce;\n//ECCurveFp.prototype.decodePointHex = curveFpDecodePointHex;\nECCurveFp.prototype.encodePointHex = curveFpEncodePointHex;\n\n// from: https://github.com/kaielvin/jsbn-ec-point-compression\nECCurveFp.prototype.decodePointHex = function(s)\n{\n\tvar yIsEven;\n    switch(parseInt(s.substr(0,2), 16)) { // first byte\n    case 0:\n\treturn this.infinity;\n    case 2:\n\tyIsEven = false;\n    case 3:\n\tif(yIsEven == undefined) yIsEven = true;\n\tvar len = s.length - 2;\n\tvar xHex = s.substr(2, len);\n\tvar x = this.fromBigInteger(new BigInteger(xHex,16));\n\tvar alpha = x.multiply(x.square().add(this.getA())).add(this.getB());\n\tvar beta = alpha.sqrt();\n\n    if (beta == null) throw \"Invalid point compression\";\n\n    var betaValue = beta.toBigInteger();\n    if (betaValue.testBit(0) != yIsEven)\n    {\n        // Use the other root\n        beta = this.fromBigInteger(this.getQ().subtract(betaValue));\n    }\n    return new ECPointFp(this,x,beta);\n    case 4:\n    case 6:\n    case 7:\n\tvar len = (s.length - 2) / 2;\n\tvar xHex = s.substr(2, len);\n\tvar yHex = s.substr(len+2, len);\n\n\treturn new ECPointFp(this,\n\t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n\t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n    default: // unsupported\n\treturn null;\n    }\n}\nECCurveFp.prototype.encodeCompressedPointHex = function(p)\n{\n\tif (p.isInfinity()) return \"00\";\n\tvar xHex = p.getX().toBigInteger().toString(16);\n\tvar oLen = this.getQ().toString(16).length;\n\tif ((oLen % 2) != 0) oLen++;\n\twhile (xHex.length < oLen)\n\t\txHex = \"0\" + xHex;\n\tvar yPrefix;\n\tif(p.getY().toBigInteger().isEven()) yPrefix = \"02\";\n\telse                                 yPrefix = \"03\";\n\n\treturn yPrefix + xHex;\n}\n\n\nECFieldElementFp.prototype.getR = function()\n{\n\tif(this.r != undefined) return this.r;\n\n    this.r = null;\n    var bitLength = this.q.bitLength();\n    if (bitLength > 128)\n    {\n        var firstWord = this.q.shiftRight(bitLength - 64);\n        if (firstWord.intValue() == -1)\n        {\n            this.r = BigInteger.ONE.shiftLeft(bitLength).subtract(this.q);\n        }\n    }\n    return this.r;\n}\nECFieldElementFp.prototype.modMult = function(x1,x2)\n{\n    return this.modReduce(x1.multiply(x2));\n}\nECFieldElementFp.prototype.modReduce = function(x)\n{\n    if (this.getR() != null)\n    {\n        var qLen = q.bitLength();\n        while (x.bitLength() > (qLen + 1))\n        {\n            var u = x.shiftRight(qLen);\n            var v = x.subtract(u.shiftLeft(qLen));\n            if (!this.getR().equals(BigInteger.ONE))\n            {\n                u = u.multiply(this.getR());\n            }\n            x = u.add(v); \n        }\n        while (x.compareTo(q) >= 0)\n        {\n            x = x.subtract(q);\n        }\n    }\n    else\n    {\n        x = x.mod(q);\n    }\n    return x;\n}\nECFieldElementFp.prototype.sqrt = function()\n{\n    if (!this.q.testBit(0)) throw \"unsupported\";\n\n    // p mod 4 == 3\n    if (this.q.testBit(1))\n    {\n    \tvar z = new ECFieldElementFp(this.q,this.x.modPow(this.q.shiftRight(2).add(BigInteger.ONE),this.q));\n    \treturn z.square().equals(this) ? z : null;\n    }\n\n    // p mod 4 == 1\n    var qMinusOne = this.q.subtract(BigInteger.ONE);\n\n    var legendreExponent = qMinusOne.shiftRight(1);\n    if (!(this.x.modPow(legendreExponent, this.q).equals(BigInteger.ONE)))\n    {\n        return null;\n    }\n\n    var u = qMinusOne.shiftRight(2);\n    var k = u.shiftLeft(1).add(BigInteger.ONE);\n\n    var Q = this.x;\n    var fourQ = modDouble(modDouble(Q));\n\n    var U, V;\n    do\n    {\n        var P;\n        do\n        {\n            P = new BigInteger(this.q.bitLength(), new SecureRandom());\n        }\n        while (P.compareTo(this.q) >= 0\n            || !(P.multiply(P).subtract(fourQ).modPow(legendreExponent, this.q).equals(qMinusOne)));\n\n        var result = this.lucasSequence(P, Q, k);\n        U = result[0];\n        V = result[1];\n\n        if (this.modMult(V, V).equals(fourQ))\n        {\n            // Integer division by 2, mod q\n            if (V.testBit(0))\n            {\n                V = V.add(q);\n            }\n\n            V = V.shiftRight(1);\n\n            return new ECFieldElementFp(q,V);\n        }\n    }\n    while (U.equals(BigInteger.ONE) || U.equals(qMinusOne));\n\n    return null;\n}\nECFieldElementFp.prototype.lucasSequence = function(P,Q,k)\n{\n    var n = k.bitLength();\n    var s = k.getLowestSetBit();\n\n    var Uh = BigInteger.ONE;\n    var Vl = BigInteger.TWO;\n    var Vh = P;\n    var Ql = BigInteger.ONE;\n    var Qh = BigInteger.ONE;\n\n    for (var j = n - 1; j >= s + 1; --j)\n    {\n        Ql = this.modMult(Ql, Qh);\n\n        if (k.testBit(j))\n        {\n            Qh = this.modMult(Ql, Q);\n            Uh = this.modMult(Uh, Vh);\n            Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n            Vh = this.modReduce(Vh.multiply(Vh).subtract(Qh.shiftLeft(1)));\n        }\n        else\n        {\n            Qh = Ql;\n            Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n            Vh = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n            Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n        }\n    }\n\n    Ql = this.modMult(Ql, Qh);\n    Qh = this.modMult(Ql, Q);\n    Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n    Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n    Ql = this.modMult(Ql, Qh);\n\n    for (var j = 1; j <= s; ++j)\n    {\n        Uh = this.modMult(Uh, Vl);\n        Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n        Ql = this.modMult(Ql, Ql);\n    }\n\n    return [ Uh, Vl ];\n}\n\nvar exports = {\n  ECCurveFp: ECCurveFp,\n  ECPointFp: ECPointFp,\n  ECFieldElementFp: ECFieldElementFp\n}\n\nmodule.exports = exports\n"]}