{"version":3,"sources":["pkcs8.js"],"names":[],"mappings":"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","file":"pkcs8-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs8: readPkcs8,\n\twrite: write,\n\twritePkcs8: writePkcs8,\n\n\treadECDSACurve: readECDSACurve,\n\twriteECDSACurve: writeECDSACurve\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nfunction read(buf) {\n\treturn (pem.read(buf, 'pkcs8'));\n}\n\nfunction write(key) {\n\treturn (pem.write(key, 'pkcs8'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs8(alg, type, der) {\n\t/* Private keys in pkcs#8 format have a weird extra int */\n\tif (der.peek() === asn1.Ber.Integer) {\n\t\tassert.strictEqual(type, 'private',\n\t\t    'unexpected Integer at start of public key');\n\t\tder.readString(asn1.Ber.Integer, true);\n\t}\n\n\tder.readSequence();\n\n\tvar oid = der.readOID();\n\tswitch (oid) {\n\tcase '1.2.840.113549.1.1.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8RSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8RSAPrivate(der));\n\tcase '1.2.840.10040.4.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8DSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8DSAPrivate(der));\n\tcase '1.2.840.10045.2.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8ECDSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8ECDSAPrivate(der));\n\tdefault:\n\t\tthrow (new Error('Unknown key type OID ' + oid));\n\t}\n}\n\nfunction readPkcs8RSAPublic(der) {\n\t// Null -- XXX this probably isn't good practice\n\tder.readByte();\n\tder.readByte();\n\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\tder.readSequence();\n\n\t// modulus\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tsource: der.originalInput,\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8RSAPrivate(der) {\n\tder.readByte();\n\tder.readByte();\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar ver = readMPInt(der, 'version');\n\tassert.equal(ver[0], 0x0, 'unknown RSA private key version');\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8DSAPublic(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\n\tvar y = readMPInt(der, 'y');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8DSAPrivate(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar x = readMPInt(der, 'x');\n\n\t/* The pkcs#8 format does not include the public key */\n\tvar y = utils.calculateDSAPublic(g, p, x);\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readECDSACurve(der) {\n\tvar curveName, curveNames;\n\tvar j, c, cd;\n\n\tif (der.peek() === asn1.Ber.OID) {\n\t\tvar oid = der.readOID();\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tif (cd.pkcs8oid === oid) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.readSequence();\n\t\tvar version = der.readString(asn1.Ber.Integer, true);\n\t\tassert.strictEqual(version[0], 1, 'ECDSA key not version 1');\n\n\t\tvar curve = {};\n\n\t\t// FieldID sequence\n\t\tder.readSequence();\n\t\tvar fieldTypeOid = der.readOID();\n\t\tassert.strictEqual(fieldTypeOid, '1.2.840.10045.1.1',\n\t\t    'ECDSA key is not from a prime-field');\n\t\tvar p = curve.p = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\t/*\n\t\t * p always starts with a 1 bit, so count the zeros to get its\n\t\t * real size.\n\t\t */\n\t\tcurve.size = p.length * 8 - utils.countZeros(p);\n\n\t\t// Curve sequence\n\t\tder.readSequence();\n\t\tcurve.a = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tcurve.b = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tif (der.peek() === asn1.Ber.BitString)\n\t\t\tcurve.s = der.readString(asn1.Ber.BitString, true);\n\n\t\t// Combined Gx and Gy\n\t\tcurve.G = der.readString(asn1.Ber.OctetString, true);\n\t\tassert.strictEqual(curve.G[0], 0x4,\n\t\t    'uncompressed G is required');\n\n\t\tcurve.n = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tcurve.h = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tassert.strictEqual(curve.h[0], 0x1, 'a cofactor=1 curve is ' +\n\t\t    'required');\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tvar ks = Object.keys(curve);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tvar equal = true;\n\t\t\tfor (var i = 0; i < ks.length; ++i) {\n\t\t\t\tvar k = ks[i];\n\t\t\t\tif (cd[k] === undefined)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (typeof (cd[k]) === 'object' &&\n\t\t\t\t    cd[k].equals !== undefined) {\n\t\t\t\t\tif (!cd[k].equals(curve[k])) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (Buffer.isBuffer(cd[k])) {\n\t\t\t\t\tif (cd[k].toString('binary')\n\t\t\t\t\t    !== curve[k].toString('binary')) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (cd[k] !== curve[k]) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (equal) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn (curveName);\n}\n\nfunction readPkcs8ECDSAPrivate(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar version = readMPInt(der, 'version');\n\tassert.equal(version[0], 1, 'unknown version of ECDSA key');\n\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\tder.readSequence(0xa1);\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: new Buffer(curveName) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8ECDSAPublic(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: new Buffer(curveName) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction writePkcs8(der, key) {\n\tder.startSequence();\n\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tvar sillyInt = new Buffer(1);\n\t\tsillyInt[0] = 0x0;\n\t\tder.writeBuffer(sillyInt, asn1.Ber.Integer);\n\t}\n\n\tder.startSequence();\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tder.writeOID('1.2.840.113549.1.1.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8RSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8RSAPublic(key, der);\n\t\tbreak;\n\tcase 'dsa':\n\t\tder.writeOID('1.2.840.10040.4.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8DSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8DSAPublic(key, der);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tder.writeOID('1.2.840.10045.2.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8ECDSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8ECDSAPublic(key, der);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unsupported key type: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPrivate(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = new Buffer(1);\n\tversion[0] = 0;\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n\n\tder.endSequence();\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPublic(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\n\tder.startSequence();\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPrivate(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPublic(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writeECDSACurve(key, der) {\n\tvar curve = algs.curves[key.curve];\n\tif (curve.pkcs8oid) {\n\t\t/* This one has a name in pkcs#8, so just write the oid */\n\t\tder.writeOID(curve.pkcs8oid);\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.startSequence();\n\n\t\tvar version = new Buffer(1);\n\t\tversion.writeUInt8(1, 0);\n\t\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\t\t// FieldID sequence\n\t\tder.startSequence();\n\t\tder.writeOID('1.2.840.10045.1.1'); // prime-field\n\t\tder.writeBuffer(curve.p, asn1.Ber.Integer);\n\t\tder.endSequence();\n\n\t\t// Curve sequence\n\t\tder.startSequence();\n\t\tvar a = curve.p;\n\t\tif (a[0] === 0x0)\n\t\t\ta = a.slice(1);\n\t\tder.writeBuffer(a, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.b, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.s, asn1.Ber.BitString);\n\t\tder.endSequence();\n\n\t\tder.writeBuffer(curve.G, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.n, asn1.Ber.Integer);\n\t\tvar h = curve.h;\n\t\tif (!h) {\n\t\t\th = new Buffer(1);\n\t\t\th[0] = 1;\n\t\t}\n\t\tder.writeBuffer(h, asn1.Ber.Integer);\n\n\t\t// ECParameters\n\t\tder.endSequence();\n\t}\n}\n\nfunction writePkcs8ECDSAPublic(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs8ECDSAPrivate(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = new Buffer(1);\n\tversion[0] = 1;\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n\n\tder.endSequence();\n\tder.endSequence();\n}\n"]}