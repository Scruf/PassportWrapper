{"version":3,"sources":["pkcs1.js"],"names":[],"mappings":"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","file":"pkcs1-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs1: readPkcs1,\n\twrite: write,\n\twritePkcs1: writePkcs1\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar algs = require('../algs');\nvar utils = require('../utils');\n\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nvar pkcs8 = require('./pkcs8');\nvar readECDSACurve = pkcs8.readECDSACurve;\n\nfunction read(buf) {\n\treturn (pem.read(buf, 'pkcs1'));\n}\n\nfunction write(key) {\n\treturn (pem.write(key, 'pkcs1'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs1(alg, type, der) {\n\tswitch (alg) {\n\tcase 'RSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1RSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1RSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'DSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1DSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1DSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'EC':\n\tcase 'ECDSA':\n\t\tif (type === 'private')\n\t\t\treturn (readPkcs1ECDSAPrivate(der));\n\t\telse if (type === 'public')\n\t\t\treturn (readPkcs1ECDSAPublic(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + alg));\n\t}\n}\n\nfunction readPkcs1RSAPublic(der) {\n\t// modulus and exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1RSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version[0], 0);\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 0);\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\tvar y = readMPInt(der, 'y');\n\tvar x = readMPInt(der, 'x');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPublic(der) {\n\tvar y = readMPInt(der, 'y');\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPublic(der) {\n\tder.readSequence();\n\n\tvar oid = der.readOID();\n\tassert.strictEqual(oid, '1.2.840.10045.2.1', 'must be ecPublicKey');\n\n\tvar curveOid = der.readOID();\n\n\tvar curve;\n\tvar curves = Object.keys(algs.curves);\n\tfor (var j = 0; j < curves.length; ++j) {\n\t\tvar c = curves[j];\n\t\tvar cd = algs.curves[c];\n\t\tif (cd.pkcs8oid === curveOid) {\n\t\t\tcurve = c;\n\t\t\tbreak;\n\t\t}\n\t}\n\tassert.string(curve, 'a known ECDSA named curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: new Buffer(curve) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 1);\n\n\t// private key\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\n\tder.readSequence(0xa0);\n\tvar curve = readECDSACurve(der);\n\tassert.string(curve, 'a known elliptic curve');\n\n\tder.readSequence(0xa1);\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: new Buffer(curve) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction writePkcs1(der, key) {\n\tder.startSequence();\n\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1RSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1RSAPublic(der, key);\n\t\tbreak;\n\tcase 'dsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1DSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1DSAPublic(der, key);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1ECDSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1ECDSAPublic(der, key);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs1RSAPublic(der, key) {\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1RSAPrivate(der, key) {\n\tvar ver = new Buffer(1);\n\tver[0] = 0;\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPrivate(der, key) {\n\tvar ver = new Buffer(1);\n\tver[0] = 0;\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPublic(der, key) {\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1ECDSAPublic(der, key) {\n\tder.startSequence();\n\n\tder.writeOID('1.2.840.10045.2.1'); /* ecPublicKey */\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs1ECDSAPrivate(der, key) {\n\tvar ver = new Buffer(1);\n\tver[0] = 1;\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa0);\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\tder.endSequence();\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n}\n"]}