{"version":3,"sources":["private-key.js"],"names":[],"mappings":"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","file":"private-key-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = PrivateKey;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar edCompat;\nvar ed;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar Key = require('./key');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\nformats['ssh'] = formats['ssh-private'];\n\nfunction PrivateKey(opts) {\n\tassert.object(opts, 'options');\n\tKey.call(this, opts);\n\n\tthis._pubCache = undefined;\n}\nutil.inherits(PrivateKey, Key);\n\nPrivateKey.formats = formats;\n\nPrivateKey.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'pkcs1';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\n\treturn (formats[format].write(this));\n};\n\nPrivateKey.prototype.hash = function (algo) {\n\treturn (this.toPublic().hash(algo));\n};\n\nPrivateKey.prototype.toPublic = function () {\n\tif (this._pubCache)\n\t\treturn (this._pubCache);\n\n\tvar algInfo = algs.info[this.type];\n\tvar pubParts = [];\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = algInfo.parts[i];\n\t\tpubParts.push(this.part[p]);\n\t}\n\n\tthis._pubCache = new Key({\n\t\ttype: this.type,\n\t\tsource: this,\n\t\tparts: pubParts\n\t});\n\tif (this.comment)\n\t\tthis._pubCache.comment = this.comment;\n\treturn (this._pubCache);\n};\n\nPrivateKey.prototype.derive = function (newType, newSize) {\n\tassert.string(newType, 'type');\n\tassert.optionalNumber(newSize, 'size');\n\tvar priv, pub;\n\n\tif (this.type === 'ed25519' && newType === 'curve25519') {\n\t\tif (ed === undefined)\n\t\t\ted = require('jodid25519');\n\n\t\tpriv = this.part.r.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\t\tpriv = priv.slice(0, 32);\n\n\t\tpub = ed.dh.publicKey(priv);\n\t\tpriv = utils.mpNormalize(Buffer.concat([priv, pub]));\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'R', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'r', data: priv }\n\t\t\t]\n\t\t}));\n\t} else if (this.type === 'curve25519' && newType === 'ed25519') {\n\t\tif (ed === undefined)\n\t\t\ted = require('jodid25519');\n\n\t\tpriv = this.part.r.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\t\tpriv = priv.slice(0, 32);\n\n\t\tpub = ed.eddsa.publicKey(priv.toString('binary'));\n\t\tpub = new Buffer(pub, 'binary');\n\n\t\tpriv = utils.mpNormalize(Buffer.concat([priv, pub]));\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'ed25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'R', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'r', data: priv }\n\t\t\t]\n\t\t}));\n\t}\n\tthrow (new Error('Key derivation not supported from ' + this.type +\n\t    ' to ' + newType));\n};\n\nPrivateKey.prototype.createVerify = function (hashAlgo) {\n\treturn (this.toPublic().createVerify(hashAlgo));\n};\n\nPrivateKey.prototype.createSign = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Signer(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = this.type.toUpperCase() + '-';\n\t\tif (this.type === 'ecdsa')\n\t\t\tnm = 'ecdsa-with-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldSign = v.sign.bind(v);\n\tvar key = this.toBuffer('pkcs1');\n\tvar type = this.type;\n\tv.sign = function () {\n\t\tvar sig = oldSign(key);\n\t\tif (typeof (sig) === 'string')\n\t\t\tsig = new Buffer(sig, 'binary');\n\t\tsig = Signature.parse(sig, type, 'asn1');\n\t\tsig.hashAlgorithm = hashAlgo;\n\t\treturn (sig);\n\t};\n\treturn (v);\n};\n\nPrivateKey.parse = function (data, format, name) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (name === undefined)\n\t\tname = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data);\n\t\tassert.ok(k instanceof PrivateKey, 'key is not a private key');\n\t\tif (!k.comment)\n\t\t\tk.comment = name;\n\t\treturn (k);\n\t} catch (e) {\n\t\tthrow (new KeyParseError(name, format, e));\n\t}\n};\n\nPrivateKey.isPrivateKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, PrivateKey, ver));\n};\n\n/*\n * API versions for PrivateKey:\n * [1,0] -- initial ver\n * [1,1] -- added auto, pkcs[18], openssh/ssh-private formats\n * [1,2] -- added defaultHashAlgorithm\n * [1,3] -- added derive, ed, createDH\n * [1,4] -- first tagged version\n */\nPrivateKey.prototype._sshpkApiVersion = [1, 4];\n\nPrivateKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toPublic);\n\tassert.func(obj.createSign);\n\tif (obj.derive)\n\t\treturn ([1, 3]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 2]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}