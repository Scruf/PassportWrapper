{"version":3,"sources":["stringstream.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,gBAAgB,QAAQ,gBAAR,EAA0B,aAA1B;;AAEpB,OAAO,OAAP,GAAiB,YAAjB;AACA,OAAO,OAAP,CAAe,oBAAf,GAAsC,oBAAtC;;AAEA,SAAS,YAAT,CAAsB,IAAtB,EAA4B,EAA5B,EAAgC;AAC9B,MAAI,EAAE,gBAAgB,YAAhB,CAAF,EAAiC,OAAO,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,EAAvB,CAAP,CAArC;;AAEA,SAAO,IAAP,CAAY,IAAZ,EAH8B;;AAK9B,MAAI,QAAQ,IAAR,EAAc,OAAO,MAAP,CAAlB;;AAEA,OAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,IAAhB,CAPc;AAQ9B,OAAK,MAAL,GAAc,KAAd,CAR8B;AAS9B,OAAK,UAAL,GAAmB,MAAM,IAAN,GAAa,IAAb,GAAoB,EAApB,CATW;AAU9B,OAAK,YAAL,GAAqB,MAAM,IAAN,GAAa,EAAb,GAAkB,IAAlB,CAVS;AAW9B,OAAK,OAAL,GAAe,IAAI,oBAAJ,CAAyB,KAAK,UAAL,CAAxC,CAX8B;CAAhC;AAaA,KAAK,QAAL,CAAc,YAAd,EAA4B,MAA5B;;AAEA,aAAa,SAAb,CAAuB,KAAvB,GAA+B,UAAS,IAAT,EAAe;AAC5C,MAAI,CAAC,KAAK,QAAL,EAAe;AAClB,QAAI,MAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN,CADc;AAElB,QAAI,IAAJ,GAAW,OAAX,CAFkB;AAGlB,SAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,EAHkB;AAIlB,WAAO,KAAP,CAJkB;GAApB;AAMA,MAAI,KAAK,YAAL,EAAmB;AACrB,QAAI,OAAO,QAAP,CAAgB,IAAhB,CAAJ,EAA2B,OAAO,KAAK,QAAL,EAAP,CAA3B;AACA,WAAO,IAAI,MAAJ,CAAW,IAAX,EAAiB,KAAK,YAAL,CAAxB,CAFqB;GAAvB;AAIA,MAAI,SAAS,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAAT,CAXwC;AAY5C,MAAI,OAAO,MAAP,EAAe,KAAK,IAAL,CAAU,MAAV,EAAkB,MAAlB,EAAnB;AACA,SAAO,CAAC,KAAK,MAAL,CAboC;CAAf;;AAgB/B,aAAa,SAAb,CAAuB,KAAvB,GAA+B,YAAW;AACxC,MAAI,KAAK,OAAL,CAAa,KAAb,EAAoB;AACtB,QAAI,SAAS,KAAK,OAAL,CAAa,KAAb,EAAT,CADkB;AAEtB,QAAI,OAAO,MAAP,EAAe,KAAK,IAAL,CAAU,MAAV,EAAkB,MAAlB,EAAnB;GAFF;CAD6B;;AAO/B,aAAa,SAAb,CAAuB,GAAvB,GAA6B,YAAW;AACtC,MAAI,CAAC,KAAK,QAAL,IAAiB,CAAC,KAAK,QAAL,EAAe,OAAtC;AACA,OAAK,KAAL,GAFsC;AAGtC,OAAK,IAAL,CAAU,KAAV,EAHsC;AAItC,OAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,KAAhB,CAJsB;AAKtC,OAAK,OAAL,GALsC;CAAX;;AAQ7B,aAAa,SAAb,CAAuB,OAAvB,GAAiC,YAAW;AAC1C,OAAK,OAAL,GAAe,IAAf,CAD0C;AAE1C,OAAK,QAAL,GAAgB,KAAK,QAAL,GAAgB,KAAhB,CAF0B;AAG1C,OAAK,IAAL,CAAU,OAAV,EAH0C;CAAX;;AAMjC,aAAa,SAAb,CAAuB,KAAvB,GAA+B,YAAW;AACxC,OAAK,MAAL,GAAc,IAAd,CADwC;CAAX;;AAI/B,aAAa,SAAb,CAAuB,MAAvB,GAAgC,YAAY;AAC1C,MAAI,KAAK,MAAL,EAAa,KAAK,IAAL,CAAU,OAAV,EAAjB;AACA,OAAK,MAAL,GAAc,KAAd,CAF0C;CAAZ;;AAKhC,SAAS,oBAAT,CAA8B,QAA9B,EAAwC;AACtC,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,QAAzB,EADsC;;AAGtC,UAAQ,KAAK,QAAL;AACN,SAAK,QAAL;AACE,WAAK,KAAL,GAAa,YAAb,CADF;AAEE,WAAK,aAAL,GAAqB,IAAI,MAAJ,CAAW,CAAX,CAArB,CAFF;AAGE,WAAK,YAAL,GAAoB,CAApB,CAHF;AAIE,YAJF;AADF,GAHsC;CAAxC;AAWA,KAAK,QAAL,CAAc,oBAAd,EAAoC,aAApC;;AAEA,qBAAqB,SAArB,CAA+B,KAA/B,GAAuC,YAAW;AAChD,MAAI,CAAC,KAAK,aAAL,IAAsB,CAAC,KAAK,YAAL,EAAmB,OAAO,EAAP,CAA/C;AACA,MAAI,WAAW,KAAK,aAAL,CAAmB,QAAnB,CAA4B,KAAK,QAAL,EAAe,CAA3C,EAA8C,KAAK,YAAL,CAAzD,CAF4C;AAGhD,OAAK,YAAL,GAAoB,CAApB,CAHgD;AAIhD,SAAO,QAAP,CAJgD;CAAX;;AAOvC,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC5B,MAAI,MAAM,CAAC,KAAK,YAAL,GAAoB,OAAO,MAAP,CAArB,GAAsC,KAAK,aAAL,CAAmB,MAAnB,CADpB;AAE5B,MAAI,CAAC,GAAD,IAAQ,CAAC,KAAK,YAAL,EAAmB,OAAO,OAAO,QAAP,CAAgB,KAAK,QAAL,CAAvB,CAAhC;;AAEA,MAAI,eAAe,IAAI,MAAJ,CAAW,KAAK,YAAL,GAAoB,OAAO,MAAP,GAAgB,GAApC,CAA1B,CAJwB;;AAM5B,OAAK,aAAL,CAAmB,IAAnB,CAAwB,YAAxB,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,KAAK,YAAL,CAA5C,CAN4B;AAO5B,SAAO,IAAP,CAAY,YAAZ,EAA0B,KAAK,YAAL,EAAmB,CAA7C,EAAgD,OAAO,MAAP,GAAgB,GAAhB,CAAhD,CAP4B;;AAS5B,SAAO,IAAP,CAAY,KAAK,aAAL,EAAoB,CAAhC,EAAmC,OAAO,MAAP,GAAgB,GAAhB,EAAqB,OAAO,MAAP,CAAxD,CAT4B;AAU5B,OAAK,YAAL,GAAoB,GAApB,CAV4B;;AAY5B,SAAO,aAAa,QAAb,CAAsB,KAAK,QAAL,CAA7B,CAZ4B;CAA9B","file":"stringstream-compiled.js","sourcesContent":["var util = require('util')\nvar Stream = require('stream')\nvar StringDecoder = require('string_decoder').StringDecoder\n\nmodule.exports = StringStream\nmodule.exports.AlignedStringDecoder = AlignedStringDecoder\n\nfunction StringStream(from, to) {\n  if (!(this instanceof StringStream)) return new StringStream(from, to)\n\n  Stream.call(this)\n\n  if (from == null) from = 'utf8'\n\n  this.readable = this.writable = true\n  this.paused = false\n  this.toEncoding = (to == null ? from : to)\n  this.fromEncoding = (to == null ? '' : from)\n  this.decoder = new AlignedStringDecoder(this.toEncoding)\n}\nutil.inherits(StringStream, Stream)\n\nStringStream.prototype.write = function(data) {\n  if (!this.writable) {\n    var err = new Error('stream not writable')\n    err.code = 'EPIPE'\n    this.emit('error', err)\n    return false\n  }\n  if (this.fromEncoding) {\n    if (Buffer.isBuffer(data)) data = data.toString()\n    data = new Buffer(data, this.fromEncoding)\n  }\n  var string = this.decoder.write(data)\n  if (string.length) this.emit('data', string)\n  return !this.paused\n}\n\nStringStream.prototype.flush = function() {\n  if (this.decoder.flush) {\n    var string = this.decoder.flush()\n    if (string.length) this.emit('data', string)\n  }\n}\n\nStringStream.prototype.end = function() {\n  if (!this.writable && !this.readable) return\n  this.flush()\n  this.emit('end')\n  this.writable = this.readable = false\n  this.destroy()\n}\n\nStringStream.prototype.destroy = function() {\n  this.decoder = null\n  this.writable = this.readable = false\n  this.emit('close')\n}\n\nStringStream.prototype.pause = function() {\n  this.paused = true\n}\n\nStringStream.prototype.resume = function () {\n  if (this.paused) this.emit('drain')\n  this.paused = false\n}\n\nfunction AlignedStringDecoder(encoding) {\n  StringDecoder.call(this, encoding)\n\n  switch (this.encoding) {\n    case 'base64':\n      this.write = alignedWrite\n      this.alignedBuffer = new Buffer(3)\n      this.alignedBytes = 0\n      break\n  }\n}\nutil.inherits(AlignedStringDecoder, StringDecoder)\n\nAlignedStringDecoder.prototype.flush = function() {\n  if (!this.alignedBuffer || !this.alignedBytes) return ''\n  var leftover = this.alignedBuffer.toString(this.encoding, 0, this.alignedBytes)\n  this.alignedBytes = 0\n  return leftover\n}\n\nfunction alignedWrite(buffer) {\n  var rem = (this.alignedBytes + buffer.length) % this.alignedBuffer.length\n  if (!rem && !this.alignedBytes) return buffer.toString(this.encoding)\n\n  var returnBuffer = new Buffer(this.alignedBytes + buffer.length - rem)\n\n  this.alignedBuffer.copy(returnBuffer, 0, 0, this.alignedBytes)\n  buffer.copy(returnBuffer, this.alignedBytes, 0, buffer.length - rem)\n\n  buffer.copy(this.alignedBuffer, 0, buffer.length - rem, buffer.length)\n  this.alignedBytes = rem\n\n  return returnBuffer.toString(this.encoding)\n}\n"]}