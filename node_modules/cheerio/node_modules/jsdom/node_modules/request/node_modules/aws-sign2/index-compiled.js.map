{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\n/*!\n *  Copyright 2010 LearnBoost <dev@learnboost.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto')\n  , parse = require('url').parse\n  ;\n\n/**\n * Valid keys.\n */\n\nvar keys = \n  [ 'acl'\n  , 'location'\n  , 'logging'\n  , 'notification'\n  , 'partNumber'\n  , 'policy'\n  , 'requestPayment'\n  , 'torrent'\n  , 'uploadId'\n  , 'uploads'\n  , 'versionId'\n  , 'versioning'\n  , 'versions'\n  , 'website'\n  ]\n\n/**\n * Return an \"Authorization\" header value with the given `options`\n * in the form of \"AWS <key>:<signature>\"\n *\n * @param {Object} options\n * @return {String}\n * @api private\n */\n\nfunction authorization (options) {\n  return 'AWS ' + options.key + ':' + sign(options)\n}\n\nmodule.exports = authorization\nmodule.exports.authorization = authorization\n\n/**\n * Simple HMAC-SHA1 Wrapper\n *\n * @param {Object} options\n * @return {String}\n * @api private\n */ \n\nfunction hmacSha1 (options) {\n  return crypto.createHmac('sha1', options.secret).update(options.message).digest('base64')\n}\n\nmodule.exports.hmacSha1 = hmacSha1\n\n/**\n * Create a base64 sha1 HMAC for `options`. \n * \n * @param {Object} options\n * @return {String}\n * @api private\n */\n\nfunction sign (options) {\n  options.message = stringToSign(options)\n  return hmacSha1(options)\n}\nmodule.exports.sign = sign\n\n/**\n * Create a base64 sha1 HMAC for `options`. \n *\n * Specifically to be used with S3 presigned URLs\n * \n * @param {Object} options\n * @return {String}\n * @api private\n */\n\nfunction signQuery (options) {\n  options.message = queryStringToSign(options)\n  return hmacSha1(options)\n}\nmodule.exports.signQuery= signQuery\n\n/**\n * Return a string for sign() with the given `options`.\n *\n * Spec:\n * \n *    <verb>\\n\n *    <md5>\\n\n *    <content-type>\\n\n *    <date>\\n\n *    [headers\\n]\n *    <resource>\n *\n * @param {Object} options\n * @return {String}\n * @api private\n */\n\nfunction stringToSign (options) {\n  var headers = options.amazonHeaders || ''\n  if (headers) headers += '\\n'\n  var r = \n    [ options.verb\n    , options.md5\n    , options.contentType\n    , options.date ? options.date.toUTCString() : ''\n    , headers + options.resource\n    ]\n  return r.join('\\n')\n}\nmodule.exports.queryStringToSign = stringToSign\n\n/**\n * Return a string for sign() with the given `options`, but is meant exclusively\n * for S3 presigned URLs\n *\n * Spec:\n * \n *    <date>\\n\n *    <resource>\n *\n * @param {Object} options\n * @return {String}\n * @api private\n */\n\nfunction queryStringToSign (options){\n  return 'GET\\n\\n\\n' + options.date + '\\n' + options.resource\n}\nmodule.exports.queryStringToSign = queryStringToSign\n\n/**\n * Perform the following:\n *\n *  - ignore non-amazon headers\n *  - lowercase fields\n *  - sort lexicographically\n *  - trim whitespace between \":\"\n *  - join with newline\n *\n * @param {Object} headers\n * @return {String}\n * @api private\n */\n\nfunction canonicalizeHeaders (headers) {\n  var buf = []\n    , fields = Object.keys(headers)\n    ;\n  for (var i = 0, len = fields.length; i < len; ++i) {\n    var field = fields[i]\n      , val = headers[field]\n      , field = field.toLowerCase()\n      ;\n    if (0 !== field.indexOf('x-amz')) continue\n    buf.push(field + ':' + val)\n  }\n  return buf.sort().join('\\n')\n}\nmodule.exports.canonicalizeHeaders = canonicalizeHeaders\n\n/**\n * Perform the following:\n *\n *  - ignore non sub-resources\n *  - sort lexicographically\n *\n * @param {String} resource\n * @return {String}\n * @api private\n */\n\nfunction canonicalizeResource (resource) {\n  var url = parse(resource, true)\n    , path = url.pathname\n    , buf = []\n    ;\n\n  Object.keys(url.query).forEach(function(key){\n    if (!~keys.indexOf(key)) return\n    var val = '' == url.query[key] ? '' : '=' + encodeURIComponent(url.query[key])\n    buf.push(key + val)\n  })\n\n  return path + (buf.length ? '?' + buf.sort().join('&') : '')\n}\nmodule.exports.canonicalizeResource = canonicalizeResource\n"]}