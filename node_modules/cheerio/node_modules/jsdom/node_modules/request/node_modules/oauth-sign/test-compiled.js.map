{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,SAAR,CAAR;IACA,WAAW,MAAM,QAAN;IACX,SAAS,QAAQ,QAAR,CAAT;IACA,KAAK,QAAQ,aAAR,CAAL;;;;AAKJ,IAAI,UAAU,SAAS,MAAT,EAAiB,6CAAjB,EACZ,EAAE,gBAAgB,yEAAhB;AACA,sBAAoB,sBAApB;AACA,eAAa,6CAAb;AACA,0BAAwB,WAAxB;AACA,mBAAiB,YAAjB;AACA,iBAAe,KAAf;CANU,EAOT,6CAPS,CAAV;;AASJ,QAAQ,GAAR,CAAY,OAAZ;AACA,QAAQ,GAAR,CAAY,8BAAZ;AACA,OAAO,KAAP,CAAa,OAAb,EAAsB,8BAAtB;;AAEA,IAAI,UAAU,SAAS,MAAT,EAAiB,4CAAjB,EACZ,EAAE,oBAAoB,sBAApB;AACA,eAAa,2CAAb;AACA,0BAAwB,WAAxB;AACA,eAAa,2CAAb;AACA,mBAAiB,YAAjB;AACA,kBAAgB,6CAAhB;AACA,iBAAe,KAAf;CAPU,EAQT,6CARS,EAQsC,2CARtC,CAAV;;AAUJ,QAAQ,GAAR,CAAY,OAAZ;AACA,QAAQ,GAAR,CAAY,8BAAZ;AACA,OAAO,KAAP,CAAa,OAAb,EAAsB,8BAAtB;;AAEA,IAAI,SAAS,SAAS,MAAT,EAAiB,+CAAjB,EACX,EAAE,oBAAoB,sBAApB;AACA,eAAa,2CAAb;AACA,0BAAwB,WAAxB;AACA,eAAa,mDAAb;AACA,mBAAiB,YAAjB;AACA,iBAAe,KAAf;AACA,UAAQ,mCAAR;CAPS,EAQR,6CARQ,EAQuC,0CARvC,CAAT;;AAUJ,QAAQ,GAAR,CAAY,MAAZ;AACA,QAAQ,GAAR,CAAY,8BAAZ;AACA,OAAO,KAAP,CAAa,MAAb,EAAqB,8BAArB;;;AAGA,IAAI,SAAS,SAAS,MAAT,EAAiB,8BAAjB,EACX,EAAE,oBAAoB,sBAApB;AACA,eAAa,2CAAb;AACA,0BAAwB,WAAxB;AACA,eAAa,mDAAb;AACA,mBAAiB,YAAjB;AACA,iBAAe,KAAf;AACA,UAAQ,EAAE,QAAQ,IAAR,EAAV;CAPS,EAQR,6CARQ,EAQuC,0CARvC,CAAT;;AAUJ,QAAQ,GAAR,CAAY,MAAZ;AACA,QAAQ,GAAR,CAAY,8BAAZ;AACA,OAAO,KAAP,CAAa,MAAb,EAAqB,8BAArB;;;AAGA,IAAI,SAAS,GAAG,KAAH,CAAS,oCAAoC,GAApC,GAA0C,WAA1C,CAAlB;AACJ,OAAO,kBAAP,GAA4B,kBAA5B;AACA,OAAO,WAAP,GAAqB,kBAArB;AACA,OAAO,WAAP,GAAqB,UAArB;AACA,OAAO,sBAAP,GAAgC,WAAhC;AACA,OAAO,eAAP,GAAyB,WAAzB;;AAEA,IAAI,cAAc,SAAS,MAAT,EAAiB,4BAAjB,EAChB,MADgB,EACR,cADQ,EACQ,cADR,CAAd;;AAGJ,QAAQ,GAAR,CAAY,WAAZ;AACA,QAAQ,GAAR,CAAY,8BAAZ;AACA,OAAO,KAAP,CAAa,WAAb,EAA0B,8BAA1B;;;;AAKA,IAAI,YAAY,MAAM,IAAN,CAAW,WAAX,EAAwB,KAAxB,EAA+B,kBAA/B,EAAmD,EAAnD,EAAuD,iBAAvD,EAA0E,cAA1E,CAAZ;AACJ,QAAQ,GAAR,CAAY,SAAZ;AACA,OAAO,KAAP,CAAa,SAAb,EAAwB,8BAAxB;;AAEA,YAAY,MAAM,SAAN,CAAgB,iBAAhB,EAAmC,cAAnC,CAAZ;AACA,QAAQ,GAAR,CAAY,SAAZ;AACA,OAAO,KAAP,CAAa,SAAb,EAAwB,8BAAxB","file":"test-compiled.js","sourcesContent":["var oauth = require('./index')\n  , hmacsign = oauth.hmacsign\n  , assert = require('assert')\n  , qs = require('querystring')\n  ;\n\n// Tests from Twitter documentation https://dev.twitter.com/docs/auth/oauth\n\nvar reqsign = hmacsign('POST', 'https://api.twitter.com/oauth/request_token', \n  { oauth_callback: 'http://localhost:3005/the_dance/process_callback?service_provider_id=11'\n  , oauth_consumer_key: 'GDdmIQH6jhtmLUypg82g'\n  , oauth_nonce: 'QP70eNmVz8jvdPevU3oJD2AfF7R7odC2XJcn4XlZJqk'\n  , oauth_signature_method: 'HMAC-SHA1'\n  , oauth_timestamp: '1272323042'\n  , oauth_version: '1.0'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\")\n\nconsole.log(reqsign)\nconsole.log('8wUi7m5HFQy76nowoCThusfgB+Q=')\nassert.equal(reqsign, '8wUi7m5HFQy76nowoCThusfgB+Q=')\n\nvar accsign = hmacsign('POST', 'https://api.twitter.com/oauth/access_token',\n  { oauth_consumer_key: 'GDdmIQH6jhtmLUypg82g'\n  , oauth_nonce: '9zWH6qe0qG7Lc1telCn7FhUbLyVdjEaL3MO5uHxn8'\n  , oauth_signature_method: 'HMAC-SHA1'\n  , oauth_token: '8ldIZyxQeVrFZXFOZH5tAwj6vzJYuLQpl0WUEYtWc'\n  , oauth_timestamp: '1272323047'\n  , oauth_verifier: 'pDNg57prOHapMbhv25RNf75lVRd6JDsni1AJJIDYoTY'\n  , oauth_version: '1.0'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"x6qpRnlEmW9JbQn4PQVVeVG8ZLPEx6A0TOebgwcuA\")\n  \nconsole.log(accsign)\nconsole.log('PUw/dHA4fnlJYM6RhXk5IU/0fCc=')\nassert.equal(accsign, 'PUw/dHA4fnlJYM6RhXk5IU/0fCc=')\n\nvar upsign = hmacsign('POST', 'http://api.twitter.com/1/statuses/update.json', \n  { oauth_consumer_key: \"GDdmIQH6jhtmLUypg82g\"\n  , oauth_nonce: \"oElnnMTQIZvqvlfXM56aBLAf5noGD0AQR3Fmi7Q6Y\"\n  , oauth_signature_method: \"HMAC-SHA1\"\n  , oauth_token: \"819797-Jxq8aYUDRmykzVKrgoLhXSq67TEa5ruc4GJC2rWimw\"\n  , oauth_timestamp: \"1272325550\"\n  , oauth_version: \"1.0\"\n  , status: 'setting up my twitter 私のさえずりを設定する'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"J6zix3FfA9LofH0awS24M3HcBYXO5nI1iYe8EfBA\")\n\nconsole.log(upsign)\nconsole.log('yOahq5m0YjDDjfjxHaXEsW9D+X0=')\nassert.equal(upsign, 'yOahq5m0YjDDjfjxHaXEsW9D+X0=')\n\n// handle objects in params (useful for Wordpress REST API)\nvar upsign = hmacsign('POST', 'http://wordpress.com/wp-json',\n  { oauth_consumer_key: \"GDdmIQH6jhtmLUypg82g\"\n  , oauth_nonce: \"oElnnMTQIZvqvlfXM56aBLAf5noGD0AQR3Fmi7Q6Y\"\n  , oauth_signature_method: \"HMAC-SHA1\"\n  , oauth_token: \"819797-Jxq8aYUDRmykzVKrgoLhXSq67TEa5ruc4GJC2rWimw\"\n  , oauth_timestamp: \"1272325550\"\n  , oauth_version: \"1.0\"\n  , filter: { number: \"-1\" }\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"J6zix3FfA9LofH0awS24M3HcBYXO5nI1iYe8EfBA\")\n\nconsole.log(upsign)\nconsole.log('YrJFBdwnjuIitGpKrxLUplcuuUQ=')\nassert.equal(upsign, 'YrJFBdwnjuIitGpKrxLUplcuuUQ=')\n\n// example in rfc5849\nvar params = qs.parse('b5=%3D%253D&a3=a&c%40=&a2=r%20b' + '&' + 'c2&a3=2+q')\nparams.oauth_consumer_key = '9djdj82h48djs9d2'\nparams.oauth_token = 'kkk9d7dh3k39sjv7'\nparams.oauth_nonce = '7d8f3e4a'\nparams.oauth_signature_method = 'HMAC-SHA1'\nparams.oauth_timestamp = '137131201'\n\nvar rfc5849sign = hmacsign('POST', 'http://example.com/request',\n  params, \"j49sk3j29djd\", \"dh893hdasih9\")\n\nconsole.log(rfc5849sign)\nconsole.log('r6/TJjbCOr97/+UU0NsvSne7s5g=')\nassert.equal(rfc5849sign, 'r6/TJjbCOr97/+UU0NsvSne7s5g=')\n\n\n// PLAINTEXT\n\nvar plainSign = oauth.sign('PLAINTEXT', 'GET', 'http://dummy.com', {}, 'consumer_secret', 'token_secret')\nconsole.log(plainSign)\nassert.equal(plainSign, 'consumer_secret&token_secret')\n\nplainSign = oauth.plaintext('consumer_secret', 'token_secret')\nconsole.log(plainSign)\nassert.equal(plainSign, 'consumer_secret&token_secret')\n"]}