{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Dns = require('dns');\nvar Dgram = require('dgram');\nvar Lab = require('lab');\nvar Sntp = require('../lib');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar before = lab.before;\nvar after = lab.after;\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Lab.expect;\n\n\ndescribe('SNTP', function () {\n\n    describe('#time', function () {\n\n        it('returns consistent result over multiple tries', function (done) {\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                var t1 = time.t;\n\n                Sntp.time(function (err, time) {\n\n                    expect(err).to.not.exist;\n                    expect(time).to.exist;\n                    var t2 = time.t;\n                    expect(Math.abs(t1 - t2)).is.below(200);\n                    done();\n                });\n            });\n        });\n\n        it('resolves reference IP', function (done) {\n\n            Sntp.time({ host: 'ntp.exnet.com', resolveReference: true }, function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                expect(time.referenceHost).to.exist;\n                done();\n            });\n        });\n\n        it('times out on no response', function (done) {\n\n            Sntp.time({ port: 124, timeout: 100 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Timeout');\n                done();\n            });\n        });\n\n        it('errors on error event', { parallel: false }, function (done) {\n\n            var orig = Dgram.createSocket;\n            Dgram.createSocket = function (type) {\n\n                Dgram.createSocket = orig;\n                var socket = Dgram.createSocket(type);\n                setImmediate(function () { socket.emit('error', new Error('Fake')) });\n                return socket;\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Fake');\n                done();\n            });\n        });\n\n        it('errors on incorrect sent size', { parallel: false }, function (done) {\n\n            var orig = Dgram.Socket.prototype.send;\n            Dgram.Socket.prototype.send = function (buf, offset, length, port, address, callback) {\n\n                Dgram.Socket.prototype.send = orig;\n                return callback(null, 40);\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Could not send entire message');\n                done();\n            });\n        });\n\n        it('times out on invalid host', function (done) {\n\n            Sntp.time({ host: 'error', timeout: 10000 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.contain('getaddrinfo');\n                done();\n            });\n        });\n\n        it('fails on bad response buffer size', function (done) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n                var message = new Buffer(10);\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        var messup = function (bytes) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n\n                var message = new Buffer([\n                    0x24, 0x01, 0x00, 0xe3,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x41, 0x43, 0x54, 0x53,\n                    0xd4, 0xa8, 0x2d, 0xc7,\n                    0x1c, 0x5d, 0x49, 0x1b,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x67, 0xef, 0x9d, 0xb2,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xed, 0xb5, 0xfb,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xee, 0x6c, 0xc5\n                ]);\n\n                for (var i = 0, il = bytes.length; i < il; ++i) {\n                    message[bytes[i][0]] = bytes[i][1];\n                }\n\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n        };\n\n        it('fails on bad version', function (done) {\n\n            messup([[0, (0 << 6) + (3 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.version).to.equal(3);\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originateTimestamp', function (done) {\n\n            messup([[24, 0x83], [25, 0xaa], [26, 0x7e], [27, 0x80], [28, 0], [29, 0], [30, 0], [31, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad receiveTimestamp', function (done) {\n\n            messup([[32, 0x83], [33, 0xaa], [34, 0x7e], [35, 0x80], [36, 0], [37, 0], [38, 0], [39, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originate timestamp and alarm li', function (done) {\n\n            messup([[0, (3 << 6) + (4 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Wrong originate timestamp');\n                expect(time.leapIndicator).to.equal('alarm');\n                done();\n            });\n        });\n\n        it('returns time with death stratum and last61 li', function (done) {\n\n            messup([[0, (1 << 6) + (4 << 3) + (4 << 0)], [1, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('death');\n                expect(time.leapIndicator).to.equal('last-minute-61');\n                done();\n            });\n        });\n\n        it('returns time with reserved stratum and last59 li', function (done) {\n\n            messup([[0, (2 << 6) + (4 << 3) + (4 << 0)], [1, 0x1f]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('reserved');\n                expect(time.leapIndicator).to.equal('last-minute-59');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-active)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (1 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-active');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-passive)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (2 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-passive');\n                done();\n            });\n        });\n\n        it('fails on bad mode (client)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (3 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('client');\n                done();\n            });\n        });\n\n        it('fails on bad mode (broadcast)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (5 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('broadcast');\n                done();\n            });\n        });\n\n        it('fails on bad mode (reserved)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (6 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('reserved');\n                done();\n            });\n        });\n    });\n\n    describe('#offset', function () {\n\n        it('gets the current offset', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                done();\n            });\n        });\n\n        it('gets the current offset from cache', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({}, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ host: 'nist1-sj.ustiming.org' }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ port: 123 }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('fails getting the current offset on invalid server', function (done) {\n\n            Sntp.offset({ host: 'error' }, function (err, offset) {\n\n                expect(err).to.exist;\n                expect(offset).to.equal(0);\n                done();\n            });\n        });\n    });\n\n    describe('#now', function () {\n\n        it('starts auto-sync, gets now, then stops', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start(function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                Sntp.stop();\n\n                done();\n            });\n        });\n\n        it('starts twice', function (done) {\n\n            Sntp.start(function () {\n\n                Sntp.start(function () {\n\n                    var now = Sntp.now();\n                    expect(now).to.not.equal(Date.now());\n                    Sntp.stop();\n\n                    done();\n                });\n            });\n        });\n\n        it('starts auto-sync, gets now, waits, gets again after timeout', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start({ clockSyncRefresh: 100 }, function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                expect(now).to.equal(Sntp.now());\n\n                setTimeout(function () {\n\n                    expect(Sntp.now()).to.not.equal(now);\n                    Sntp.stop();\n                    done();\n                }, 110);\n            });\n        });\n    });\n});\n\n"]}