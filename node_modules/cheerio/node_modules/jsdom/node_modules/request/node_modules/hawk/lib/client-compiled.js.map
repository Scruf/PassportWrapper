{"version":3,"sources":["client.js"],"names":[],"mappings":"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","file":"client-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Url = require('url');\r\nvar Hoek = require('hoek');\r\nvar Cryptiles = require('cryptiles');\r\nvar Crypto = require('./crypto');\r\nvar Utils = require('./utils');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Generate an Authorization header for a given request\r\n\r\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    method: HTTP verb (e.g. 'GET', 'POST')\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\r\n        },\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        timestamp: Date.now(),                              // A pre-calculated timestamp\r\n        nonce: '2334f34f',                                  // A pre-generated nonce\r\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\r\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\r\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\r\n        app: '24s23423f34dx',                               // Oz application id\r\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\r\n    }\r\n*/\r\n\r\nexports.header = function (uri, method, options) {\r\n\r\n    var result = {\r\n        field: '',\r\n        artifacts: {}\r\n    };\r\n\r\n    // Validate inputs\r\n\r\n    if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\r\n        !method || typeof method !== 'string' ||\r\n        !options || typeof options !== 'object') {\r\n\r\n        result.err = 'Invalid argument type';\r\n        return result;\r\n    }\r\n\r\n    // Application time\r\n\r\n    var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\r\n\r\n    // Validate credentials\r\n\r\n    var credentials = options.credentials;\r\n    if (!credentials ||\r\n        !credentials.id ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        result.err = 'Invalid credential object';\r\n        return result;\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        result.err = 'Unknown algorithm';\r\n        return result;\r\n    }\r\n\r\n    // Parse URI\r\n\r\n    if (typeof uri === 'string') {\r\n        uri = Url.parse(uri);\r\n    }\r\n\r\n    // Calculate signature\r\n\r\n    var artifacts = {\r\n        ts: timestamp,\r\n        nonce: options.nonce || Cryptiles.randomString(6),\r\n        method: method,\r\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\r\n        host: uri.hostname,\r\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\r\n        hash: options.hash,\r\n        ext: options.ext,\r\n        app: options.app,\r\n        dlg: options.dlg\r\n    };\r\n\r\n    result.artifacts = artifacts;\r\n\r\n    // Calculate payload hash\r\n\r\n    if (!artifacts.hash &&\r\n        (options.payload || options.payload === '')) {\r\n\r\n        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\r\n    }\r\n\r\n    var mac = Crypto.calculateMac('header', credentials, artifacts);\r\n\r\n    // Construct header\r\n\r\n    var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\r\n    var header = 'Hawk id=\"' + credentials.id +\r\n                 '\", ts=\"' + artifacts.ts +\r\n                 '\", nonce=\"' + artifacts.nonce +\r\n                 (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\r\n                 (hasExt ? '\", ext=\"' + Hoek.escapeHeaderAttribute(artifacts.ext) : '') +\r\n                 '\", mac=\"' + mac + '\"';\r\n\r\n    if (artifacts.app) {\r\n        header += ', app=\"' + artifacts.app +\r\n                  (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\r\n    }\r\n\r\n    result.field = header;\r\n\r\n    return result;\r\n};\r\n\r\n\r\n// Validate server response\r\n\r\n/*\r\n    res:        node's response object\r\n    artifacts:  object received from header().artifacts\r\n    options: {\r\n        payload:    optional payload received\r\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\r\n    }\r\n*/\r\n\r\nexports.authenticate = function (res, credentials, artifacts, options) {\r\n\r\n    artifacts = Hoek.clone(artifacts);\r\n    options = options || {};\r\n\r\n    if (res.headers['www-authenticate']) {\r\n\r\n        // Parse HTTP WWW-Authenticate header\r\n\r\n        var wwwAttributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\r\n        if (wwwAttributes instanceof Error) {\r\n            return false;\r\n        }\r\n\r\n        // Validate server timestamp (not used to update clock since it is done via the SNPT client)\r\n\r\n        if (wwwAttributes.ts) {\r\n            var tsm = Crypto.calculateTsMac(wwwAttributes.ts, credentials);\r\n            if (tsm !== wwwAttributes.tsm) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Parse HTTP Server-Authorization header\r\n\r\n    if (!res.headers['server-authorization'] &&\r\n        !options.required) {\r\n\r\n        return true;\r\n    }\r\n\r\n    var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\r\n    if (attributes instanceof Error) {\r\n        return false;\r\n    }\r\n\r\n    artifacts.ext = attributes.ext;\r\n    artifacts.hash = attributes.hash;\r\n\r\n    var mac = Crypto.calculateMac('response', credentials, artifacts);\r\n    if (mac !== attributes.mac) {\r\n        return false;\r\n    }\r\n\r\n    if (!options.payload &&\r\n        options.payload !== '') {\r\n\r\n        return true;\r\n    }\r\n\r\n    if (!attributes.hash) {\r\n        return false;\r\n    }\r\n\r\n    var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\r\n    return (calculatedHash === attributes.hash);\r\n};\r\n\r\n\r\n// Generate a bewit value for a given URI\r\n\r\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\r\n        },\r\n        ttlSec: 60 * 60,                                    // TTL in seconds\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        localtimeOffsetMsec: 400                            // Time offset to sync with server time\r\n    };\r\n*/\r\n\r\nexports.getBewit = function (uri, options) {\r\n\r\n    // Validate inputs\r\n\r\n    if (!uri ||\r\n        (typeof uri !== 'string' && typeof uri !== 'object') ||\r\n        !options ||\r\n        typeof options !== 'object' ||\r\n        !options.ttlSec) {\r\n\r\n        return '';\r\n    }\r\n\r\n    options.ext = (options.ext === null || options.ext === undefined ? '' : options.ext);       // Zero is valid value\r\n\r\n    // Application time\r\n\r\n    var now = Utils.now(options.localtimeOffsetMsec);\r\n\r\n    // Validate credentials\r\n\r\n    var credentials = options.credentials;\r\n    if (!credentials ||\r\n        !credentials.id ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        return '';\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        return '';\r\n    }\r\n\r\n    // Parse URI\r\n\r\n    if (typeof uri === 'string') {\r\n        uri = Url.parse(uri);\r\n    }\r\n\r\n    // Calculate signature\r\n\r\n    var exp = Math.floor(now / 1000) + options.ttlSec;\r\n    var mac = Crypto.calculateMac('bewit', credentials, {\r\n        ts: exp,\r\n        nonce: '',\r\n        method: 'GET',\r\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\r\n        host: uri.hostname,\r\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\r\n        ext: options.ext\r\n    });\r\n\r\n    // Construct bewit: id\\exp\\mac\\ext\r\n\r\n    var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\r\n    return Hoek.base64urlEncode(bewit);\r\n};\r\n\r\n\r\n// Generate an authorization string for a message\r\n\r\n/*\r\n    host: 'example.com',\r\n    port: 8000,\r\n    message: '{\"some\":\"payload\"}',                          // UTF-8 encoded string for body hash generation\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\r\n        },\r\n\r\n        // Optional\r\n\r\n        timestamp: Date.now(),                              // A pre-calculated timestamp\r\n        nonce: '2334f34f',                                  // A pre-generated nonce\r\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\r\n    }\r\n*/\r\n\r\nexports.message = function (host, port, message, options) {\r\n\r\n    // Validate inputs\r\n\r\n    if (!host || typeof host !== 'string' ||\r\n        !port || typeof port !== 'number' ||\r\n        message === null || message === undefined || typeof message !== 'string' ||\r\n        !options || typeof options !== 'object') {\r\n\r\n        return null;\r\n    }\r\n\r\n    // Application time\r\n\r\n    var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\r\n\r\n    // Validate credentials\r\n\r\n    var credentials = options.credentials;\r\n    if (!credentials ||\r\n        !credentials.id ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        // Invalid credential object\r\n        return null;\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        return null;\r\n    }\r\n\r\n    // Calculate signature\r\n\r\n    var artifacts = {\r\n        ts: timestamp,\r\n        nonce: options.nonce || Cryptiles.randomString(6),\r\n        host: host,\r\n        port: port,\r\n        hash: Crypto.calculatePayloadHash(message, credentials.algorithm)\r\n    };\r\n\r\n    // Construct authorization\r\n\r\n    var result = {\r\n        id: credentials.id,\r\n        ts: artifacts.ts,\r\n        nonce: artifacts.nonce,\r\n        hash: artifacts.hash,\r\n        mac: Crypto.calculateMac('message', credentials, artifacts)\r\n    };\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\n"]}