{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;;;;AAKJ,IAAI,YAAY,EAAZ;;;;AAKJ,QAAQ,YAAR,GAAuB,UAAU,IAAV,EAAgB;;AAEnC,QAAI,SAAS,QAAQ,UAAR,CAAmB,CAAC,OAAO,CAAP,CAAD,GAAa,CAAb,CAA5B,CAF+B;AAGnC,QAAI,kBAAkB,KAAlB,EAAyB;AACzB,eAAO,MAAP,CADyB;KAA7B;;AAIA,QAAI,SAAS,OAAO,QAAP,CAAgB,QAAhB,EAA0B,OAA1B,CAAkC,KAAlC,EAAyC,GAAzC,EAA8C,OAA9C,CAAsD,KAAtD,EAA6D,GAA7D,EAAkE,OAAlE,CAA0E,KAA1E,EAAiF,EAAjF,CAAT,CAP+B;AAQnC,WAAO,OAAO,KAAP,CAAa,CAAb,EAAgB,IAAhB,CAAP,CARmC;CAAhB;;AAYvB,QAAQ,UAAR,GAAqB,UAAU,IAAV,EAAgB;;AAEjC,QAAI,CAAC,IAAD,IACA,OAAO,CAAP,EAAU;;AAEV,eAAO,KAAK,QAAL,CAAc,2BAAd,CAAP,CAFU;KADd;;AAMA,QAAI,QAAQ,KAAK,IAAL,CAAU,OAAO,CAAP,CAAlB,CAR6B;AASjC,QAAI;AACA,eAAO,OAAO,WAAP,CAAmB,KAAnB,CAAP,CADA;KAAJ,CAGA,OAAO,GAAP,EAAY;AACR,eAAO,KAAK,QAAL,CAAc,oCAAoC,IAAI,OAAJ,CAAzD,CADQ;KAAZ;CAZiB;;;;AAoBrB,QAAQ,mBAAR,GAA8B,UAAU,CAAV,EAAa,CAAb,EAAgB;;AAE1C,QAAI,OAAO,CAAP,KAAa,QAAb,IACA,OAAO,CAAP,KAAa,QAAb,EAAuB;;AAEvB,eAAO,KAAP,CAFuB;KAD3B;;AAMA,QAAI,WAAY,EAAE,MAAF,KAAa,EAAE,MAAF,GAAW,CAAxB,GAA4B,CAA5B,CAR0B;AAS1C,QAAI,QAAJ,EAAc;AACV,YAAI,CAAJ,CADU;KAAd;;AAIA,SAAK,IAAI,IAAI,CAAJ,EAAO,KAAK,EAAE,MAAF,EAAU,IAAI,EAAJ,EAAQ,EAAE,CAAF,EAAK;AACxC,YAAI,KAAK,EAAE,UAAF,CAAa,CAAb,CAAL,CADoC;AAExC,YAAI,KAAK,EAAE,UAAF,CAAa,CAAb,CAAL,CAFoC;AAGxC,oBAAa,KAAK,EAAL,CAH2B;KAA5C;;AAMA,WAAQ,aAAa,CAAb,CAnBkC;CAAhB","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Crypto = require('crypto');\nvar Boom = require('boom');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Generate a cryptographically strong pseudo-random data\n\nexports.randomString = function (size) {\n\n    var buffer = exports.randomBits((size + 1) * 6);\n    if (buffer instanceof Error) {\n        return buffer;\n    }\n\n    var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n    return string.slice(0, size);\n};\n\n\nexports.randomBits = function (bits) {\n\n    if (!bits ||\n        bits < 0) {\n\n        return Boom.internal('Invalid random bits count');\n    }\n\n    var bytes = Math.ceil(bits / 8);\n    try {\n        return Crypto.randomBytes(bytes);\n    }\n    catch (err) {\n        return Boom.internal('Failed generating random bits: ' + err.message);\n    }\n};\n\n\n// Compare two strings using fixed time algorithm (to prevent time-based analysis of MAC digest match)\n\nexports.fixedTimeComparison = function (a, b) {\n\n    if (typeof a !== 'string' ||\n        typeof b !== 'string') {\n\n        return false;\n    }\n\n    var mismatch = (a.length === b.length ? 0 : 1);\n    if (mismatch) {\n        b = a;\n    }\n\n    for (var i = 0, il = a.length; i < il; ++i) {\n        var ac = a.charCodeAt(i);\n        var bc = b.charCodeAt(i);\n        mismatch |= (ac ^ bc);\n    }\n\n    return (mismatch === 0);\n};\n\n\n"]}