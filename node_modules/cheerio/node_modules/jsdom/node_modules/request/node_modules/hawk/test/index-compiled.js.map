{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Url = require('url');\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Hawk', function () {\r\n\r\n    var credentialsFunc = function (id, callback) {\r\n\r\n        var credentials = {\r\n            id: id,\r\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\r\n            algorithm: (id === '1' ? 'sha1' : 'sha256'),\r\n            user: 'steve'\r\n        };\r\n\r\n        return callback(null, credentials);\r\n    };\r\n\r\n    it('generates a header then successfully parse it (configuration)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials1, ext: 'some-app-data' }).field;\r\n            expect(req.authorization).to.exist();\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (node request)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (absolute request uri)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: 'http://example.com:8080/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (no server header options)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts);\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts)).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then fails to parse it (missing server header hash)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts);\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(false);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (with hash)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it then validate payload', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload('hola!', credentials2, artifacts)).to.be.true();\r\n                expect(Hawk.server.authenticatePayload('hello!', credentials2, artifacts)).to.be.false();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parses and validates payload', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'hola!' }, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (app)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', app: 'asd23ased' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(artifacts.app).to.equal('asd23ased');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (app, dlg)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(artifacts.app).to.equal('asd23ased');\r\n                expect(artifacts.dlg).to.equal('23434szr3q4d');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then fail authentication due to bad hash', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.exist();\r\n                expect(err.output.payload.message).to.equal('Bad payload hash');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header for one resource then fail to authenticate another', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data' }).field;\r\n            req.url = '/something/else';\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.exist();\r\n                expect(credentials2).to.exist();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n});\r\n"]}