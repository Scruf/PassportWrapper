{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["module.exports = ForeverAgent\nForeverAgent.SSL = ForeverAgentSSL\n\nvar util = require('util')\n  , Agent = require('http').Agent\n  , net = require('net')\n  , tls = require('tls')\n  , AgentSSL = require('https').Agent\n  \nfunction getConnectionName(host, port) {  \n  var name = ''\n  if (typeof host === 'string') {\n    name = host + ':' + port\n  } else {\n    // For node.js v012.0 and iojs-v1.5.1, host is an object. And any existing localAddress is part of the connection name.\n    name = host.host + ':' + host.port + ':' + (host.localAddress ? (host.localAddress + ':') : ':')\n  }\n  return name\n}    \n\nfunction ForeverAgent(options) {\n  var self = this\n  self.options = options || {}\n  self.requests = {}\n  self.sockets = {}\n  self.freeSockets = {}\n  self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets\n  self.minSockets = self.options.minSockets || ForeverAgent.defaultMinSockets\n  self.on('free', function(socket, host, port) {\n    var name = getConnectionName(host, port)\n\n    if (self.requests[name] && self.requests[name].length) {\n      self.requests[name].shift().onSocket(socket)\n    } else if (self.sockets[name].length < self.minSockets) {\n      if (!self.freeSockets[name]) self.freeSockets[name] = []\n      self.freeSockets[name].push(socket)\n      \n      // if an error happens while we don't use the socket anyway, meh, throw the socket away\n      var onIdleError = function() {\n        socket.destroy()\n      }\n      socket._onIdleError = onIdleError\n      socket.on('error', onIdleError)\n    } else {\n      // If there are no pending requests just destroy the\n      // socket and it will get removed from the pool. This\n      // gets us out of timeout issues and allows us to\n      // default to Connection:keep-alive.\n      socket.destroy()\n    }\n  })\n\n}\nutil.inherits(ForeverAgent, Agent)\n\nForeverAgent.defaultMinSockets = 5\n\n\nForeverAgent.prototype.createConnection = net.createConnection\nForeverAgent.prototype.addRequestNoreuse = Agent.prototype.addRequest\nForeverAgent.prototype.addRequest = function(req, host, port) {\n  var name = getConnectionName(host, port)\n  \n  if (typeof host !== 'string') {\n    var options = host\n    port = options.port\n    host = options.host\n  }\n\n  if (this.freeSockets[name] && this.freeSockets[name].length > 0 && !req.useChunkedEncodingByDefault) {\n    var idleSocket = this.freeSockets[name].pop()\n    idleSocket.removeListener('error', idleSocket._onIdleError)\n    delete idleSocket._onIdleError\n    req._reusedSocket = true\n    req.onSocket(idleSocket)\n  } else {\n    this.addRequestNoreuse(req, host, port)\n  }\n}\n\nForeverAgent.prototype.removeSocket = function(s, name, host, port) {\n  if (this.sockets[name]) {\n    var index = this.sockets[name].indexOf(s)\n    if (index !== -1) {\n      this.sockets[name].splice(index, 1)\n    }\n  } else if (this.sockets[name] && this.sockets[name].length === 0) {\n    // don't leak\n    delete this.sockets[name]\n    delete this.requests[name]\n  }\n  \n  if (this.freeSockets[name]) {\n    var index = this.freeSockets[name].indexOf(s)\n    if (index !== -1) {\n      this.freeSockets[name].splice(index, 1)\n      if (this.freeSockets[name].length === 0) {\n        delete this.freeSockets[name]\n      }\n    }\n  }\n\n  if (this.requests[name] && this.requests[name].length) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(name, host, port).emit('free')\n  }\n}\n\nfunction ForeverAgentSSL (options) {\n  ForeverAgent.call(this, options)\n}\nutil.inherits(ForeverAgentSSL, ForeverAgent)\n\nForeverAgentSSL.prototype.createConnection = createConnectionSSL\nForeverAgentSSL.prototype.addRequestNoreuse = AgentSSL.prototype.addRequest\n\nfunction createConnectionSSL (port, host, options) {\n  if (typeof port === 'object') {\n    options = port;\n  } else if (typeof host === 'object') {\n    options = host;\n  } else if (typeof options === 'object') {\n    options = options;\n  } else {\n    options = {};\n  }\n\n  if (typeof port === 'number') {\n    options.port = port;\n  }\n\n  if (typeof host === 'string') {\n    options.host = host;\n  }\n\n  return tls.connect(options);\n}\n"]}