{"version":3,"sources":["runner.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,UAAU,QAAQ,WAAR,CAAV;AACJ,IAAI,kBAAkB,QAAQ,SAAR,CAAlB;AACJ,IAAI,YAAY,QAAQ,kBAAR,CAAZ;;AAEJ,OAAO,OAAP,GAAiB,UAAU,MAAV,EAAkB,IAAlB,EAAwB,EAAxB,EAA4B;;AAE3C,MAAI,QAAQ,KAAR;;;AAFuC,MAKvC,WAAW,UAAU,MAAV,EAAkB;AAC/B,YAAQ,IAAR;AACA,aAAS,IAAT;AACA,aAAS,OAAT;GAHa,CAAX;;;AALuC,MAYvC,SAAS,SAAT,EAAoB;AACtB,YAAQ,SAAS,IAAT,CAAR,CADsB;GAAxB;;;AAZ2C,MAiBvC,OAAO,EAAP,KAAc,UAAd,EAA0B;AAC5B,WAAO,GAAG,SAAS,MAAT,GAAkB,IAAI,eAAJ,CAAoB,SAAS,MAAT,CAAtC,GAAyD,IAAzD,EAA+D,KAAlE,CAAP,CAD4B;GAA9B;;AAIA,SAAO,KAAP,CArB2C;CAA5B","file":"runner-compiled.js","sourcesContent":["'use strict'\n\nvar schemas = require('./schemas')\nvar ValidationError = require('./error')\nvar validator = require('is-my-json-valid')\n\nmodule.exports = function (schema, data, cb) {\n  // default value\n  var valid = false\n\n  // validator config\n  var validate = validator(schema, {\n    greedy: true,\n    verbose: true,\n    schemas: schemas\n  })\n\n  // execute is-my-json-valid\n  if (data !== undefined) {\n    valid = validate(data)\n  }\n\n  // callback?\n  if (typeof cb === 'function') {\n    return cb(validate.errors ? new ValidationError(validate.errors) : null, valid)\n  }\n\n  return valid\n}\n"]}