{"version":3,"sources":["har-validator"],"names":[],"mappings":";;AAEA;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAR;AACJ,IAAI,MAAM,QAAQ,WAAR,CAAN;AACJ,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,MAAM,QAAQ,iBAAR,CAAN;AACJ,IAAI,UAAU,QAAQ,gBAAR,CAAV;AACJ,IAAI,WAAW,QAAQ,IAAR,CAAX;AACJ,IAAI,kBAAkB,QAAQ,cAAR,CAAlB;;AAEJ,IACG,OADH,CACW,IAAI,OAAJ,CADX,CAEG,KAFH,CAES,uBAFT,EAGG,MAHH,CAGU,qBAHV,EAGiC,wDAHjC,EAIG,KAJH,CAIS,QAAQ,IAAR,CAJT;;AAMA,IAAI,CAAC,IAAI,IAAJ,CAAS,MAAT,EAAiB;AACpB,MAAI,IAAJ,GADoB;CAAtB;;AAIA,IAAI,IAAJ,CAAS,GAAT,CAAa,UAAU,QAAV,EAAoB;AAC/B,MAAI,OAAO,MAAM,MAAN,CAAa,MAAb,CAAoB,KAAK,QAAL,CAAc,QAAd,CAApB,CAAP,CAD2B;;AAG/B,MAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AACrC,OAAG,QAAH,CAAY,QAAZ,EAAsB,UAAU,GAAV,EAAe,IAAf,EAAqB;AACzC,aAAO,QAAQ,IAAR,GAAe,QAAQ,IAAR,CAAf,GAA+B,OAAO,GAAP,CAA/B,CADkC;KAArB,CAAtB,CADqC;GAA3B,CAAZ,CAMG,IANH,CAMQ,KAAK,KAAL,CANR,CAQG,IARH,CAQQ,IAAI,MAAJ,GAAa,SAAS,IAAI,MAAJ,CAAtB,GAAoC,QAApC,CARR,CAUG,IAVH,CAUQ,UAAU,IAAV,EAAgB;AACpB,YAAQ,GAAR,CAAY,kBAAZ,EAAgC,MAAM,KAAN,CAAY,GAAZ,CAAhC,EAAkD,IAAlD,EADoB;GAAhB,CAVR,CAcG,KAdH,CAcS,UAAU,GAAV,EAAe;AACpB,QAAI,eAAe,WAAf,EAA4B;AAC9B,aAAO,QAAQ,KAAR,CAAc,iCAAd,EAAiD,MAAM,GAAN,CAAU,GAAV,CAAjD,EAAiE,IAAjE,EAAuE,MAAM,GAAN,CAAU,IAAI,OAAJ,CAAjF,CAAP,CAD8B;KAAhC;;AAIA,QAAI,eAAe,eAAf,EAAgC;AAClC,UAAI,MAAJ,CAAW,OAAX,CAAmB,UAAU,OAAV,EAAmB;AACpC,gBAAQ,KAAR,CAAc,wCAAd,EAAwD,MAAM,GAAN,CAAU,GAAV,CAAxD,EAAwE,IAAxE,EAA8E,MAAM,IAAN,CAAW,MAAX,CAAkB,QAAQ,KAAR,CAAhG,EAAgH,MAAM,OAAN,CAAc,MAAd,CAAqB,QAAQ,KAAR,CAArI,EAAqJ,MAAM,GAAN,CAAU,QAAQ,OAAR,CAA/J,EADoC;OAAnB,CAAnB,CADkC;;AAKlC,aALkC;KAApC;;AAQA,YAAQ,KAAR,CAAc,0CAAd,EAA0D,MAAM,GAAN,CAAU,GAAV,CAA1D,EAA0E,IAA1E,EAAgF,MAAM,GAAN,CAAU,IAAI,OAAJ,CAA1F,EAboB;GAAf,CAdT,CAH+B;CAApB,CAAb","file":"har-validator-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n'use strict'\n\nvar chalk = require('chalk')\nvar cmd = require('commander')\nvar fs = require('fs')\nvar path = require('path')\nvar pkg = require('../package.json')\nvar Promise = require('pinkie-promise')\nvar validate = require('..')\nvar ValidationError = require('../lib/error')\n\ncmd\n  .version(pkg.version)\n  .usage('[options] <files ...>')\n  .option('-s, --schema [name]', 'validate schema name (log, request, response, etc ...)')\n  .parse(process.argv)\n\nif (!cmd.args.length) {\n  cmd.help()\n}\n\ncmd.args.map(function (fileName) {\n  var file = chalk.yellow.italic(path.basename(fileName))\n\n  new Promise(function (resolve, reject) {\n    fs.readFile(fileName, function (err, data) {\n      return err === null ? resolve(data) : reject(err)\n    })\n  })\n\n    .then(JSON.parse)\n\n    .then(cmd.schema ? validate[cmd.schema] : validate)\n\n    .then(function (data) {\n      console.log('%s [%s] is valid', chalk.green('✓'), file)\n    })\n\n    .catch(function (err) {\n      if (err instanceof SyntaxError) {\n        return console.error('%s [%s] failed to read JSON: %s', chalk.red('✖'), file, chalk.red(err.message))\n      }\n\n      if (err instanceof ValidationError) {\n        err.errors.forEach(function (details) {\n          console.error('%s [%s] failed validation: (%s: %s) %s', chalk.red('✖'), file, chalk.cyan.italic(details.field), chalk.magenta.italic(details.value), chalk.red(details.message))\n        })\n\n        return\n      }\n\n      console.error('%s [%s] an unknown error has occured: %s', chalk.red('✖'), file, chalk.red(err.message))\n    })\n})\n"]}