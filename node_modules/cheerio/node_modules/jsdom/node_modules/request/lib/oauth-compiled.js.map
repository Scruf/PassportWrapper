{"version":3,"sources":["oauth.js"],"names":[],"mappings":"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","file":"oauth-compiled.js","sourcesContent":["'use strict'\n\nvar url = require('url')\n  , qs = require('qs')\n  , caseless = require('caseless')\n  , uuid = require('node-uuid')\n  , oauth = require('oauth-sign')\n  , crypto = require('crypto')\n\n\nfunction OAuth (request) {\n  this.request = request\n  this.params = null\n}\n\nOAuth.prototype.buildParams = function (_oauth, uri, method, query, form, qsLib) {\n  var oa = {}\n  for (var i in _oauth) {\n    oa['oauth_' + i] = _oauth[i]\n  }\n  if (!oa.oauth_version) {\n    oa.oauth_version = '1.0'\n  }\n  if (!oa.oauth_timestamp) {\n    oa.oauth_timestamp = Math.floor( Date.now() / 1000 ).toString()\n  }\n  if (!oa.oauth_nonce) {\n    oa.oauth_nonce = uuid().replace(/-/g, '')\n  }\n  if (!oa.oauth_signature_method) {\n    oa.oauth_signature_method = 'HMAC-SHA1'\n  }\n\n  var consumer_secret_or_private_key = oa.oauth_consumer_secret || oa.oauth_private_key\n  delete oa.oauth_consumer_secret\n  delete oa.oauth_private_key\n\n  var token_secret = oa.oauth_token_secret\n  delete oa.oauth_token_secret\n\n  var realm = oa.oauth_realm\n  delete oa.oauth_realm\n  delete oa.oauth_transport_method\n\n  var baseurl = uri.protocol + '//' + uri.host + uri.pathname\n  var params = qsLib.parse([].concat(query, form, qsLib.stringify(oa)).join('&'))\n\n  oa.oauth_signature = oauth.sign(\n    oa.oauth_signature_method,\n    method,\n    baseurl,\n    params,\n    consumer_secret_or_private_key,\n    token_secret)\n\n  if (realm) {\n    oa.realm = realm\n  }\n\n  return oa\n}\n\nOAuth.prototype.buildBodyHash = function(_oauth, body) {\n  if (['HMAC-SHA1', 'RSA-SHA1'].indexOf(_oauth.signature_method || 'HMAC-SHA1') < 0) {\n    this.request.emit('error', new Error('oauth: ' + _oauth.signature_method +\n      ' signature_method not supported with body_hash signing.'))\n  }\n\n  var shasum = crypto.createHash('sha1')\n  shasum.update(body || '')\n  var sha1 = shasum.digest('hex')\n\n  return new Buffer(sha1).toString('base64')\n}\n\nOAuth.prototype.concatParams = function (oa, sep, wrap) {\n  wrap = wrap || ''\n\n  var params = Object.keys(oa).filter(function (i) {\n    return i !== 'realm' && i !== 'oauth_signature'\n  }).sort()\n\n  if (oa.realm) {\n    params.splice(0, 0, 'realm')\n  }\n  params.push('oauth_signature')\n\n  return params.map(function (i) {\n    return i + '=' + wrap + oauth.rfc3986(oa[i]) + wrap\n  }).join(sep)\n}\n\nOAuth.prototype.onRequest = function (_oauth) {\n  var self = this\n  self.params = _oauth\n\n  var uri = self.request.uri || {}\n    , method = self.request.method || ''\n    , headers = caseless(self.request.headers)\n    , body = self.request.body || ''\n    , qsLib = self.request.qsLib || qs\n\n  var form\n    , query\n    , contentType = headers.get('content-type') || ''\n    , formContentType = 'application/x-www-form-urlencoded'\n    , transport = _oauth.transport_method || 'header'\n\n  if (contentType.slice(0, formContentType.length) === formContentType) {\n    contentType = formContentType\n    form = body\n  }\n  if (uri.query) {\n    query = uri.query\n  }\n  if (transport === 'body' && (method !== 'POST' || contentType !== formContentType)) {\n    self.request.emit('error', new Error('oauth: transport_method of body requires POST ' +\n      'and content-type ' + formContentType))\n  }\n\n  if (!form && typeof _oauth.body_hash === 'boolean') {\n    _oauth.body_hash = self.buildBodyHash(_oauth, self.request.body.toString())\n  }\n\n  var oa = self.buildParams(_oauth, uri, method, query, form, qsLib)\n\n  switch (transport) {\n    case 'header':\n      self.request.setHeader('Authorization', 'OAuth ' + self.concatParams(oa, ',', '\"'))\n      break\n\n    case 'query':\n      var href = self.request.uri.href += (query ? '&' : '?') + self.concatParams(oa, '&')\n      self.request.uri = url.parse(href)\n      self.request.path = self.request.uri.path\n      break\n\n    case 'body':\n      self.request.body = (form ? form + '&' : '') + self.concatParams(oa, '&')\n      break\n\n    default:\n      self.request.emit('error', new Error('oauth: transport_method invalid'))\n  }\n}\n\nexports.OAuth = OAuth\n"]}