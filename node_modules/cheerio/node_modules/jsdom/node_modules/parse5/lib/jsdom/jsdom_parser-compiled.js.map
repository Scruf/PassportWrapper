{"version":3,"sources":["jsdom_parser.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,6BAAR,CAAT;IACA,cAAc,QAAQ,gBAAR,CAAd;;;AAGJ,QAAQ,aAAR,GAAwB,UAAU,IAAV,EAAgB,WAAhB,EAA6B;;AAEjD,QAAI,SAAS,IAAI,MAAJ,CAAW,WAAX,CAAT;QACA,cAAc,IAAI,WAAJ,CAAgB,MAAhB,CAAd;;;AAH6C,UAMjD,CAAO,eAAP,GAAyB,YAAY;AACjC,oBAAY,eAAZ,GAA8B,IAA9B,CADiC;;AAGjC,eAAO,CAAC,YAAY,SAAZ,IAAyB,CAAC,KAAK,OAAL,EAC9B,KAAK,mBAAL,GADJ;;AAGA,oBAAY,eAAZ,GAA8B,KAA9B,CANiC;;AAQjC,YAAI,KAAK,OAAL,EACA,YAAY,QAAZ,CAAqB,KAAK,QAAL,CAArB,CADJ;KARqB;;;;AANwB,WAoBjD,CAAQ,QAAR,CAAiB,YAAY;AACzB,eAAO,KAAP,CAAa,IAAb,EADyB;KAAZ,CAAjB,CApBiD;;AAwBjD,WAAO,WAAP,CAxBiD;CAA7B;;AA2BxB,QAAQ,cAAR,GAAyB,UAAU,SAAV,EAAqB,cAArB,EAAqC,WAArC,EAAkD;;AAEvE,QAAI,SAAS,IAAI,MAAJ,CAAW,WAAX,CAAT,CAFmE;;AAIvE,WAAO,OAAO,aAAP,CAAqB,SAArB,EAAgC,cAAhC,CAAP,CAJuE;CAAlD","file":"jsdom_parser-compiled.js","sourcesContent":["'use strict';\r\n\r\nvar Parser = require('../tree_construction/parser'),\r\n    ParsingUnit = require('./parsing_unit');\r\n\r\n//API\r\nexports.parseDocument = function (html, treeAdapter) {\r\n    //NOTE: this should be reentrant, so we create new parser here\r\n    var parser = new Parser(treeAdapter),\r\n        parsingUnit = new ParsingUnit(parser);\r\n\r\n    //NOTE: override parser loop method\r\n    parser._runParsingLoop = function () {\r\n        parsingUnit.parsingLoopLock = true;\r\n\r\n        while (!parsingUnit.suspended && !this.stopped)\r\n            this._iterateParsingLoop();\r\n\r\n        parsingUnit.parsingLoopLock = false;\r\n\r\n        if (this.stopped)\r\n            parsingUnit.callback(this.document);\r\n    };\r\n\r\n    //NOTE: wait while parserController will be adopted by calling code, then\r\n    //start parsing\r\n    process.nextTick(function () {\r\n        parser.parse(html);\r\n    });\r\n\r\n    return parsingUnit;\r\n};\r\n\r\nexports.parseInnerHtml = function (innerHtml, contextElement, treeAdapter) {\r\n    //NOTE: this should be reentrant, so we create new parser here\r\n    var parser = new Parser(treeAdapter);\r\n\r\n    return parser.parseFragment(innerHtml, contextElement);\r\n};"]}