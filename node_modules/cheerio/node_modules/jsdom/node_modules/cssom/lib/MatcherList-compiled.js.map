{"version":3,"sources":["MatcherList.js"],"names":[],"mappings":";AACA,IAAI,QAAQ,EAAR;;;;;;;AAQJ,MAAM,WAAN,GAAoB,SAAS,WAAT,GAAsB;AACtC,SAAK,MAAL,GAAc,CAAd,CADsC;CAAtB;;AAIpB,MAAM,WAAN,CAAkB,SAAlB,GAA8B;;AAE1B,iBAAa,MAAM,WAAN;;;;;AAKb,QAAI,WAAJ,GAAkB;AACd,eAAO,MAAM,SAAN,CAAgB,IAAhB,CAAqB,IAArB,CAA0B,IAA1B,EAAgC,IAAhC,CAAP,CADc;KAAlB;;;;;AAOA,QAAI,WAAJ,CAAgB,KAAhB,EAAuB;;AAEnB,YAAI,SAAS,MAAM,KAAN,CAAY,GAAZ,CAAT,CAFe;AAGnB,YAAI,SAAS,KAAK,MAAL,GAAc,OAAO,MAAP,CAHR;AAInB,aAAK,IAAI,IAAE,CAAF,EAAK,IAAE,MAAF,EAAU,GAAxB,EAA6B;AACzB,iBAAK,CAAL,IAAU,OAAO,CAAP,EAAU,IAAV,EAAV,CADyB;SAA7B;KAJJ;;;;;AAYA,mBAAe,UAAS,OAAT,EAAkB;AAC7B,YAAI,MAAM,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,IAA7B,EAAmC,OAAnC,MAAgD,CAAC,CAAD,EAAI;AACpD,iBAAK,KAAK,MAAL,CAAL,GAAoB,OAApB,CADoD;AAEpD,iBAAK,MAAL,GAFoD;SAAxD;KADW;;;;;AAUf,mBAAe,UAAS,OAAT,EAAkB;AAC7B,YAAI,QAAQ,MAAM,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,IAA7B,EAAmC,OAAnC,CAAR,CADyB;AAE7B,YAAI,UAAU,CAAC,CAAD,EAAI;AACd,kBAAM,SAAN,CAAgB,MAAhB,CAAuB,IAAvB,CAA4B,IAA5B,EAAkC,KAAlC,EAAyC,CAAzC,EADc;SAAlB;KAFW;;CApCnB;;;AA+CA,QAAQ,WAAR,GAAsB,MAAM,WAAN","file":"MatcherList-compiled.js","sourcesContent":["//.CommonJS\nvar CSSOM = {};\n///CommonJS\n\n\n/**\n * @constructor\n * @see https://developer.mozilla.org/en/CSS/@-moz-document\n */\nCSSOM.MatcherList = function MatcherList(){\n    this.length = 0;\n};\n\nCSSOM.MatcherList.prototype = {\n\n    constructor: CSSOM.MatcherList,\n\n    /**\n     * @return {string}\n     */\n    get matcherText() {\n        return Array.prototype.join.call(this, \", \");\n    },\n\n    /**\n     * @param {string} value\n     */\n    set matcherText(value) {\n        // just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','.\n        var values = value.split(\",\");\n        var length = this.length = values.length;\n        for (var i=0; i<length; i++) {\n            this[i] = values[i].trim();\n        }\n    },\n\n    /**\n     * @param {string} matcher\n     */\n    appendMatcher: function(matcher) {\n        if (Array.prototype.indexOf.call(this, matcher) === -1) {\n            this[this.length] = matcher;\n            this.length++;\n        }\n    },\n\n    /**\n     * @param {string} matcher\n     */\n    deleteMatcher: function(matcher) {\n        var index = Array.prototype.indexOf.call(this, matcher);\n        if (index !== -1) {\n            Array.prototype.splice.call(this, index, 1);\n        }\n    }\n\n};\n\n\n//.CommonJS\nexports.MatcherList = CSSOM.MatcherList;\n///CommonJS\n"]}