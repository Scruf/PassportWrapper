{"version":3,"sources":["extend-node.js"],"names":[],"mappings":"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","file":"extend-node-compiled.js","sourcesContent":["\"use strict\"\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n"]}