{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["'use strict';\n\nvar Utils = require('./utils');\n\nvar internals = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000,\n    strictNullHandling: false,\n    plainObjects: false,\n    allowPrototypes: false,\n    allowDots: false\n};\n\ninternals.parseValues = function (str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        if (pos === -1) {\n            obj[Utils.decode(part)] = '';\n\n            if (options.strictNullHandling) {\n                obj[Utils.decode(part)] = null;\n            }\n        } else {\n            var key = Utils.decode(part.slice(0, pos));\n            var val = Utils.decode(part.slice(pos + 1));\n\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                obj[key] = [].concat(obj[key]).concat(val);\n            } else {\n                obj[key] = val;\n            }\n        }\n    }\n\n    return obj;\n};\n\ninternals.parseObject = function (chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(internals.parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = internals.parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = internals.parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\ninternals.parseKeys = function (givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1])) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n            if (!options.allowPrototypes) {\n                continue;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return internals.parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : internals.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;\n\n    if (\n        str === '' ||\n        str === null ||\n        typeof str === 'undefined'\n    ) {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = internals.parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj, options);\n    }\n\n    return Utils.compact(obj);\n};\n"]}