{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAMA;;;;;;;AAOA,OAAO,OAAP,GAAiB,WAAjB;;;;;;;;;;;AAWA,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC;AAC9B,MAAI,QAAQ,IAAR,CAD0B;AAE9B,MAAI,IAAI,IAAI,OAAJ,CAAY,GAAZ,CAAJ,CAF0B;;AAI9B,MAAI,CAAC,CAAD,IAAM,CAAN,EAAS,OAAO,CAAC,CAAD,CAApB;;AAEA,MAAI,MAAM,IAAI,KAAJ,CAAU,IAAI,CAAJ,CAAV,CAAiB,KAAjB,CAAuB,GAAvB,EAA4B,GAA5B,CAAgC,UAAS,KAAT,EAAe;AACvD,QAAI,QAAQ,MAAM,KAAN,CAAY,GAAZ,CAAR;QACA,QAAQ,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAR;QACA,MAAM,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAN;;;AAHmD,QAMnD,MAAM,KAAN,CAAJ,EAAkB;AAChB,cAAQ,OAAO,GAAP,CADQ;AAEhB,YAAM,OAAO,CAAP;;AAFU,KAAlB,MAIO,IAAI,MAAM,GAAN,CAAJ,EAAgB;AACrB,cAAM,OAAO,CAAP,CADe;OAAhB;;;AAVgD,QAenD,MAAM,OAAO,CAAP,EAAU,MAAM,OAAO,CAAP,CAA1B;;;AAfuD,QAkBnD,MAAM,KAAN,KACC,MAAM,GAAN,CADD,IAEC,QAAQ,GAAR,IACA,QAAQ,CAAR,EAAW,QAAQ,KAAR,CAHhB;;AAKA,WAAO;AACL,aAAO,KAAP;AACA,WAAK,GAAL;KAFF,CAvBuD;GAAf,CAAtC,CAN0B;;AAmC9B,MAAI,IAAJ,GAAW,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAX,CAnC8B;;AAqC9B,SAAO,QAAQ,GAAR,GAAc,CAAC,CAAD,CArCS;CAAhC","file":"index-compiled.js","sourcesContent":["/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser;\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @return {Array}\n * @public\n */\n\nfunction rangeParser(size, str) {\n  var valid = true;\n  var i = str.indexOf('=');\n\n  if (-1 == i) return -2;\n\n  var arr = str.slice(i + 1).split(',').map(function(range){\n    var range = range.split('-')\n      , start = parseInt(range[0], 10)\n      , end = parseInt(range[1], 10);\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1;\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) end = size - 1;\n\n    // invalid\n    if (isNaN(start)\n      || isNaN(end)\n      || start > end\n      || start < 0) valid = false;\n\n    return {\n      start: start,\n      end: end\n    };\n  });\n\n  arr.type = str.slice(0, i);\n\n  return valid ? arr : -1;\n}\n"]}