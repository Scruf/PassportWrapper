{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAQA;;;;;;;AAOA,IAAI,kBAAkB,SAAlB;;;;;;;AAOJ,OAAO,OAAP,GAAiB,UAAjB;;;;;;;;;;AAUA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,MAAI,MAAM,KAAK,MAAL,CADgB;AAE1B,MAAI,QAAQ,gBAAgB,IAAhB,CAAqB,GAArB,CAAR,CAFsB;;AAI1B,MAAI,CAAC,KAAD,EAAQ;AACV,WAAO,GAAP,CADU;GAAZ;;AAIA,MAAI,MAAJ,CAR0B;AAS1B,MAAI,OAAO,EAAP,CATsB;AAU1B,MAAI,QAAQ,CAAR,CAVsB;AAW1B,MAAI,YAAY,CAAZ,CAXsB;;AAa1B,OAAK,QAAQ,MAAM,KAAN,EAAa,QAAQ,IAAI,MAAJ,EAAY,OAA9C,EAAuD;AACrD,YAAQ,IAAI,UAAJ,CAAe,KAAf,CAAR;AACE,WAAK,EAAL;;AACE,iBAAS,QAAT,CADF;AAEE,cAFF;AADF,WAIO,EAAL;;AACE,iBAAS,OAAT,CADF;AAEE,cAFF;AAJF,WAOO,EAAL;;AACE,iBAAS,OAAT,CADF;AAEE,cAFF;AAPF,WAUO,EAAL;;AACE,iBAAS,MAAT,CADF;AAEE,cAFF;AAVF,WAaO,EAAL;;AACE,iBAAS,MAAT,CADF;AAEE,cAFF;AAbF;AAiBI,iBADF;AAhBF,KADqD;;AAqBrD,QAAI,cAAc,KAAd,EAAqB;AACvB,cAAQ,IAAI,SAAJ,CAAc,SAAd,EAAyB,KAAzB,CAAR,CADuB;KAAzB;;AAIA,gBAAY,QAAQ,CAAR,CAzByC;AA0BrD,YAAQ,MAAR,CA1BqD;GAAvD;;AA6BA,SAAO,cAAc,KAAd,GACH,OAAO,IAAI,SAAJ,CAAc,SAAd,EAAyB,KAAzB,CAAP,GACA,IAFG,CA1CmB;CAA5B","file":"index-compiled.js","sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n"]}