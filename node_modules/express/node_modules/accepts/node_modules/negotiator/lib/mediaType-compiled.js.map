{"version":3,"sources":["mediaType.js"],"names":[],"mappings":"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","file":"mediaType-compiled.js","sourcesContent":["/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nmodule.exports = preferredMediaTypes;\npreferredMediaTypes.preferredMediaTypes = preferredMediaTypes;\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n};\n\nfunction parseMediaType(s, i) {\n  var match = s.match(/\\s*(\\S+?)\\/([^;\\s]+)\\s*(?:;(.*))?/);\n  if (!match) return null;\n\n  var type = match[1],\n      subtype = match[2],\n      full = \"\" + type + \"/\" + subtype,\n      params = {},\n      q = 1;\n\n  if (match[3]) {\n    params = match[3].split(';').map(function(s) {\n      return s.trim().split('=');\n    }).reduce(function (set, p) {\n      var name = p[0].toLowerCase();\n      var value = p[1];\n\n      set[name] = value && value[0] === '\"' && value[value.length - 1] === '\"'\n        ? value.substr(1, value.length - 2)\n        : value;\n\n      return set;\n    }, params);\n\n    if (params.q != null) {\n      q = parseFloat(params.q);\n      delete params.q;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n\n}\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts.filter(isQuality).sort(compareSpecs).map(function getType(spec) {\n      return spec.full;\n    });\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n"]}