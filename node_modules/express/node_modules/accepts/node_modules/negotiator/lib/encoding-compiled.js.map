{"version":3,"sources":["encoding.js"],"names":[],"mappings":"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","file":"encoding-compiled.js","sourcesContent":["module.exports = preferredEncodings;\npreferredEncodings.preferredEncodings = preferredEncodings;\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\nfunction parseEncoding(s, i) {\n  var match = s.match(/^\\s*(\\S+?)\\s*(?:;(.*))?$/);\n\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts.filter(isQuality).sort(compareSpecs).map(function getEncoding(spec) {\n      return spec.encoding;\n    });\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]}