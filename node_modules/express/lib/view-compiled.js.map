{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"view-compiled.js","sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\nvar utils = require('./utils');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    opts.engines[this.ext] = require(this.ext.substr(1)).__express;\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n"]}