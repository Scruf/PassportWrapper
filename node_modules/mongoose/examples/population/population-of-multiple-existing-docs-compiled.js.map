{"version":3,"sources":["population-of-multiple-existing-docs.js"],"names":[],"mappings":";AACA,IAAI,WAAW,QAAQ,WAAR,CAAX;AACJ,IAAI,SAAS,SAAS,MAAT;;AAEb,QAAQ,GAAR,CAAY,6BAAZ,EAA2C,SAAS,OAAT,CAA3C;;;;;;AAMA,IAAI,gBAAgB,OAAO;AACzB,QAAM,MAAN;AACA,gBAAc,MAAd;AACA,YAAU,IAAV;CAHkB,CAAhB;AAKJ,IAAI,UAAU,SAAS,KAAT,CAAe,SAAf,EAA0B,aAA1B,CAAV;;;;;;AAMJ,IAAI,aAAa,OAAO;AACtB,QAAM,MAAN;AACA,aAAW,MAAX;AACA,YAAU,IAAV;AACA,YAAU,CAAC;AACT,UAAM,OAAO,KAAP,CAAa,QAAb;AACN,SAAK,SAAL;GAFQ,CAAV;CAJe,CAAb;AASJ,IAAI,OAAO,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,CAAP;;;;;;;AAOJ,SAAS,OAAT,CAAiB,6BAAjB,EAAgD,UAAS,GAAT,EAAc;;AAE5D,MAAI,GAAJ,EAAS,MAAM,GAAN,CAAT;;;AAF4D,YAK5D,GAL4D;CAAd,CAAhD;;;;;;AAYA,SAAS,UAAT,GAAsB;AACpB,UAAQ,MAAR,CACE;AACE,UAAM,aAAN;AACA,kBAAc,UAAd;AACA,cAAU,oBAAV;GAJJ,EAME;AACE,UAAM,gBAAN;AACA,kBAAc,UAAd;AACA,cAAU,iBAAV;GATJ,EAWE,UAAS,GAAT,EAAc,UAAd,EAA0B,aAA1B,EAAyC;AACvC,QAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP,CAAT;;AAEA,SAAK,MAAL,CACE;AACE,YAAM,kCAAN;AACA,iBAAW,UAAX;AACA,gBAAU,IAAI,IAAJ,CAAS,mBAAT,CAAV;AACA,gBAAU,CAAC,UAAD,CAAV;KALJ,EAOE;AACE,YAAM,YAAN;AACA,iBAAW,UAAX;AACA,gBAAU,mBAAV;AACA,gBAAU,CAAC,aAAD,CAAV;KAXJ,EAaE,UAAS,GAAT,EAAc;AACZ,UAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP,CAAT;AACA,gBAFY;KAAd,CAbF,CAHuC;GAAzC,CAXF,CADoB;CAAtB;;;;;;AAyCA,SAAS,OAAT,GAAmB;AACjB,OACC,IADD,CACM,EADN,EAEC,IAFD,CAEM,UAAS,GAAT,EAAc,KAAd,EAAqB;AACzB,QAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP,CAAT;;AAEA,YAAQ,GAAR,CAAY,gBAAZ,EAA8B,MAAM,MAAN,CAA9B,CAHyB;;AAKzB,QAAI,UAAU,EAAC,MAAM,UAAN,EAAkB,QAAQ,oBAAR,EAA7B,CALqB;AAMzB,SAAK,QAAL,CAAc,KAAd,EAAqB,OAArB,EAA8B,UAAS,GAAT,EAAc,KAAd,EAAqB;AACjD,UAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP,CAAT;;AAEA,YAAM,OAAN,CAAc,UAAS,IAAT,EAAe;AAC3B,gBAAQ,GAAR,CACE,oCADF,EAEE,KAAK,IAAL,EACA,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,EACA,KAAK,QAAL,CAAc,kBAAd,EAJF,EAD2B;OAAf,CAAd,CAHiD;;AAYjD,aAZiD;KAArB,CAA9B,CANyB;GAArB,CAFN,CADiB;CAAnB;;AA0BA,SAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,MAAI,GAAJ,EAAS,QAAQ,KAAR,CAAc,GAAd,EAAT;AACA,UAAQ,MAAR,CAAe,YAAW;AACxB,SAAK,MAAL,CAAY,YAAW;AACrB,eAAS,UAAT,GADqB;KAAX,CAAZ,CADwB;GAAX,CAAf,CAFiB;CAAnB","file":"population-of-multiple-existing-docs-compiled.js","sourcesContent":["\nvar mongoose = require('../../lib');\nvar Schema = mongoose.Schema;\n\nconsole.log('Running mongoose version %s', mongoose.version);\n\n/**\n * Console schema\n */\n\nvar consoleSchema = Schema({\n  name: String,\n  manufacturer: String,\n  released: Date\n});\nvar Console = mongoose.model('Console', consoleSchema);\n\n/**\n * Game schema\n */\n\nvar gameSchema = Schema({\n  name: String,\n  developer: String,\n  released: Date,\n  consoles: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Console'\n  }]\n});\nvar Game = mongoose.model('Game', gameSchema);\n\n/**\n * Connect to the console database on localhost with\n * the default port (27017)\n */\n\nmongoose.connect('mongodb://localhost/console', function(err) {\n  // if we failed to connect, abort\n  if (err) throw err;\n\n  // we connected ok\n  createData();\n});\n\n/**\n * Data generation\n */\n\nfunction createData() {\n  Console.create(\n    {\n      name: 'Nintendo 64',\n      manufacturer: 'Nintendo',\n      released: 'September 29, 1996'\n    },\n    {\n      name: 'Super Nintendo',\n      manufacturer: 'Nintendo',\n      released: 'August 23, 1991'\n    },\n    function(err, nintendo64, superNintendo) {\n      if (err) return done(err);\n\n      Game.create(\n        {\n          name: 'Legend of Zelda: Ocarina of Time',\n          developer: 'Nintendo',\n          released: new Date('November 21, 1998'),\n          consoles: [nintendo64]\n        },\n        {\n          name: 'Mario Kart',\n          developer: 'Nintendo',\n          released: 'September 1, 1992',\n          consoles: [superNintendo]\n        },\n        function(err) {\n          if (err) return done(err);\n          example();\n        }\n      );\n    }\n  );\n}\n\n/**\n * Population\n */\n\nfunction example() {\n  Game\n  .find({})\n  .exec(function(err, games) {\n    if (err) return done(err);\n\n    console.log('found %d games', games.length);\n\n    var options = {path: 'consoles', select: 'name released -_id'};\n    Game.populate(games, options, function(err, games) {\n      if (err) return done(err);\n\n      games.forEach(function(game) {\n        console.log(\n          '\"%s\" was released for the %s on %s',\n          game.name,\n          game.consoles[0].name,\n          game.released.toLocaleDateString()\n        );\n      });\n\n      done();\n    });\n  });\n}\n\nfunction done(err) {\n  if (err) console.error(err);\n  Console.remove(function() {\n    Game.remove(function() {\n      mongoose.disconnect();\n    });\n  });\n}\n"]}