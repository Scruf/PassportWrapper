{"version":3,"sources":["person.js"],"names":[],"mappings":";AACA,IAAI,WAAW,QAAQ,WAAR,CAAX;AACJ,IAAI,SAAS,SAAS,MAAT;;;AAGb,OAAO,OAAP,GAAiB,YAAW;;AAE1B,MAAI,eAAe,IAAI,MAAJ,CAAW;AAC5B,UAAM,MAAN;AACA,SAAK,MAAL;AACA,cAAU,IAAV;GAHiB,CAAf;;;AAFsB,cAS1B,CAAa,OAAb,CAAqB,gBAArB,GAAwC,UAAS,IAAT,EAAe,EAAf,EAAmB;AACzD,SAAK,IAAL,CAAU,EAAC,MAAM,IAAI,MAAJ,CAAW,IAAX,EAAiB,GAAjB,CAAN,EAAX,EAAyC,EAAzC,EADyD;GAAnB,CATd;;AAa1B,WAAS,KAAT,CAAe,QAAf,EAAyB,YAAzB,EAb0B;CAAX","file":"person-compiled.js","sourcesContent":["// import the necessary modules\nvar mongoose = require('../../lib');\nvar Schema = mongoose.Schema;\n\n// create an export function to encapsulate the model creation\nmodule.exports = function() {\n  // define schema\n  var PersonSchema = new Schema({\n    name: String,\n    age: Number,\n    birthday: Date\n  });\n\n  // define a static\n  PersonSchema.statics.findPersonByName = function(name, cb) {\n    this.find({name: new RegExp(name, 'i')}, cb);\n  };\n\n  mongoose.model('Person', PersonSchema);\n};\n"]}