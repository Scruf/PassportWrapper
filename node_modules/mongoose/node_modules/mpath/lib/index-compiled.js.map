{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Returns the value of object `o` at the given `path`.\n *\n * ####Example:\n *\n *     var obj = {\n *         comments: [\n *             { title: 'exciting!', _doc: { title: 'great!' }}\n *           , { title: 'number dos' }\n *         ]\n *     }\n *\n *     mpath.get('comments.0.title', o)         // 'exciting!'\n *     mpath.get('comments.0.title', o, '_doc') // 'great!'\n *     mpath.get('comments.title', o)           // ['exciting!', 'number dos']\n *\n *     // summary\n *     mpath.get(path, o)\n *     mpath.get(path, o, special)\n *     mpath.get(path, o, map)\n *     mpath.get(path, o, special, map)\n *\n * @param {String} path\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which receives each individual found value. The value returned from `map` is used in the original values place.\n */\n\nexports.get = function (path, o, special, map) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  var obj = o\n    , part;\n\n  for (var i = 0; i < parts.length; ++i) {\n    part = parts[i];\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      // reading a property from the array items\n      var paths = parts.slice(i);\n\n      return obj.map(function (item) {\n        return item\n          ? exports.get(paths, item, special || lookup, map)\n          : map(undefined);\n      });\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return map(obj);\n  }\n\n  return map(obj);\n}\n\n/**\n * Sets the `val` at the given `path` of object `o`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} o\n * @param {String} [special] When this property name is present on any object in the path, walking will continue on the value of this property.\n * @param {Function} [map] Optional function which is passed each individual value before setting it. The value returned from `map` is used in the original values place.\n */\n\nexports.set = function (path, val, o, special, map, _copying) {\n  var lookup;\n\n  if ('function' == typeof special) {\n    if (special.length < 2) {\n      map = special;\n      special = undefined;\n    } else {\n      lookup = special;\n      special = undefined;\n    }\n  }\n\n  map || (map = K);\n\n  var parts = 'string' == typeof path\n    ? path.split('.')\n    : path\n\n  if (!Array.isArray(parts)) {\n    throw new TypeError('Invalid `path`. Must be either string or array');\n  }\n\n  if (null == o) return;\n\n  // the existance of $ in a path tells us if the user desires\n  // the copying of an array instead of setting each value of\n  // the array to the one by one to matching positions of the\n  // current array.\n  var copy = _copying || /\\$/.test(path)\n    , obj = o\n    , part\n\n  for (var i = 0, len = parts.length - 1; i < len; ++i) {\n    part = parts[i];\n\n    if ('$' == part) {\n      if (i == len - 1) {\n        break;\n      } else {\n        continue;\n      }\n    }\n\n    if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n      var paths = parts.slice(i);\n      if (!copy && Array.isArray(val)) {\n        for (var j = 0; j < obj.length && j < val.length; ++j) {\n          // assignment of single values of array\n          exports.set(paths, val[j], obj[j], special || lookup, map, copy);\n        }\n      } else {\n        for (var j = 0; j < obj.length; ++j) {\n          // assignment of entire value\n          exports.set(paths, val, obj[j], special || lookup, map, copy);\n        }\n      }\n      return;\n    }\n\n    if (lookup) {\n      obj = lookup(obj, part);\n    } else {\n      obj = special && obj[special]\n        ? obj[special][part]\n        : obj[part];\n    }\n\n    if (!obj) return;\n  }\n\n  // process the last property of the path\n\n  part = parts[len];\n\n  // use the special property if exists\n  if (special && obj[special]) {\n    obj = obj[special];\n  }\n\n  // set the value on the last branch\n  if (Array.isArray(obj) && !/^\\d+$/.test(part)) {\n    if (!copy && Array.isArray(val)) {\n      for (var item, j = 0; j < obj.length && j < val.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val[j]));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val[j]);\n          }\n        }\n      }\n    } else {\n      for (var j = 0; j < obj.length; ++j) {\n        item = obj[j];\n        if (item) {\n          if (lookup) {\n            lookup(item, part, map(val));\n          } else {\n            if (item[special]) item = item[special];\n            item[part] = map(val);\n          }\n        }\n      }\n    }\n  } else {\n    if (lookup) {\n      lookup(obj, part, map(val));\n    } else {\n      obj[part] = map(val);\n    }\n  }\n}\n\n/*!\n * Returns the value passed to it.\n */\n\nfunction K (v) {\n  return v;\n}\n"]}