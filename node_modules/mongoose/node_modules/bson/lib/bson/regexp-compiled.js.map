{"version":3,"sources":["regexp.js"],"names":[],"mappings":";;;;;;AAMA,SAAS,UAAT,CAAoB,OAApB,EAA6B,OAA7B,EAAsC;AACpC,MAAG,EAAE,gBAAgB,UAAhB,CAAF,EAA+B,OAAO,IAAI,UAAJ,EAAP,CAAlC;;;AADoC,MAIpC,CAAK,SAAL,GAAiB,YAAjB,CAJoC;AAKpC,OAAK,OAAL,GAAe,OAAf,CALoC;AAMpC,OAAK,OAAL,GAAe,OAAf;;;AANoC,OAShC,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,EAAgB,GAAnC,EAAwC;AACtC,QAAG,EAAE,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,IACA,KAAK,OAAL,CAAa,CAAb,KAAmB,GAAnB,CALF,EAMA;AACD,YAAM,IAAI,KAAJ,CAAU,qCAAqC,KAAK,OAAL,CAAa,CAAb,CAArC,GAAuD,oBAAvD,CAAhB,CADC;KANH;GADF;CATF;;AAsBA,OAAO,OAAP,GAAiB,UAAjB;AACA,OAAO,OAAP,CAAe,UAAf,GAA4B,UAA5B","file":"regexp-compiled.js","sourcesContent":["/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if(!(this instanceof BSONRegExp)) return new BSONRegExp();\n  \n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern;\n  this.options = options;\n\n  // Validate options\n  for(var i = 0; i < options.length; i++) {\n    if(!(this.options[i] == 'i' \n      || this.options[i] == 'm'\n      || this.options[i] == 'x'\n      || this.options[i] == 'l'\n      || this.options[i] == 's'\n      || this.options[i] == 'u'\n    )) {\n      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;"]}