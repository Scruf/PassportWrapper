{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI;AACF,UAAQ,QAAR,GAAmB,QAAQ,QAAR,CAAnB,CADE;AAEF,UAAQ,UAAR,GAAqB,QAAQ,QAAR,CAArB,CAFE;CAAJ,CAGE,OAAM,GAAN,EAAW,EAAX;;AAGF,CAAE,iBAAF,EACI,UADJ,EAEI,QAFJ,EAGI,OAHJ,EAII,UAJJ,EAKI,UALJ,EAMI,WANJ,EAOI,WAPJ,EAQI,YARJ,EASI,UATJ,EAUI,UAVJ,EAWI,aAXJ,EAYI,QAZJ,EAYc,OAZd,CAYsB,UAAU,IAAV,EAAgB;AACnC,MAAI,SAAS,QAAQ,IAAR,CAAT,CAD+B;AAEnC,OAAK,IAAI,CAAJ,IAAS,MAAd,EAAsB;AACrB,YAAQ,CAAR,IAAa,OAAO,CAAP,CAAb,CADqB;GAAtB;CAFmB,CAZtB;;;AAoBA,QAAQ,IAAR,GAAe,YAAW;AACxB,MAAI,UAAU,EAAV;;AADoB,GAGtB,iBAAF,EACI,UADJ,EAEI,QAFJ,EAGI,OAHJ,EAII,UAJJ,EAKI,UALJ,EAMI,WANJ,EAOI,WAPJ,EAQI,YARJ,EASI,UATJ,EAUI,UAVJ,EAWI,aAXJ,EAYI,QAZJ,EAaI,QAbJ,EAac,OAbd,CAasB,UAAU,IAAV,EAAgB;AACnC,QAAI,SAAS,QAAQ,IAAR,CAAT,CAD+B;AAEnC,SAAK,IAAI,CAAJ,IAAS,MAAd,EAAsB;AACrB,cAAQ,CAAR,IAAa,OAAO,CAAP,CAAb,CADqB;KAAtB;GAFmB,CAbtB;;AAHwB,SAuBjB,OAAP,CAvBwB;CAAX;;;AA2Bf,QAAQ,MAAR,GAAiB,YAAW;AAC1B,MAAI,UAAU,EAAV;;AADsB,GAGxB,iBAAF,EACI,UADJ,EAEI,QAFJ,EAGI,OAHJ,EAII,UAJJ,EAKI,UALJ,EAMI,WANJ,EAOI,WAPJ,EAQI,YARJ,EASI,UATJ,EAUI,UAVJ,EAWI,aAXJ,EAYI,QAZJ,EAaE,OAbF,CAaU,UAAU,IAAV,EAAgB;AACtB,QAAI,SAAS,QAAQ,IAAR,CAAT,CADkB;AAEtB,SAAK,IAAI,CAAJ,IAAS,MAAd,EAAsB;AACpB,cAAQ,CAAR,IAAa,OAAO,CAAP,CAAb,CADoB;KAAtB;GAFM,CAbV;;;AAH0B,MAwBtB;AACF,YAAQ,MAAR,IAAkB,QAAQ,QAAR,CAAlB,CADE;GAAJ,CAEE,OAAM,GAAN,EAAW;AACX,WAAO,QAAQ,IAAR,EAAP,CADW;GAAX;;;AA1BwB,SA+BnB,OAAP,CA/B0B;CAAX","file":"index-compiled.js","sourcesContent":["try {\n  exports.BSONPure = require('./bson');\n  exports.BSONNative = require('./bson');\n} catch(err) {\n}\n\n[ './binary_parser'\n  , './binary'\n  , './code'\n  , './map'\n  , './db_ref'\n  , './double'\n  , './max_key'\n  , './min_key'\n  , './objectid'\n  , './regexp'\n  , './symbol'\n  , './timestamp'\n  , './long'].forEach(function (path) {\n  \tvar module = require(path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , './bson'].forEach(function (path) {\n    \tvar module = require(path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the NATIVE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n  ].forEach(function (path) {\n      var module = require(path);\n      for (var i in module) {\n        classes[i] = module[i];\n      }\n  });\n\n  // Catch error and return no classes found\n  try {\n    classes['BSON'] = require('./bson');\n  } catch(err) {\n    return exports.pure();\n  }\n\n  // Return classes list\n  return classes;\n}\n"]}