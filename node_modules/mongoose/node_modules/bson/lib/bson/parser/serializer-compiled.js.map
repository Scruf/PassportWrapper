{"version":3,"sources":["serializer.js"],"names":[],"mappings":"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","file":"serializer-compiled.js","sourcesContent":["\"use strict\"\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  readIEEE754 = require('../float_parser').readIEEE754,\n  Long = require('../long').Long,\n  Map = require('../map'),\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  Code = require('../code').Code,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\nvar regexp = /\\x00/\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n}\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n}\n\nvar serializeString = function(buffer, key, value, index) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = (size + 1 >> 24) & 0xff;\n  buffer[index + 2] = (size + 1 >> 16) & 0xff;\n  buffer[index + 1] = (size + 1 >> 8) & 0xff;\n  buffer[index] = size + 1 & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeNumber = function(buffer, key, value, index) {\n  // We have an integer value\n  if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n}\n\nvar serializeUndefined = function(buffer, key, value, index) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeBoolean = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n}\n\nvar serializeDate = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nvar serializeRegExp = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error(\"value \" + value.source + \" must not contain null bytes\");\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if(value.global) buffer[index++] = 0x73; // s\n  if(value.ignoreCase) buffer[index++] = 0x69; // i\n  if(value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeBSONRegExp = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index = index + buffer.write(value.options, index, 'utf8');\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeMinMax = function(buffer, key, value, index) {\n  // Write the type of either min or max key\n  if(value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if(value instanceof MinKey) {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeObjectId = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  buffer.write(value.id, index, 'binary')\n\n  // Ajust index\n  return index + 12;\n}\n\nvar serializeBuffer = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n}\n\nvar serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) {\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);\n  // Write size\n  var size = endIndex - index;\n  return endIndex;\n}\n\nvar serializeLong = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nvar serializeDouble = function(buffer, key, value, index) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n}\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = value.toString();\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined) {\n  if(value.scope != null && Object.keys(value.scope).length > 0) {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    var functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n}\n\nvar serializeBinary = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n}\n\nvar serializeSymbol = function(buffer, key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if(null != value.db) {\n    endIndex = serializeInto(buffer, {\n        '$ref': value.namespace\n      , '$id' : value.oid\n      , '$db' : value.db\n    }, false, index, depth + 1, serializeFunctions);\n  } else {\n    endIndex = serializeInto(buffer, {\n        '$ref': value.namespace\n      , '$id' : value.oid\n    }, false, index, depth + 1, serializeFunctions);\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n}\n\nvar serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined) {\n  startingIndex = startingIndex || 0;\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  var self = this;\n\n  // Special case isArray\n  if(Array.isArray(object)) {\n    // Get object keys\n    for(var i = 0; i < object.length; i++) {\n      var key = \"\" + i;\n      var value = object[i];\n\n      // Is there an override value\n      if(value && value.toBSON) {\n        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if(type == 'undefined' || value == null) {\n        index = serializeUndefined(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  } else if(object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while(!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if(done) continue;\n\n      // Get the entry values\n      var key = entry.value[0];\n      var value = entry.value[1];\n\n      // Check the type of the value\n      var type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if(key != '$db' && key != '$ref' && key != '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error(\"key \" + key + \" must not contain null bytes\");\n        }\n\n        if (checkKeys) {\n          if('$' == key[0]) {\n            throw Error(\"key \" + key + \" must not start with '$'\");\n          } else if (!!~key.indexOf('.')) {\n            throw Error(\"key \" + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      // console.log(\"---------------------------------------------------\")\n      // console.dir(\"key = \" + key)\n      // console.dir(\"value = \" + value)\n\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if(value === undefined && ignoreUndefined == true) {\n      } else if(value === null || value === undefined) {\n        index = serializeUndefined(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if(object.toBSON) {\n      if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n      object = object.toBSON();\n      if(object != null && typeof object != 'object') throw new Error(\"toBSON function did not return an object\");\n    }\n\n    // Iterate over all the keys\n    for(var key in object) {\n      var value = object[key];\n      // Is there an override value\n      if(value && value.toBSON) {\n        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      var type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if(key != '$db' && key != '$ref' && key != '$id') {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error(\"key \" + key + \" must not contain null bytes\");\n        }\n\n        if (checkKeys) {\n          if('$' == key[0]) {\n            throw Error(\"key \" + key + \" must not start with '$'\");\n          } else if (!!~key.indexOf('.')) {\n            throw Error(\"key \" + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if(type == 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if(type == 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type == 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if(value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if(value === undefined && ignoreUndefined == true) {\n      } else if(value === null || value === undefined) {\n        index = serializeUndefined(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if(Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if(value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if(type == 'object' && value['_bsontype'] == null) {\n        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Code') {\n        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n      } else if(typeof value == 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if(value['_bsontype'] == 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  }\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n}\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = BSON.functionCache = {};\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n"]}