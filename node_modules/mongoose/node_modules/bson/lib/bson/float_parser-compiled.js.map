{"version":3,"sources":["float_parser.js"],"names":[],"mappings":"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","file":"float_parser-compiled.js","sourcesContent":["// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n// \n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n// \n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {\n  var e, m,\n      bBE = (endian === 'big'),\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = bBE ? 0 : (nBytes - 1),\n      d = bBE ? 1 : -1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {\n  var e, m, c,\n      bBE = (endian === 'big'),\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = bBE ? (nBytes-1) : 0,\n      d = bBE ? -1 : 1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e+eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;"]}