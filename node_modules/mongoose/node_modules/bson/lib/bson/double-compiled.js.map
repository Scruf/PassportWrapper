{"version":3,"sources":["double.js"],"names":[],"mappings":";;;;;;;AAOA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAG,EAAE,gBAAgB,MAAhB,CAAF,EAA2B,OAAO,IAAI,MAAJ,CAAW,KAAX,CAAP,CAA9B;;AAEA,OAAK,SAAL,GAAiB,QAAjB,CAHqB;AAIrB,OAAK,KAAL,GAAa,KAAb,CAJqB;CAAvB;;;;;;;;AAaA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAW;AACpC,SAAO,KAAK,KAAL,CAD6B;CAAX;;;;;AAO3B,OAAO,SAAP,CAAiB,MAAjB,GAA0B,YAAW;AACnC,SAAO,KAAK,KAAL,CAD4B;CAAX;;AAI1B,OAAO,OAAP,GAAiB,MAAjB;AACA,OAAO,OAAP,CAAe,MAAf,GAAwB,MAAxB","file":"double-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if(!(this instanceof Double)) return new Double(value);\n  \n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Double;\nmodule.exports.Double = Double;"]}