{"version":3,"sources":["binary.js"],"names":[],"mappings":"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","file":"binary-compiled.js","sourcesContent":["/**\n * Module dependencies.\n * @ignore\n */\n\n// Test if we're in Node via presence of \"global\" not absence of \"window\"\n// to support hybrid environments like Electron\nif(typeof global !== 'undefined') {\n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nfunction Binary(buffer, subType) {\n  if(!(this instanceof Binary)) return new Binary(buffer, subType);\n\n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if(typeof buffer == 'string') {\n      // Different ways of writing the length of the string for the different types\n      if(typeof Buffer != 'undefined') {\n        this.buffer = new Buffer(buffer);\n      } else if(typeof Uint8Array != 'undefined' || (Object.prototype.toString.call(buffer) == '[object Array]')) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error(\"only String, Buffer, Uint8Array or Array accepted\");\n      }\n    } else {\n      this.buffer = buffer;\n    }\n    this.position = buffer.length;\n  } else {\n    if(typeof Buffer != 'undefined') {\n      this.buffer =  new Buffer(Binary.BUFFER_SIZE);\n    } else if(typeof Uint8Array != 'undefined'){\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n};\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {string} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n      // Create additional overflow buffer\n      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      var buffer = null;\n      // Create a new buffer (typed or normal array)\n      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }\n\n      // We need to copy all the content to the new array\n      for(var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n\n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n      buffer = new Buffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n    } else if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n      // Copy the content\n      for(var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length\n  } else if(typeof Buffer != 'undefined' && typeof string == 'string' && Buffer.isBuffer(this.buffer)) {\n    this.buffer.write(string, offset, 'binary');\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length;\n  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'\n    || Object.prototype.toString.call(string) == '[object Array]' && typeof string != 'string') {\n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  } else if(typeof string == 'string') {\n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n\n  // Let's return the data based on the type we have\n  if(this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);\n    for(var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {string}\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if(asRaw && typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer) && this.buffer.length == this.position)\n    return this.buffer;\n\n  // If it's a node.js buffer object\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw ? this.buffer.slice(0, this.position) : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if(asRaw) {\n      // we support the slice command use it\n      if(this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);\n        // Copy content\n        for(var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n}\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nmodule.exports = Binary;\nmodule.exports.Binary = Binary;\n"]}