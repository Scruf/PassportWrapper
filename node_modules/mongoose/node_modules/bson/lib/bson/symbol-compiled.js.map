{"version":3,"sources":["symbol.js"],"names":[],"mappings":";;;;;;;;AAQA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,MAAG,EAAE,gBAAgB,MAAhB,CAAF,EAA2B,OAAO,IAAI,MAAJ,CAAW,KAAX,CAAP,CAA9B;AACA,OAAK,SAAL,GAAiB,QAAjB,CAFqB;AAGrB,OAAK,KAAL,GAAa,KAAb,CAHqB;CAAvB;;;;;;;;AAYA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAW;AACpC,SAAO,KAAK,KAAL,CAD6B;CAAX;;;;;AAO3B,OAAO,SAAP,CAAiB,QAAjB,GAA4B,YAAW;AACrC,SAAO,KAAK,KAAL,CAD8B;CAAX;;;;;AAO5B,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAW;AACpC,SAAO,KAAK,KAAL,CAD6B;CAAX;;;;;AAO3B,OAAO,SAAP,CAAiB,MAAjB,GAA0B,YAAW;AACnC,SAAO,KAAK,KAAL,CAD4B;CAAX;;AAI1B,OAAO,OAAP,GAAiB,MAAjB;AACA,OAAO,OAAP,CAAe,MAAf,GAAwB,MAAxB","file":"symbol-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if(!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function() {\n  return this.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.inspect = function() {\n  return this.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;"]}