{"version":3,"sources":["bson.js"],"names":[],"mappings":"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","file":"bson-compiled.js","sourcesContent":["var Long = require('../lib/bson/long').Long\n  , Double = require('../lib/bson/double').Double\n  , Timestamp = require('../lib/bson/timestamp').Timestamp\n  , ObjectID = require('../lib/bson/objectid').ObjectID\n  , Symbol = require('../lib/bson/symbol').Symbol\n  , Code = require('../lib/bson/code').Code\n  , MinKey = require('../lib/bson/min_key').MinKey\n  , MaxKey = require('../lib/bson/max_key').MaxKey\n  , DBRef = require('../lib/bson/db_ref').DBRef\n  , Binary = require('../lib/bson/binary').Binary\n  , BinaryParser = require('../lib/bson/binary_parser').BinaryParser\n  , writeIEEE754 = require('../lib/bson/float_parser').writeIEEE754\n  , readIEEE754 = require('../lib/bson/float_parser').readIEEE754\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n}\n\n/**\n * Create a new BSON instance\n *\n * @class\n * @return {BSON} instance of BSON Parser.\n */\nfunction BSON () {};\n\n/**\n * @ignore\n * @api private\n */\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param {Object} object the Javascript object to calculate the BSON byte size for.\n * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.\n * @return {Number} returns the number of bytes the BSON object will take up.\n * @api public\n */\nBSON.calculateObjectSize = function calculateObjectSize(object, serializeFunctions) {\n  var totalLength = (4 + 1);\n\n  if(Array.isArray(object)) {\n    for(var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions)\n    }\n  } else {\n\t\t// If we have toBSON defined, override the current object\n\t\tif(object.toBSON) {\n\t\t\tobject = object.toBSON();\n\t\t}\n\n\t\t// Calculate size\n    for(var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions)\n    }\n  }\n\n  return totalLength;\n}\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions) {\n  var isBuffer = typeof Buffer !== 'undefined';\n\n  // If we have toBSON defined, override the current object\n  if(value && value.toBSON){\n    value = value.toBSON();\n  }\n\n  switch(typeof value) {\n    case 'string':\n      return 1 + (!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1 + 4 + (!isBuffer ? numberOfBytes(value) : Buffer.byteLength(value, 'utf8')) + 1;\n    case 'number':\n      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) { // 32 bit\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (4 + 1);\n        } else {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);\n        }\n      } else {  // 64 bit\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);\n      }\n    case 'undefined':\n      return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (1);\n    case 'boolean':\n      return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (1 + 1);\n    case 'object':\n      if(value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (1);\n      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (12 + 1);\n      } else if(value instanceof Date || isDate(value)) {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);\n      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (1 + 4 + 1) + value.length;\n      } else if(value instanceof Long || value instanceof Double || value instanceof Timestamp\n          || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (8 + 1);\n      } else if(value instanceof Code || value['_bsontype'] == 'Code') {\n        // Calculate size depending on the availability of a scope\n        if(value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + 4 + 4 + (!isBuffer ? numberOfBytes(value.code.toString()) : Buffer.byteLength(value.code.toString(), 'utf8')) + 1 + BSON.calculateObjectSize(value.scope, serializeFunctions);\n        } else {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + 4 + (!isBuffer ? numberOfBytes(value.code.toString()) : Buffer.byteLength(value.code.toString(), 'utf8')) + 1;\n        }\n      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {\n        // Check what kind of subtype we have\n        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (value.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + (value.position + 1 + 4 + 1);\n        }\n      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + ((!isBuffer ? numberOfBytes(value.value) : Buffer.byteLength(value.value, 'utf8')) + 4 + 1 + 1);\n      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n            '$ref': value.namespace\n          , '$id' : value.oid\n        };\n\n        // Add db reference if it exists\n        if(null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + BSON.calculateObjectSize(ordered_values, serializeFunctions);\n      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + (!isBuffer ? numberOfBytes(value.source) : Buffer.byteLength(value.source, 'utf8')) + 1\n            + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + BSON.calculateObjectSize(value, serializeFunctions) + 1;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {\n        return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + (!isBuffer ? numberOfBytes(value.source) : Buffer.byteLength(value.source, 'utf8')) + 1\n          + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else {\n        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + 4 + 4 + (!isBuffer ? numberOfBytes(value.toString()) : Buffer.byteLength(value.toString(), 'utf8')) + 1 + BSON.calculateObjectSize(value.scope, serializeFunctions);\n        } else if(serializeFunctions) {\n          return (name != null ? ((!isBuffer ? numberOfBytes(name) : Buffer.byteLength(name, 'utf8')) + 1) : 0) + 1 + 4 + (!isBuffer ? numberOfBytes(value.toString()) : Buffer.byteLength(value.toString(), 'utf8')) + 1;\n        }\n      }\n  }\n\n  return 0;\n}\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} checkKeys the serializer will check if keys are valid.\n * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n * @param {Number} index the index in the buffer where we wish to start serializing into.\n * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**.\n * @return {Number} returns the new write index in the Buffer.\n * @api public\n */\nBSON.serializeWithBufferAndIndex = function serializeWithBufferAndIndex(object, checkKeys, buffer, index, serializeFunctions) {\n  // Default setting false\n  serializeFunctions = serializeFunctions == null ? false : serializeFunctions;\n  // Write end information (length of the object)\n  var size = buffer.length;\n  // Write the size of the object\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  return serializeObject(object, checkKeys, buffer, index, serializeFunctions) - 1;\n}\n\n/**\n * @ignore\n * @api private\n */\nvar serializeObject = function(object, checkKeys, buffer, index, serializeFunctions) {\n  if(object.toBSON) {\n    if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");\n    object = object.toBSON();\n    if(object != null && typeof object != 'object') throw new Error(\"toBSON function did not return an object\");\n  }\n\n  // Process the object\n  if(Array.isArray(object)) {\n    for(var i = 0; i < object.length; i++) {\n      index = packElement(i.toString(), object[i], checkKeys, buffer, index, serializeFunctions);\n    }\n  } else {\n\t\t// If we have toBSON defined, override the current object\n\t\tif(object.toBSON) {\n\t\t\tobject = object.toBSON();\n\t\t}\n\n\t\t// Serialize the object\n    for(var key in object) {\n      // Check the key and throw error if it's illegal\n      if (key != '$db' && key != '$ref' && key != '$id') {\n        // dollars and dots ok\n        BSON.checkKey(key, !checkKeys);\n      }\n\n      // Pack the element\n      index = packElement(key, object[key], checkKeys, buffer, index, serializeFunctions);\n    }\n  }\n\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar stringToBytes = function(str) {\n  var ch, st, re = [];\n  for (var i = 0; i < str.length; i++ ) {\n    ch = str.charCodeAt(i);  // get char\n    st = [];                 // set up \"stack\"\n    do {\n      st.push( ch & 0xFF );  // push byte to stack\n      ch = ch >> 8;          // shift value down by 1 byte\n    }\n    while ( ch );\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat( st.reverse() );\n  }\n  // return an array of bytes\n  return re;\n}\n\nvar numberOfBytes = function(str) {\n  var ch, st, re = 0;\n  for (var i = 0; i < str.length; i++ ) {\n    ch = str.charCodeAt(i);  // get char\n    st = [];                 // set up \"stack\"\n    do {\n      st.push( ch & 0xFF );  // push byte to stack\n      ch = ch >> 8;          // shift value down by 1 byte\n    }\n    while ( ch );\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re + st.length;\n  }\n  // return an array of bytes\n  return re;\n}\n\n/**\n * @ignore\n * @api private\n */\nvar writeToTypedArray = function(buffer, string, index) {\n  var bytes = stringToBytes(string);\n  for(var i = 0; i < bytes.length; i++) {\n    buffer[index + i] = bytes[i];\n  }\n  return bytes.length;\n}\n\n/**\n * @ignore\n * @api private\n */\nvar supportsBuffer = typeof Buffer != 'undefined';\n\n/**\n * @ignore\n * @api private\n */\nvar packElement = function(name, value, checkKeys, buffer, index, serializeFunctions) {\n\n  // If we have toBSON defined, override the current object\n  if(value && value.toBSON){\n        value = value.toBSON();\n  }\n\n  var startIndex = index;\n\n  switch(typeof value) {\n    case 'string':\n      // console.log(\"+++++++++++ index string:: \" + index)\n      // Encode String type\n      buffer[index++] = BSON.BSON_DATA_STRING;\n      // Number of written bytes\n      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n      // Encode the name\n      index = index + numberOfWrittenBytes + 1;\n      buffer[index - 1] = 0;\n\n      // Calculate size\n      var size = supportsBuffer ? Buffer.byteLength(value) + 1 : numberOfBytes(value) + 1;\n      // console.log(\"====== key :: \" + name + \" size ::\" + size)\n      // Write the size of the string to buffer\n      buffer[index + 3] = (size >> 24) & 0xff;\n      buffer[index + 2] = (size >> 16) & 0xff;\n      buffer[index + 1] = (size >> 8) & 0xff;\n      buffer[index] = size & 0xff;\n      // Ajust the index\n      index = index + 4;\n      // Write the string\n      supportsBuffer ? buffer.write(value, index, 'utf8') : writeToTypedArray(buffer, value, index);\n      // Update index\n      index = index + size - 1;\n      // Write zero\n      buffer[index++] = 0;\n      // Return index\n      return index;\n    case 'number':\n      // We have an integer value\n      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        // If the value fits in 32 bits encode as int, if it fits in a double\n        // encode it as a double, otherwise long\n        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // Set int type 32 bits or less\n          buffer[index++] = BSON.BSON_DATA_INT;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Write the int value\n          buffer[index++] = value & 0xff;\n          buffer[index++] = (value >> 8) & 0xff;\n          buffer[index++] = (value >> 16) & 0xff;\n          buffer[index++] = (value >> 24) & 0xff;\n        } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n          // Encode as double\n          buffer[index++] = BSON.BSON_DATA_NUMBER;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Write float\n          writeIEEE754(buffer, value, index, 'little', 52, 8);\n          // Ajust index\n          index = index + 8;\n        } else {\n          // Set long type\n          buffer[index++] = BSON.BSON_DATA_LONG;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          var longVal = Long.fromNumber(value);\n          var lowBits = longVal.getLowBits();\n          var highBits = longVal.getHighBits();\n          // Encode low bits\n          buffer[index++] = lowBits & 0xff;\n          buffer[index++] = (lowBits >> 8) & 0xff;\n          buffer[index++] = (lowBits >> 16) & 0xff;\n          buffer[index++] = (lowBits >> 24) & 0xff;\n          // Encode high bits\n          buffer[index++] = highBits & 0xff;\n          buffer[index++] = (highBits >> 8) & 0xff;\n          buffer[index++] = (highBits >> 16) & 0xff;\n          buffer[index++] = (highBits >> 24) & 0xff;\n        }\n      } else {\n        // Encode as double\n        buffer[index++] = BSON.BSON_DATA_NUMBER;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Write float\n        writeIEEE754(buffer, value, index, 'little', 52, 8);\n        // Ajust index\n        index = index + 8;\n      }\n\n      return index;\n    case 'undefined':\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_NULL;\n      // Number of written bytes\n      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n      // Encode the name\n      index = index + numberOfWrittenBytes + 1;\n      buffer[index - 1] = 0;\n      return index;\n    case 'boolean':\n      // Write the type\n      buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n      // Number of written bytes\n      var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n      // Encode the name\n      index = index + numberOfWrittenBytes + 1;\n      buffer[index - 1] = 0;\n      // Encode the boolean value\n      buffer[index++] = value ? 1 : 0;\n      return index;\n    case 'object':\n      if(value === null || value instanceof MinKey || value instanceof MaxKey\n          || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        // Write the type of either min or max key\n        if(value === null) {\n          buffer[index++] = BSON.BSON_DATA_NULL;\n        } else if(value instanceof MinKey) {\n          buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n        } else {\n          buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n        }\n\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        return index;\n      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {\n        // console.log(\"+++++++++++ index OBJECTID:: \" + index)\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_OID;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n\n        // Write objectid\n        supportsBuffer ? buffer.write(value.id, index, 'binary') : writeToTypedArray(buffer, value.id, index);\n        // Ajust index\n        index = index + 12;\n        return index;\n      } else if(value instanceof Date || isDate(value)) {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_DATE;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n\n        // Write the date\n        var dateInMilis = Long.fromNumber(value.getTime());\n        var lowBits = dateInMilis.getLowBits();\n        var highBits = dateInMilis.getHighBits();\n        // Encode low bits\n        buffer[index++] = lowBits & 0xff;\n        buffer[index++] = (lowBits >> 8) & 0xff;\n        buffer[index++] = (lowBits >> 16) & 0xff;\n        buffer[index++] = (lowBits >> 24) & 0xff;\n        // Encode high bits\n        buffer[index++] = highBits & 0xff;\n        buffer[index++] = (highBits >> 8) & 0xff;\n        buffer[index++] = (highBits >> 16) & 0xff;\n        buffer[index++] = (highBits >> 24) & 0xff;\n        return index;\n      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_BINARY;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Get size of the buffer (current write point)\n        var size = value.length;\n        // Write the size of the string to buffer\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n        // Write the default subtype\n        buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n        // Copy the content form the binary field to the buffer\n        value.copy(buffer, index, 0, size);\n        // Adjust the index\n        index = index + size;\n        return index;\n      } else if(value instanceof Long || value instanceof Timestamp || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {\n        // Write the type\n        buffer[index++] = value instanceof Long || value['_bsontype'] == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Write the date\n        var lowBits = value.getLowBits();\n        var highBits = value.getHighBits();\n        // Encode low bits\n        buffer[index++] = lowBits & 0xff;\n        buffer[index++] = (lowBits >> 8) & 0xff;\n        buffer[index++] = (lowBits >> 16) & 0xff;\n        buffer[index++] = (lowBits >> 24) & 0xff;\n        // Encode high bits\n        buffer[index++] = highBits & 0xff;\n        buffer[index++] = (highBits >> 8) & 0xff;\n        buffer[index++] = (highBits >> 16) & 0xff;\n        buffer[index++] = (highBits >> 24) & 0xff;\n        return index;\n      } else if(value instanceof Double || value['_bsontype'] == 'Double') {\n        // Encode as double\n        buffer[index++] = BSON.BSON_DATA_NUMBER;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Write float\n        writeIEEE754(buffer, value, index, 'little', 52, 8);\n        // Ajust index\n        index = index + 8;\n        return index;\n      } else if(value instanceof Code || value['_bsontype'] == 'Code') {\n        if(value.scope != null && Object.keys(value.scope).length > 0) {\n          // Write the type\n          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Calculate the scope size\n          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);\n          // Function string\n          var functionString = value.code.toString();\n          // Function Size\n          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;\n\n          // Calculate full size of the object\n          var totalSize = 4 + codeSize + scopeSize + 4;\n\n          // Write the total size of the object\n          buffer[index++] = totalSize & 0xff;\n          buffer[index++] = (totalSize >> 8) & 0xff;\n          buffer[index++] = (totalSize >> 16) & 0xff;\n          buffer[index++] = (totalSize >> 24) & 0xff;\n\n          // Write the size of the string to buffer\n          buffer[index++] = codeSize & 0xff;\n          buffer[index++] = (codeSize >> 8) & 0xff;\n          buffer[index++] = (codeSize >> 16) & 0xff;\n          buffer[index++] = (codeSize >> 24) & 0xff;\n\n          // Write the string\n          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);\n          // Update index\n          index = index + codeSize - 1;\n          // Write zero\n          buffer[index++] = 0;\n          // Serialize the scope object\n          var scopeObjectBuffer = supportsBuffer ? new Buffer(scopeSize) : new Uint8Array(new ArrayBuffer(scopeSize));\n          // Execute the serialization into a seperate buffer\n          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);\n\n          // Adjusted scope Size (removing the header)\n          var scopeDocSize = scopeSize;\n          // Write scope object size\n          buffer[index++] = scopeDocSize & 0xff;\n          buffer[index++] = (scopeDocSize >> 8) & 0xff;\n          buffer[index++] = (scopeDocSize >> 16) & 0xff;\n          buffer[index++] = (scopeDocSize >> 24) & 0xff;\n\n          // Write the scopeObject into the buffer\n          supportsBuffer ? scopeObjectBuffer.copy(buffer, index, 0, scopeSize) : buffer.set(scopeObjectBuffer, index);\n          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)\n          index = index + scopeDocSize - 5;\n          // Write trailing zero\n          buffer[index++] = 0;\n          return index\n        } else {\n          buffer[index++] = BSON.BSON_DATA_CODE;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Function string\n          var functionString = value.code.toString();\n          // Function Size\n          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;\n          // Write the size of the string to buffer\n          buffer[index++] = size & 0xff;\n          buffer[index++] = (size >> 8) & 0xff;\n          buffer[index++] = (size >> 16) & 0xff;\n          buffer[index++] = (size >> 24) & 0xff;\n          // Write the string\n          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);\n          // Update index\n          index = index + size - 1;\n          // Write zero\n          buffer[index++] = 0;\n          return index;\n        }\n      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_BINARY;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Extract the buffer\n        var data = value.value(true);\n        // Calculate size\n        var size = value.position;\n        // Write the size of the string to buffer\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n        // Write the subtype to the buffer\n        buffer[index++] = value.sub_type;\n\n        // If we have binary type 2 the 4 first bytes are the size\n        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n          buffer[index++] = size & 0xff;\n          buffer[index++] = (size >> 8) & 0xff;\n          buffer[index++] = (size >> 16) & 0xff;\n          buffer[index++] = (size >> 24) & 0xff;\n        }\n\n        // Write the data to the object\n        supportsBuffer ? data.copy(buffer, index, 0, value.position) : buffer.set(data, index);\n        // Ajust index\n        index = index + value.position;\n        return index;\n      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_SYMBOL;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Calculate size\n        var size = supportsBuffer ? Buffer.byteLength(value.value) + 1 : numberOfBytes(value.value) + 1;\n        // Write the size of the string to buffer\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n        // Write the string\n        buffer.write(value.value, index, 'utf8');\n        // Update index\n        index = index + size - 1;\n        // Write zero\n        buffer[index++] = 0x00;\n        return index;\n      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_OBJECT;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n        // Set up correct object for serialization\n        var ordered_values = {\n            '$ref': value.namespace\n          , '$id' : value.oid\n        };\n\n        // Add db reference if it exists\n        if(null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        // Message size\n        var size = BSON.calculateObjectSize(ordered_values, serializeFunctions);\n        // Serialize the object\n        var endIndex = BSON.serializeWithBufferAndIndex(ordered_values, checkKeys, buffer, index, serializeFunctions);\n        // Write the size of the string to buffer\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n        // Write zero for object\n        buffer[endIndex++] = 0x00;\n        // Return the end index\n        return endIndex;\n      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_REGEXP;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n\n        // Write the regular expression string\n        supportsBuffer ? buffer.write(value.source, index, 'utf8') : writeToTypedArray(buffer, value.source, index);\n        // Adjust the index\n        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));\n        // Write zero\n        buffer[index++] = 0x00;\n        // Write the parameters\n        if(value.global) buffer[index++] = 0x73; // s\n        if(value.ignoreCase) buffer[index++] = 0x69; // i\n        if(value.multiline) buffer[index++] = 0x6d; // m\n        // Add ending zero\n        buffer[index++] = 0x00;\n        return index;\n      } else {\n        // Write the type\n        buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Adjust the index\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n\t      var endIndex = serializeObject(value, checkKeys, buffer, index + 4, serializeFunctions);\n        // Write size\n        var size = endIndex - index;\n        // Write the size of the string to buffer\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n        return endIndex;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {\n        // Write the type\n        buffer[index++] = BSON.BSON_DATA_REGEXP;\n        // Number of written bytes\n        var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n        // Encode the name\n        index = index + numberOfWrittenBytes + 1;\n        buffer[index - 1] = 0;\n\n        // Write the regular expression string\n        buffer.write(value.source, index, 'utf8');\n        // Adjust the index\n        index = index + (supportsBuffer ? Buffer.byteLength(value.source) : numberOfBytes(value.source));\n        // Write zero\n        buffer[index++] = 0x00;\n        // Write the parameters\n        if(value.global) buffer[index++] = 0x73; // s\n        if(value.ignoreCase) buffer[index++] = 0x69; // i\n        if(value.multiline) buffer[index++] = 0x6d; // m\n        // Add ending zero\n        buffer[index++] = 0x00;\n        return index;\n      } else {\n        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          // Write the type\n          buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Calculate the scope size\n          var scopeSize = BSON.calculateObjectSize(value.scope, serializeFunctions);\n          // Function string\n          var functionString = value.toString();\n          // Function Size\n          var codeSize = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;\n\n          // Calculate full size of the object\n          var totalSize = 4 + codeSize + scopeSize;\n\n          // Write the total size of the object\n          buffer[index++] = totalSize & 0xff;\n          buffer[index++] = (totalSize >> 8) & 0xff;\n          buffer[index++] = (totalSize >> 16) & 0xff;\n          buffer[index++] = (totalSize >> 24) & 0xff;\n\n          // Write the size of the string to buffer\n          buffer[index++] = codeSize & 0xff;\n          buffer[index++] = (codeSize >> 8) & 0xff;\n          buffer[index++] = (codeSize >> 16) & 0xff;\n          buffer[index++] = (codeSize >> 24) & 0xff;\n\n          // Write the string\n          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);\n          // Update index\n          index = index + codeSize - 1;\n          // Write zero\n          buffer[index++] = 0;\n          // Serialize the scope object\n          var scopeObjectBuffer = new Buffer(scopeSize);\n          // Execute the serialization into a seperate buffer\n          serializeObject(value.scope, checkKeys, scopeObjectBuffer, 0, serializeFunctions);\n\n          // Adjusted scope Size (removing the header)\n          var scopeDocSize = scopeSize - 4;\n          // Write scope object size\n          buffer[index++] = scopeDocSize & 0xff;\n          buffer[index++] = (scopeDocSize >> 8) & 0xff;\n          buffer[index++] = (scopeDocSize >> 16) & 0xff;\n          buffer[index++] = (scopeDocSize >> 24) & 0xff;\n\n          // Write the scopeObject into the buffer\n          scopeObjectBuffer.copy(buffer, index, 0, scopeSize);\n\n          // Adjust index, removing the empty size of the doc (5 bytes 0000000005)\n          index = index + scopeDocSize - 5;\n          // Write trailing zero\n          buffer[index++] = 0;\n          return index\n        } else if(serializeFunctions) {\n          buffer[index++] = BSON.BSON_DATA_CODE;\n          // Number of written bytes\n          var numberOfWrittenBytes = supportsBuffer ? buffer.write(name, index, 'utf8') : writeToTypedArray(buffer, name, index);\n          // Encode the name\n          index = index + numberOfWrittenBytes + 1;\n          buffer[index - 1] = 0;\n          // Function string\n          var functionString = value.toString();\n          // Function Size\n          var size = supportsBuffer ? Buffer.byteLength(functionString) + 1 : numberOfBytes(functionString) + 1;\n          // Write the size of the string to buffer\n          buffer[index++] = size & 0xff;\n          buffer[index++] = (size >> 8) & 0xff;\n          buffer[index++] = (size >> 16) & 0xff;\n          buffer[index++] = (size >> 24) & 0xff;\n          // Write the string\n          supportsBuffer ? buffer.write(functionString, index, 'utf8') : writeToTypedArray(buffer, functionString, index);\n          // Update index\n          index = index + size - 1;\n          // Write zero\n          buffer[index++] = 0;\n          return index;\n        }\n      }\n  }\n\n  // If no value to serialize\n  return index;\n}\n\n/**\n * Serialize a Javascript object.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} checkKeys the serializer will check if keys are valid.\n * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**.\n * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**.\n * @return {Buffer} returns the Buffer object containing the serialized object.\n * @api public\n */\nBSON.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {\n  // Throw error if we are trying serialize an illegal type\n  if(object == null || typeof object != 'object' || Array.isArray(object))\n    throw new Error(\"Only javascript objects supported\");\n\n  // Emoty target buffer\n  var buffer = null;\n  // Calculate the size of the object\n  var size = BSON.calculateObjectSize(object, serializeFunctions);\n  // Fetch the best available type for storing the binary data\n  if(buffer = typeof Buffer != 'undefined') {\n    buffer = new Buffer(size);\n    asBuffer = true;\n  } else if(typeof Uint8Array != 'undefined') {\n    buffer = new Uint8Array(new ArrayBuffer(size));\n  } else {\n    buffer = new Array(size);\n  }\n\n  // If asBuffer is false use typed arrays\n  BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, 0, serializeFunctions);\n  // console.log(\"++++++++++++++++++++++++++++++++++++ OLDJS :: \" + buffer.length)\n  // console.log(buffer.toString('hex'))\n  // console.log(buffer.toString('ascii'))\n  return buffer;\n}\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = BSON.functionCache = {};\n\n/**\n * Crc state variables shared by function\n *\n * @ignore\n * @api private\n */\nvar table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];\n\n/**\n * CRC32 hash method, Fast and enough versitility for our usage\n *\n * @ignore\n * @api private\n */\nvar crc32 =  function(string, start, end) {\n  var crc = 0\n  var x = 0;\n  var y = 0;\n  crc = crc ^ (-1);\n\n  for(var i = start, iTop = end; i < iTop;i++) {\n  \ty = (crc ^ string[i]) & 0xFF;\n    x = table[y];\n  \tcrc = (crc >>> 8) ^ x;\n  }\n\n  return crc ^ (-1);\n}\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * Options\n *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.\n *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse.\n *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.\n *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n *\n * @param {Buffer} data the buffer containing the serialized set of BSON documents.\n * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n * @param {Number} numberOfDocuments number of documents to deserialize.\n * @param {Array} documents an array where to store the deserialized documents.\n * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n * @api public\n */\nBSON.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n  // if(numberOfDocuments !== documents.length) throw new Error(\"Number of expected results back is less than the number of documents\");\n  options = options != null ? options : {};\n  var index = startIndex;\n  // Loop over all documents\n  for(var i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    var size = data[index] | data[index + 1] << 8 | data[index + 2] << 16 | data[index + 3] << 24;\n    // Update options with index\n    options['index'] = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = BSON.deserialize(data, options);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n}\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEvalWithHash = function(functionCache, hash, functionString, object) {\n  // Contains the value we are going to set\n  var value = null;\n\n  // Check for cache hit, eval if missing and return cached function\n  if(functionCache[hash] == null) {\n    eval(\"value = \" + functionString);\n    functionCache[hash] = value;\n  }\n  // Set the object\n  return functionCache[hash].bind(object);\n}\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEval = function(functionString) {\n  // Contains the value we are going to set\n  var value = null;\n  // Eval the function\n  eval(\"value = \" + functionString);\n  return value;\n}\n\n/**\n * Convert Uint8Array to String\n *\n * @ignore\n * @api private\n */\nvar convertUint8ArrayToUtf8String = function(byteArray, startIndex, endIndex) {\n  return BinaryParser.decode_utf8(convertArraytoUtf8BinaryString(byteArray, startIndex, endIndex));\n}\n\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n    result = result + String.fromCharCode(byteArray[i]);\n  }\n\n  return result;\n};\n\n/**\n * Deserialize data as BSON.\n *\n * Options\n *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.\n *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse.\n *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.\n *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n *\n * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @param {Boolean} [isArray] ignore used for recursive parsing.\n * @return {Object} returns the deserialized Javascript Object.\n * @api public\n */\nBSON.deserialize = function(buffer, options, isArray) {\n  // Options\n  options = options == null ? {} : options;\n  var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n  var cacheFunctionsCrc32 = options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];\n  var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n\n  // Validate that we have at least 4 bytes of buffer\n  if(buffer.length < 5) throw new Error(\"corrupt bson message < 5 bytes long\");\n\n  // Set up index\n  var index = typeof options['index'] == 'number' ? options['index'] : 0;\n  // Reads in a C style string\n  var readCStyleString = function() {\n    // Get the start search index\n    var i = index;\n    // Locate the end of the c string\n    while(buffer[i] !== 0x00 && i < buffer.length) {\n      i++\n    }\n    // If are at the end of the buffer there is a problem with the document\n    if(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")\n    // Grab utf8 encoded string\n    var string = supportsBuffer && Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, i) : convertUint8ArrayToUtf8String(buffer, index, i);\n    // Update index position\n    index = i + 1;\n    // Return string\n    return string;\n  }\n\n  // Create holding object\n  var object = isArray ? [] : {};\n\n  // Read the document size\n  var size = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n\n  // Ensure buffer is valid size\n  if(size < 5 || size > buffer.length) throw new Error(\"corrupt bson message\");\n\n  // While we have more left data left keep parsing\n  while(true) {\n    // Read the type\n    var elementType = buffer[index++];\n    // If we get a zero it's the last byte, exit\n    if(elementType == 0) break;\n    // Read the name of the field\n    var name = readCStyleString();\n    // Switch on the type\n    switch(elementType) {\n      case BSON.BSON_DATA_OID:\n        var string = supportsBuffer && Buffer.isBuffer(buffer) ? buffer.toString('binary', index, index + 12) : convertArraytoUtf8BinaryString(buffer, index, index + 12);\n        // Decode the oid\n        object[name] = new ObjectID(string);\n        // Update index\n        index = index + 12;\n        break;\n      case BSON.BSON_DATA_STRING:\n        // Read the content of the field\n        var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Add string to object\n        object[name] = supportsBuffer && Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);\n        // Update parse index position\n        index = index + stringSize;\n        break;\n      case BSON.BSON_DATA_INT:\n        // Decode the 32bit value\n        object[name] = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        break;\n      case BSON.BSON_DATA_NUMBER:\n        // Decode the double value\n        object[name] = readIEEE754(buffer, index, 'little', 52, 8);\n        // Update the index\n        index = index + 8;\n        break;\n      case BSON.BSON_DATA_DATE:\n        // Unpack the low and high bits\n        var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Set date object\n        object[name] = new Date(new Long(lowBits, highBits).toNumber());\n        break;\n      case BSON.BSON_DATA_BOOLEAN:\n        // Parse the boolean value\n        object[name] = buffer[index++] == 1;\n        break;\n      case BSON.BSON_DATA_UNDEFINED:\n      case BSON.BSON_DATA_NULL:\n        // Parse the boolean value\n        object[name] = null;\n        break;\n      case BSON.BSON_DATA_BINARY:\n        // Decode the size of the binary blob\n        var binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Decode the subtype\n        var subType = buffer[index++];\n        // Decode as raw Buffer object if options specifies it\n        if(buffer['slice'] != null) {\n          // If we have subtype 2 skip the 4 bytes for the size\n          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {\n            binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n          }\n          // Slice the data\n          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);\n        } else {\n          var _buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(binarySize)) : new Array(binarySize);\n          // If we have subtype 2 skip the 4 bytes for the size\n          if(subType == Binary.SUBTYPE_BYTE_ARRAY) {\n            binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n          }\n          // Copy the data\n          for(var i = 0; i < binarySize; i++) {\n            _buffer[i] = buffer[index + i];\n          }\n          // Create the binary object\n          object[name] = new Binary(_buffer, subType);\n        }\n        // Update the index\n        index = index + binarySize;\n        break;\n      case BSON.BSON_DATA_ARRAY:\n        options['index'] = index;\n        // Decode the size of the array document\n        var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n        // Set the array to the object\n        object[name] = BSON.deserialize(buffer, options, true);\n        // Adjust the index\n        index = index + objectSize;\n        break;\n      case BSON.BSON_DATA_OBJECT:\n        options['index'] = index;\n        // Decode the size of the object document\n        var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n        // Set the array to the object\n        object[name] = BSON.deserialize(buffer, options, false);\n        // Adjust the index\n        index = index + objectSize;\n        break;\n      case BSON.BSON_DATA_REGEXP:\n        // Create the regexp\n        var source = readCStyleString();\n        var regExpOptions = readCStyleString();\n        // For each option add the corresponding one for javascript\n        var optionsArray = new Array(regExpOptions.length);\n\n        // Parse options\n        for(var i = 0; i < regExpOptions.length; i++) {\n          switch(regExpOptions[i]) {\n            case 'm':\n              optionsArray[i] = 'm';\n              break;\n            case 's':\n              optionsArray[i] = 'g';\n              break;\n            case 'i':\n              optionsArray[i] = 'i';\n              break;\n          }\n        }\n\n        object[name] = new RegExp(source, optionsArray.join(''));\n        break;\n      case BSON.BSON_DATA_LONG:\n        // Unpack the low and high bits\n        var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Create long object\n        var long = new Long(lowBits, highBits);\n        // Promote the long if possible\n        if(promoteLongs) {\n          object[name] = long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG) ? long.toNumber() : long;\n        } else {\n          object[name] = long;\n        }\n        break;\n      case BSON.BSON_DATA_SYMBOL:\n        // Read the content of the field\n        var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Add string to object\n        object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));\n        // Update parse index position\n        index = index + stringSize;\n        break;\n      case BSON.BSON_DATA_TIMESTAMP:\n        // Unpack the low and high bits\n        var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Set the object\n        object[name] = new Timestamp(lowBits, highBits);\n        break;\n      case BSON.BSON_DATA_MIN_KEY:\n        // Parse the object\n        object[name] = new MinKey();\n        break;\n      case BSON.BSON_DATA_MAX_KEY:\n        // Parse the object\n        object[name] = new MaxKey();\n        break;\n      case BSON.BSON_DATA_CODE:\n        // Read the content of the field\n        var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Function string\n        var functionString = supportsBuffer && Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);\n\n        // If we are evaluating the functions\n        if(evalFunctions) {\n          // Contains the value we are going to set\n          var value = null;\n          // If we have cache enabled let's look for the md5 of the function in the cache\n          if(cacheFunctions) {\n            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n            // Got to do this to avoid V8 deoptimizing the call due to finding eval\n            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n          } else {\n            // Set directly\n            object[name] = isolateEval(functionString);\n          }\n        } else {\n          object[name]  = new Code(functionString, {});\n        }\n\n        // Update parse index position\n        index = index + stringSize;\n        break;\n      case BSON.BSON_DATA_CODE_W_SCOPE:\n        // Read the content of the field\n        var totalSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;\n        // Javascript function\n        var functionString = supportsBuffer && Buffer.isBuffer(buffer) ? buffer.toString('utf8', index, index + stringSize - 1) : convertUint8ArrayToUtf8String(buffer, index, index + stringSize - 1);\n        // Update parse index position\n        index = index + stringSize;\n        // Parse the element\n        options['index'] = index;\n        // Decode the size of the object document\n        var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;\n        // Decode the scope object\n        var scopeObject = BSON.deserialize(buffer, options, false);\n        // Adjust the index\n        index = index + objectSize;\n\n        // If we are evaluating the functions\n        if(evalFunctions) {\n          // Contains the value we are going to set\n          var value = null;\n          // If we have cache enabled let's look for the md5 of the function in the cache\n          if(cacheFunctions) {\n            var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n            // Got to do this to avoid V8 deoptimizing the call due to finding eval\n            object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n          } else {\n            // Set directly\n            object[name] = isolateEval(functionString);\n          }\n\n          // Set the scope on the object\n          object[name].scope = scopeObject;\n        } else {\n          object[name]  = new Code(functionString, scopeObject);\n        }\n\n        // Add string to object\n        break;\n    }\n  }\n\n  // Check if we have a db ref object\n  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);\n\n  // Return the final objects\n  return object;\n}\n\n/**\n * Check if key name is valid.\n *\n * @ignore\n * @api private\n */\nBSON.checkKey = function checkKey (key, dollarsAndDotsOk) {\n  if (!key.length) return;\n  // Check if we have a legal key for the object\n  if (!!~key.indexOf(\"\\x00\")) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error(\"key \" + key + \" must not contain null bytes\");\n  }\n  if (!dollarsAndDotsOk) {\n    if('$' == key[0]) {\n      throw Error(\"key \" + key + \" must not start with '$'\");\n    } else if (!!~key.indexOf('.')) {\n      throw Error(\"key \" + key + \" must not contain '.'\");\n    }\n  }\n};\n\n/**\n * Deserialize data as BSON.\n *\n * Options\n *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.\n *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse.\n *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.\n *\n * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @param {Boolean} [isArray] ignore used for recursive parsing.\n * @return {Object} returns the deserialized Javascript Object.\n * @api public\n */\nBSON.prototype.deserialize = function(data, options) {\n  return BSON.deserialize(data, options);\n}\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * Options\n *  - **evalFunctions** {Boolean, default:false}, evaluate functions in the BSON document scoped to the object deserialized.\n *  - **cacheFunctions** {Boolean, default:false}, cache evaluated functions for reuse.\n *  - **cacheFunctionsCrc32** {Boolean, default:false}, use a crc32 code for caching, otherwise use the string of the function.\n *\n * @param {Buffer} data the buffer containing the serialized set of BSON documents.\n * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n * @param {Number} numberOfDocuments number of documents to deserialize.\n * @param {Array} documents an array where to store the deserialized documents.\n * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n * @api public\n */\nBSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n  return BSON.deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options);\n}\n\n/**\n * Serialize a Javascript object.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} checkKeys the serializer will check if keys are valid.\n * @param {Boolean} asBuffer return the serialized object as a Buffer object **(ignore)**.\n * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**.\n * @return {Buffer} returns the Buffer object containing the serialized object.\n * @api public\n */\nBSON.prototype.serialize = function(object, checkKeys, asBuffer, serializeFunctions) {\n  return BSON.serialize(object, checkKeys, asBuffer, serializeFunctions);\n}\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param {Object} object the Javascript object to calculate the BSON byte size for.\n * @param {Boolean} [serializeFunctions] serialize all functions in the object **(default:false)**.\n * @return {Number} returns the number of bytes the BSON object will take up.\n * @api public\n */\nBSON.prototype.calculateObjectSize = function(object, serializeFunctions) {\n  return BSON.calculateObjectSize(object, serializeFunctions);\n}\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} checkKeys the serializer will check if keys are valid.\n * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n * @param {Number} index the index in the buffer where we wish to start serializing into.\n * @param {Boolean} serializeFunctions serialize the javascript functions **(default:false)**.\n * @return {Number} returns the new write index in the Buffer.\n * @api public\n */\nBSON.prototype.serializeWithBufferAndIndex = function(object, checkKeys, buffer, startIndex, serializeFunctions) {\n  return BSON.serializeWithBufferAndIndex(object, checkKeys, buffer, startIndex, serializeFunctions);\n}\n\n/**\n * @ignore\n * @api private\n */\nmodule.exports = BSON;\nmodule.exports.Code = Code;\nmodule.exports.Symbol = Symbol;\nmodule.exports.BSON = BSON;\nmodule.exports.DBRef = DBRef;\nmodule.exports.Binary = Binary;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.Long = Long;\nmodule.exports.Timestamp = Timestamp;\nmodule.exports.Double = Double;\nmodule.exports.MinKey = MinKey;\nmodule.exports.MaxKey = MaxKey;\n"]}