{"version":3,"sources":["faster_bson.js"],"names":[],"mappings":"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","file":"faster_bson-compiled.js","sourcesContent":["/// reduced to ~ 410 LOCs (parser only 300 vs. 1400+) with (some, needed) BSON classes \"inlined\".\n/// Compare ~ 4,300 (22KB vs. 157KB) in browser build at: https://github.com/mongodb/js-bson/blob/master/browser_build/bson.js\n\nmodule.exports.calculateObjectSize = calculateObjectSize;\n\nfunction calculateObjectSize(object) {\n    var totalLength = (4 + 1);      /// handles the obj.length prefix + terminating '0' ?!\n    for(var key in object) {        /// looks like it handles arrays under the same for...in loop!?\n      totalLength += calculateElement(key, object[key])\n    }\n    return totalLength;\n}\n\nfunction calculateElement(name, value) {\n    var len = 1;                                /// always starting with 1 for the data type byte!\n    if (name) len += Buffer.byteLength(name, 'utf8') + 1;   /// cstring: name + '0' termination\n\n    if (value === undefined || value === null) return len;  /// just the type byte plus name cstring\n    switch( value.constructor ) {      /// removed all checks 'isBuffer' if Node.js Buffer class is present!?\n\n        case ObjectID:          /// we want these sorted from most common case to least common/deprecated;\n            return len + 12;\n        case String:\n            return len + 4 + Buffer.byteLength(value, 'utf8') +1; ///\n        case Number:\n            if (Math.floor(value) === value) {  /// case: integer; pos.# more common, '&&' stops if 1st fails!\n                if ( value <= 2147483647 && value >= -2147483647 ) // 32 bit\n                    return len + 4;\n                else return len + 8;    /// covers Long-ish JS integers as Longs!\n            } else return len + 8;      /// 8+1 --- covers Double & std. float\n        case Boolean:\n            return len + 1;\n\n        case Array:\n        case Object:\n            return len + calculateObjectSize(value);\n\n        case Buffer:   ///  replaces the entire Binary class!\n            return len + 4 + value.length + 1;\n\n        case Regex:  /// these are handled as strings by serializeFast() later, hence 'gim' opts = 3 + 1 chars\n            return len + Buffer.byteLength(value.source, 'utf8') + 1\n                + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) +1;\n        case Date:\n        case Long:\n        case Timestamp:\n        case Double:\n            return len + 8;\n\n        case MinKey:\n        case MaxKey:\n            return len;     /// these two return the type byte and name cstring only!\n    }\n    return 0;\n}\n\nmodule.exports.serializeFast = serializeFast;\nmodule.exports.serialize = function(object, checkKeys, asBuffer, serializeFunctions, index) {\n  var buffer = new Buffer(calculateObjectSize(object));\n  return serializeFast(object, checkKeys, buffer, 0);\n}\n\nfunction serializeFast(object, checkKeys, buffer, i) {   /// set checkKeys = false in query(..., options object to save performance IFF you're certain your keys are safe/system-set!\n    var size = buffer.length;\n    buffer[i++] = size & 0xff; buffer[i++] = (size >> 8) & 0xff;   /// these get overwritten later!\n    buffer[i++] = (size >> 16) & 0xff; buffer[i++] = (size >> 24) & 0xff;\n\n    if (object.constructor === Array) {     /// any need to checkKeys here?!? since we're doing for rather than for...in, should be safe from extra (non-numeric) keys added to the array?!\n        for(var j = 0; j < object.length; j++) {\n            i = packElement(j.toString(), object[j], checkKeys, buffer, i);\n        }\n    } else {   /// checkKeys is needed if any suspicion of end-user key tampering/\"injection\" (a la SQL)\n        for(var key in object) {    /// mostly there should never be direct access to them!?\n            if (checkKeys && (key.indexOf('\\x00') >= 0 || key === '$where') ) {  /// = \"no script\"?!; could add back key.indexOf('$') or maybe check for 'eval'?!\n/// took out: || key.indexOf('.') >= 0...  Don't we allow dot notation queries?!\n                console.log('checkKeys error: ');\n                return new Error('Illegal object key!');\n            }\n            i = packElement(key, object[key], checkKeys, buffer, i);  /// checkKeys pass needed for recursion!\n        }\n    }\n    buffer[i++] = 0;   /// write terminating zero; !we do NOT -1 the index increase here as original does!\n    return i;\n}\n\nfunction packElement(name, value, checkKeys, buffer, i) {    /// serializeFunctions removed! checkKeys needed for Array & Object cases pass through (calling serializeFast recursively!)\n    if (value === undefined || value === null){\n        buffer[i++] = 10;                                       /// = BSON.BSON_DATA_NULL;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;    /// buffer.write(...) returns bytesWritten!\n        return i;\n    }\n    switch(value.constructor) {\n\n    case ObjectID:\n        buffer[i++] = 7;   /// = BSON.BSON_DATA_OID;\n        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;\n///     i += buffer.write(value.id, i, 'binary');  ///  OLD: writes a String to a Buffer; 'binary' deprecated!!\n        value.id.copy(buffer, i);  /// NEW ObjectID version has this.id = Buffer at the ready!\n        return i += 12;\n\n    case String:\n        buffer[i++] = 2;    ///  = BSON.BSON_DATA_STRING;\n        i += buffer.write(name, i, 'utf8');     buffer[i++] = 0;\n\n        var size = Buffer.byteLength(value) + 1;  /// includes the terminating '0'!?\n        buffer[i++] = size & 0xff; buffer[i++] = (size >> 8) & 0xff;\n        buffer[i++] = (size >> 16) & 0xff; buffer[i++] = (size >> 24) & 0xff;\n\n        i += buffer.write(value, i, 'utf8');    buffer[i++] = 0;\n        return i;\n\n    case Number:\n        if ( ~~(value) === value) {     /// double-Tilde is equiv. to Math.floor(value)\n            if ( value <= 2147483647 && value >= -2147483647){ /// = BSON.BSON_INT32_MAX / MIN asf.\n                buffer[i++] = 16;   /// = BSON.BSON_DATA_INT;\n                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n                buffer[i++] = value & 0xff; buffer[i++] = (value >> 8) & 0xff;\n                buffer[i++] = (value >> 16) & 0xff; buffer[i++] = (value >> 24) & 0xff;\n\n// Else large-ish JS int!? to Long!?\n            } else {  /// if (value <= BSON.JS_INT_MAX && value >= BSON.JS_INT_MIN){ /// 9007199254740992 asf.\n                buffer[i++] = 18;   /// = BSON.BSON_DATA_LONG;\n                i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n                var lowBits = ( value % 4294967296 ) | 0, highBits = ( value / 4294967296 ) | 0;\n\n                buffer[i++] = lowBits & 0xff;           buffer[i++] = (lowBits >> 8) & 0xff;\n                buffer[i++] = (lowBits >> 16) & 0xff;   buffer[i++] = (lowBits >> 24) & 0xff;\n                buffer[i++] = highBits & 0xff;          buffer[i++] = (highBits >> 8) & 0xff;\n                buffer[i++] = (highBits >> 16) & 0xff;  buffer[i++] = (highBits >> 24) & 0xff;\n            }\n        } else {    /// we have a float / Double\n            buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;\n            i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n/// OLD:    writeIEEE754(buffer, value, i, 'little', 52, 8);\n            buffer.writeDoubleLE(value, i);     i += 8;\n        }\n        return i;\n\n    case Boolean:\n        buffer[i++] = 8;    /// = BSON.BSON_DATA_BOOLEAN;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        buffer[i++] = value ? 1 : 0;\n        return i;\n\n    case Array:\n    case Object:\n        buffer[i++] = value.constructor === Array ? 4 : 3; /// = BSON.BSON_DATA_ARRAY / _OBJECT;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n\n\t    var endIndex = serializeFast(value, checkKeys, buffer, i); /// + 4); no longer needed b/c serializeFast writes a temp 4 bytes for length\n        var size = endIndex - i;\n        buffer[i++] = size & 0xff;          buffer[i++] = (size >> 8) & 0xff;\n        buffer[i++] = (size >> 16) & 0xff;  buffer[i++] = (size >> 24) & 0xff;\n        return endIndex;\n\n    /// case Binary:        /// is basically identical unless special/deprecated options!\n    case Buffer:            /// solves ALL of our Binary needs without the BSON.Binary class!?\n        buffer[i++] = 5;    /// = BSON.BSON_DATA_BINARY;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        var size = value.length;\n        buffer[i++] = size & 0xff;          buffer[i++] = (size >> 8) & 0xff;\n        buffer[i++] = (size >> 16) & 0xff;  buffer[i++] = (size >> 24) & 0xff;\n\n        buffer[i++] = 0;        /// write BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n        value.copy(buffer, i);  ///, 0, size); << defaults to sourceStart=0, sourceEnd=sourceBuffer.length);\n        i += size;\n        return i;\n\n    case RegExp:\n        buffer[i++] = 11;   /// = BSON.BSON_DATA_REGEXP;\n        i += buffer.write(name, i, 'utf8');         buffer[i++] = 0;\n        i += buffer.write(value.source, i, 'utf8'); buffer[i++] = 0x00;\n\n        if (value.global) buffer[i++] = 0x73;        // s = 'g' for JS Regex!\n        if (value.ignoreCase) buffer[i++] = 0x69;    // i\n        if (value.multiline) buffer[i++] = 0x6d;     // m\n        buffer[i++] = 0x00;\n        return i;\n\n    case Date:\n        buffer[i++] = 9;    /// = BSON.BSON_DATA_DATE;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        var millis = value.getTime();\n        var lowBits = ( millis % 4294967296 ) | 0, highBits = ( millis / 4294967296 ) | 0;\n\n        buffer[i++] = lowBits & 0xff;           buffer[i++] = (lowBits >> 8) & 0xff;\n        buffer[i++] = (lowBits >> 16) & 0xff;   buffer[i++] = (lowBits >> 24) & 0xff;\n        buffer[i++] = highBits & 0xff;          buffer[i++] = (highBits >> 8) & 0xff;\n        buffer[i++] = (highBits >> 16) & 0xff;  buffer[i++] = (highBits >> 24) & 0xff;\n        return i;\n\n    case Long:\n    case Timestamp:\n        buffer[i++] = value.constructor === Long ? 18 : 17; /// = BSON.BSON_DATA_LONG / _TIMESTAMP\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        var lowBits = value.getLowBits(), highBits = value.getHighBits();\n\n        buffer[i++] = lowBits & 0xff;           buffer[i++] = (lowBits >> 8) & 0xff;\n        buffer[i++] = (lowBits >> 16) & 0xff;   buffer[i++] = (lowBits >> 24) & 0xff;\n        buffer[i++] = highBits & 0xff;          buffer[i++] = (highBits >> 8) & 0xff;\n        buffer[i++] = (highBits >> 16) & 0xff;  buffer[i++] = (highBits >> 24) & 0xff;\n        return i;\n\n    case Double:\n        buffer[i++] = 1;    /// = BSON.BSON_DATA_NUMBER;\n        i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n/// OLD: writeIEEE754(buffer, value, i, 'little', 52, 8);    i += 8;\n        buffer.writeDoubleLE(value, i);     i += 8;\n        return i\n\n    case MinKey:    /// = BSON.BSON_DATA_MINKEY;\n        buffer[i++] = 127; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        return i;\n    case MaxKey:    /// = BSON.BSON_DATA_MAXKEY;\n        buffer[i++] = 255; i += buffer.write(name, i, 'utf8'); buffer[i++] = 0;\n        return i;\n\n    } /// end of switch\n    return i;   /// ?! If no value to serialize\n}\n\n\nmodule.exports.deserializeFast = deserializeFast;\n\nfunction deserializeFast(buffer, i, isArray){   //// , options, isArray) {       //// no more options!\n    if (buffer.length < 5) return new Error('Corrupt bson message < 5 bytes long'); /// from 'throw'\n    var elementType, tempindex = 0, name;\n    var string, low, high;              /// = lowBits / highBits\n                                        /// using 'i' as the index to keep the lines shorter:\n    i || ( i = 0 );  /// for parseResponse it's 0; set to running index in deserialize(object/array) recursion\n    var object = isArray ? [] : {};         /// needed for type ARRAY recursion later!\n    var size = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n    if(size < 5 || size > buffer.length) return new Error('Corrupt BSON message');\n/// 'size' var was not used by anything after this, so we can reuse it\n\n    while(true) {                           // While we have more left data left keep parsing\n        elementType = buffer[i++];          // Read the type\n        if (elementType === 0) break;       // If we get a zero it's the last byte, exit\n\n        tempindex = i;  /// inlined readCStyleString & removed extra i<buffer.length check slowing EACH loop!\n        while( buffer[tempindex] !== 0x00 ) tempindex++;  /// read ahead w/out changing main 'i' index\n        if (tempindex >= buffer.length) return new Error('Corrupt BSON document: illegal CString')\n        name = buffer.toString('utf8', i, tempindex);\n        i = tempindex + 1;               /// Update index position to after the string + '0' termination\n\n        switch(elementType) {\n\n        case 7:     /// = BSON.BSON_DATA_OID:\n            var buf = new Buffer(12);\n            buffer.copy(buf, 0, i, i += 12 );   /// copy 12 bytes from the current 'i' offset into fresh Buffer\n            object[name] = new ObjectID(buf);   ///... & attach to the new ObjectID instance\n            break;\n\n        case 2:     /// = BSON.BSON_DATA_STRING:\n            size = buffer[i++] | buffer[i++] <<8 | buffer[i++] <<16 | buffer[i++] <<24;\n            object[name] = buffer.toString('utf8', i, i += size -1 );\n            i++;        break;          /// need to get the '0' index \"tick-forward\" back!\n\n        case 16:    /// = BSON.BSON_DATA_INT:        // Decode the 32bit value\n            object[name] = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;    break;\n\n        case 1:     /// = BSON.BSON_DATA_NUMBER:     // Decode the double value\n            object[name] = buffer.readDoubleLE(i);   /// slightly faster depending on dec.points; a LOT cleaner\n            /// OLD: object[name] = readIEEE754(buffer, i, 'little', 52, 8);\n            i += 8;     break;\n\n        case 8:     /// = BSON.BSON_DATA_BOOLEAN:\n            object[name] = buffer[i++] == 1;    break;\n\n        case 6:     /// = BSON.BSON_DATA_UNDEFINED:     /// deprecated\n        case 10:    /// = BSON.BSON_DATA_NULL:\n            object[name] = null;     break;\n\n        case 4:     /// = BSON.BSON_DATA_ARRAY\n            size = buffer[i] | buffer[i+1] <<8 | buffer[i+2] <<16 | buffer[i+3] <<24;  /// NO 'i' increment since the size bytes are reread during the recursion!\n            object[name] = deserializeFast(buffer, i, true );  /// pass current index & set isArray = true\n            i += size;      break;\n        case 3:     /// = BSON.BSON_DATA_OBJECT:\n            size = buffer[i] | buffer[i+1] <<8 | buffer[i+2] <<16 | buffer[i+3] <<24;\n            object[name] = deserializeFast(buffer, i, false );          /// isArray = false => Object\n            i += size;      break;\n\n        case 5:     /// = BSON.BSON_DATA_BINARY:             // Decode the size of the binary blob\n            size = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            buffer[i++];             /// Skip, as we assume always default subtype, i.e. 0!\n            object[name] = buffer.slice(i, i += size);  /// creates a new Buffer \"slice\" view of the same memory!\n            break;\n\n        case 9:     /// = BSON.BSON_DATA_DATE:      /// SEE notes below on the Date type vs. other options...\n            low  = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            high = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            object[name] = new Date( high * 4294967296 + (low < 0 ? low + 4294967296 : low) );  break;\n\n        case 18:    /// = BSON.BSON_DATA_LONG:  /// usage should be somewhat rare beyond parseResponse() -> cursorId, where it is handled inline, NOT as part of deserializeFast(returnedObjects); get lowBits, highBits:\n            low  = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            high = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n\n            size = high * 4294967296 + (low < 0 ? low + 4294967296 : low);      /// from long.toNumber()\n            if (size < JS_INT_MAX && size > JS_INT_MIN) object[name] = size;    /// positive # more likely!\n            else object[name] = new Long(low, high);    break;\n\n        case 127:   /// = BSON.BSON_DATA_MIN_KEY:   /// do we EVER actually get these BACK from MongoDB server?!\n            object[name] = new MinKey();     break;\n        case 255:   /// = BSON.BSON_DATA_MAX_KEY:\n            object[name] = new MaxKey();     break;\n\n        case 17:    /// = BSON.BSON_DATA_TIMESTAMP:   /// somewhat obscure internal BSON type; MongoDB uses it for (pseudo) high-res time timestamp (past millisecs precision is just a counter!) in the Oplog ts: field, etc.\n            low  = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            high = buffer[i++] | buffer[i++] << 8 | buffer[i++] << 16 | buffer[i++] << 24;\n            object[name] = new Timestamp(low, high);     break;\n\n///        case 11:    /// = RegExp is skipped; we should NEVER be getting any from the MongoDB server!?\n        }   /// end of switch(elementType)\n    }   /// end of while(1)\n    return object;  // Return the finalized object\n}\n\n\nfunction MinKey() { this._bsontype = 'MinKey'; }  /// these are merely placeholders/stubs to signify the type!?\n\nfunction MaxKey() { this._bsontype = 'MaxKey'; }\n\nfunction Long(low, high) {\n    this._bsontype = 'Long';\n    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.\n}\nLong.prototype.getLowBits = function(){ return this.low_; }\nLong.prototype.getHighBits = function(){ return this.high_; }\n\nLong.prototype.toNumber = function(){\n    return this.high_ * 4294967296 + (this.low_ < 0 ? this.low_ + 4294967296 : this.low_);\n}\nLong.fromNumber = function(num){\n    return new Long(num % 4294967296, num / 4294967296);    /// |0 is forced in the constructor!\n}\nfunction Double(value) {\n    this._bsontype = 'Double';\n    this.value = value;\n}\nfunction Timestamp(low, high) {\n    this._bsontype = 'Timestamp';\n    this.low_ = low | 0;    this.high_ = high | 0;          /// force into 32 signed bits.\n}\nTimestamp.prototype.getLowBits = function(){ return this.low_; }\nTimestamp.prototype.getHighBits = function(){ return this.high_; }\n\n///////////////////////////////  ObjectID /////////////////////////////////\n/// machine & proc IDs stored as 1 string, b/c Buffer shouldn't be held for long periods (could use SlowBuffer?!)\n\nvar MACHINE = parseInt(Math.random() * 0xFFFFFF, 10);\nvar PROCESS = process.pid % 0xFFFF;\nvar MACHINE_AND_PROC = encodeIntBE(MACHINE, 3) + encodeIntBE(PROCESS, 2); /// keep as ONE string, ready to go.\n\nfunction encodeIntBE(data, bytes){  /// encode the bytes to a string\n    var result = '';\n    if (bytes >= 4){ result += String.fromCharCode(Math.floor(data / 0x1000000)); data %= 0x1000000; }\n    if (bytes >= 3){ result += String.fromCharCode(Math.floor(data / 0x10000)); data %= 0x10000; }\n    if (bytes >= 2){ result += String.fromCharCode(Math.floor(data / 0x100)); data %= 0x100; }\n    result += String.fromCharCode(Math.floor(data));\n    return result;\n}\nvar _counter = ~~(Math.random() * 0xFFFFFF);    /// double-tilde is equivalent to Math.floor()\nvar checkForHex = new RegExp('^[0-9a-fA-F]{24}$');\n\nfunction ObjectID(id) {\n    this._bsontype = 'ObjectID';\n    if (!id){  this.id = createFromScratch();     /// base case, DONE.\n    } else {\n        if (id.constructor === Buffer){\n            this.id = id;  /// case of\n        } else if (id.constructor === String) {\n            if ( id.length === 24 && checkForHex.test(id) ) {\n                this.id = new Buffer(id, 'hex');\n            } else {\n                this.id = new Error('Illegal/faulty Hexadecimal string supplied!');     /// changed from 'throw'\n            }\n        } else if (id.constructor === Number) {\n            this.id = createFromTime(id);    /// this is what should be the only interface for this!?\n        }\n    }\n}\nfunction createFromScratch() {\n    var buf = new Buffer(12), i = 0;\n    var ts = ~~(Date.now()/1000);    /// 4 bytes timestamp in seconds, BigEndian notation!\n    buf[i++] = (ts >> 24) & 0xFF;    buf[i++] = (ts >> 16) & 0xFF;\n    buf[i++] = (ts >> 8) & 0xFF;     buf[i++] = (ts) & 0xFF;\n\n    buf.write(MACHINE_AND_PROC, i, 5, 'utf8');  i += 5;  /// write 3 bytes + 2 bytes MACHINE_ID and PROCESS_ID\n    _counter = ++_counter % 0xFFFFFF;       /// 3 bytes internal _counter for subsecond resolution; BigEndian\n    buf[i++] = (_counter >> 16) & 0xFF;\n    buf[i++] = (_counter >> 8) & 0xFF;\n    buf[i++] = (_counter) & 0xFF;\n    return buf;\n}\nfunction createFromTime(ts) {\n    ts || ( ts = ~~(Date.now()/1000) );     /// 4 bytes timestamp in seconds only\n    var buf = new Buffer(12), i = 0;\n    buf[i++] = (ts >> 24) & 0xFF;    buf[i++] = (ts >> 16) & 0xFF;\n    buf[i++] = (ts >> 8) & 0xFF;     buf[i++] = (ts) & 0xFF;\n\n    for (;i < 12; ++i) buf[i] = 0x00;       /// indeces 4 through 11 (8 bytes) get filled up with nulls\n    return buf;\n}\nObjectID.prototype.toHexString = function toHexString() {\n    return this.id.toString('hex');\n}\nObjectID.prototype.getTimestamp = function getTimestamp() {\n    return this.id.readUIntBE(0, 4);\n}\nObjectID.prototype.getTimestampDate = function getTimestampDate() {\n    var ts = new Date();\n    ts.setTime(this.id.readUIntBE(0, 4) * 1000);\n    return ts;\n}\nObjectID.createPk = function createPk () {  ///?override if a PrivateKey factory w/ unique factors is warranted?!\n  return new ObjectID();\n}\nObjectID.prototype.toJSON = function toJSON() {\n    return \"ObjectID('\" +this.id.toString('hex')+ \"')\";\n}\n\n/// module.exports.BSON = BSON;         /// not needed anymore!? exports.Binary = Binary;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.MinKey = MinKey;\nmodule.exports.MaxKey = MaxKey;\nmodule.exports.Long = Long;    /// ?! we really don't want to do the complicated Long math anywhere for now!?\n\n//module.exports.Double = Double;\n//module.exports.Timestamp = Timestamp;\n"]}