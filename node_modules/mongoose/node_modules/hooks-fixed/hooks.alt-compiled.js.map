{"version":3,"sources":["hooks.alt.js"],"names":[],"mappings":"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","file":"hooks.alt-compiled.js","sourcesContent":["/**\n * Hooks are useful if we want to add a method that automatically has `pre` and `post` hooks.\n * For example, it would be convenient to have `pre` and `post` hooks for `save`.\n * _.extend(Model, mixins.hooks);\n * Model.hook('save', function () {\n *  console.log('saving');\n * });\n * Model.pre('save', function (next, done) {\n *  console.log('about to save');\n *  next();\n * });\n * Model.post('save', function (next, done) {\n *  console.log('saved');\n *  next();\n * });\n *\n * var m = new Model();\n * m.save();\n * // about to save\n * // saving\n * // saved \n */\n\n// TODO Add in pre and post skipping options\nmodule.exports = {\n  /**\n   *  Declares a new hook to which you can add pres and posts\n   *  @param {String} name of the function\n   *  @param {Function} the method\n   *  @param {Function} the error handler callback\n   */\n  hook: function (name, fn, err) {\n    if (arguments.length === 1 && typeof name === 'object') {\n      for (var k in name) { // `name` is a hash of hookName->hookFn\n        this.hook(k, name[k]);\n      }\n      return;\n    }\n\n    if (!err) err = fn;\n\n    var proto = this.prototype || this\n      , pres = proto._pres = proto._pres || {}\n      , posts = proto._posts = proto._posts || {};\n    pres[name] = pres[name] || [];\n    posts[name] = posts[name] || [];\n\n    function noop () {}\n\n    proto[name] = function () {\n      var self = this\n        , pres = this._pres[name]\n        , posts = this._posts[name]\n        , numAsyncPres = 0\n        , hookArgs = [].slice.call(arguments)\n        , preChain = pres.map( function (pre, i) {\n            var wrapper = function () {\n              if (arguments[0] instanceof Error)\n                return err(arguments[0]);\n              if (numAsyncPres) {\n                // arguments[1] === asyncComplete\n                if (arguments.length)\n                  hookArgs = [].slice.call(arguments, 2);\n                pre.apply(self, \n                  [ preChain[i+1] || allPresInvoked, \n                    asyncComplete\n                  ].concat(hookArgs)\n                );\n              } else {\n                if (arguments.length)\n                  hookArgs = [].slice.call(arguments);\n                pre.apply(self,\n                  [ preChain[i+1] || allPresDone ].concat(hookArgs));\n              }\n            }; // end wrapper = function () {...\n            if (wrapper.isAsync = pre.isAsync)\n              numAsyncPres++;\n            return wrapper;\n          }); // end posts.map(...)\n      function allPresInvoked () {\n        if (arguments[0] instanceof Error)\n          err(arguments[0]);\n      }\n\n      function allPresDone () {\n        if (arguments[0] instanceof Error)\n          return err(arguments[0]);\n        if (arguments.length)\n          hookArgs = [].slice.call(arguments);\n        fn.apply(self, hookArgs);\n        var postChain = posts.map( function (post, i) {\n          var wrapper = function () {\n            if (arguments[0] instanceof Error)\n              return err(arguments[0]);\n            if (arguments.length)\n              hookArgs = [].slice.call(arguments);\n            post.apply(self,\n              [ postChain[i+1] || noop].concat(hookArgs));\n          }; // end wrapper = function () {...\n          return wrapper;\n        }); // end posts.map(...)\n        if (postChain.length) postChain[0]();\n      }\n\n      if (numAsyncPres) {\n        complete = numAsyncPres;\n        function asyncComplete () {\n          if (arguments[0] instanceof Error)\n            return err(arguments[0]);\n          --complete || allPresDone.call(this);\n        }\n      }\n      (preChain[0] || allPresDone)();\n    };\n\n    return this;\n  },\n\n  pre: function (name, fn, isAsync) {\n    var proto = this.prototype\n      , pres = proto._pres = proto._pres || {};\n    if (fn.isAsync = isAsync) {\n      this.prototype[name].numAsyncPres++;\n    }\n    (pres[name] = pres[name] || []).push(fn);\n    return this;\n  },\n  post: function (name, fn, isAsync) {\n    var proto = this.prototype\n      , posts = proto._posts = proto._posts || {};\n    (posts[name] = posts[name] || []).push(fn);\n    return this;\n  }\n};\n"]}