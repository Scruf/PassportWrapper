{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAjB;;AAEf,SAAS,QAAT,CAAmB,CAAnB,EAAsB;AACpB,SAAO,YAAY,OAAO,CAAP,IACZ,qBAAqB,SAAS,IAAT,CAAc,CAAd,CAArB,CAFa;CAAtB;;AAKA,OAAO,OAAP,GAAiB,UAAU,UAAU,MAAV,EAAkB;AAC3C,MAAI,CAAC,SAAS,MAAT,CAAD,EAAmB;AACrB,UAAM,IAAI,SAAJ,CAAc,cAAd,CAAN,CADqB;GAAvB;;AAIA,MAAI,QAAQ,EAAR,CALuC;AAM3C,MAAI,OAAO,MAAP,EAAe,MAAM,IAAN,CAAW,GAAX,EAAnB;AACA,MAAI,OAAO,SAAP,EAAkB,MAAM,IAAN,CAAW,GAAX,EAAtB;AACA,MAAI,OAAO,UAAP,EAAmB,MAAM,IAAN,CAAW,GAAX,EAAvB;AACA,SAAO,IAAI,MAAJ,CAAW,OAAO,MAAP,EAAe,MAAM,IAAN,CAAW,EAAX,CAA1B,CAAP,CAT2C;CAAlB","file":"index-compiled.js","sourcesContent":["\nvar toString = Object.prototype.toString;\n\nfunction isRegExp (o) {\n  return 'object' == typeof o\n      && '[object RegExp]' == toString.call(o);\n}\n\nmodule.exports = exports = function (regexp) {\n  if (!isRegExp(regexp)) {\n    throw new TypeError('Not a RegExp');\n  }\n\n  var flags = [];\n  if (regexp.global) flags.push('g');\n  if (regexp.multiline) flags.push('m');\n  if (regexp.ignoreCase) flags.push('i');\n  return new RegExp(regexp.source, flags.join(''));\n}\n\n"]}