{"version":3,"sources":["apm.js"],"names":[],"mappings":"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","file":"apm-compiled.js","sourcesContent":["var EventEmitter = require('events').EventEmitter,\n  inherits = require('util').inherits;\n\n// Get prototypes\nvar AggregationCursor = require('./aggregation_cursor'),\n  CommandCursor = require('./command_cursor'),\n  OrderedBulkOperation = require('./bulk/ordered').OrderedBulkOperation,\n  UnorderedBulkOperation = require('./bulk/unordered').UnorderedBulkOperation,\n  GridStore = require('./gridfs/grid_store'),\n  Server = require('./server'),\n  ReplSet = require('./replset'),\n  Mongos = require('./mongos'),\n  Cursor = require('./cursor'),\n  Collection = require('./collection'),\n  Db = require('./db'),\n  Admin = require('./admin');\n\nvar basicOperationIdGenerator = {\n  operationId: 1,\n\n  next: function() {\n    return this.operationId++;\n  }\n}\n\nvar basicTimestampGenerator = {\n  current: function() {\n    return new Date().getTime();\n  },\n\n  duration: function(start, end) {\n    return end - start;\n  }\n}\n\nvar senstiveCommands = ['authenticate', 'saslStart', 'saslContinue', 'getnonce',\n  'createUser', 'updateUser', 'copydbgetnonce', 'copydbsaslstart', 'copydb'];\n\nvar Instrumentation = function(core, options, callback) {\n  options = options || {};\n\n  // Optional id generators\n  var operationIdGenerator = options.operationIdGenerator || basicOperationIdGenerator;\n  // Optional timestamp generator\n  var timestampGenerator = options.timestampGenerator || basicTimestampGenerator;\n  // Extend with event emitter functionality\n  EventEmitter.call(this);\n\n  // Contains all the instrumentation overloads\n  this.overloads = [];\n\n  // ---------------------------------------------------------\n  //\n  // Instrument prototype\n  //\n  // ---------------------------------------------------------\n\n  var instrumentPrototype = function(callback) {\n    var instrumentations = []\n\n    // Classes to support\n    var classes = [GridStore, OrderedBulkOperation, UnorderedBulkOperation,\n      CommandCursor, AggregationCursor, Cursor, Collection, Db];\n\n    // Add instrumentations to the available list\n    for(var i = 0; i < classes.length; i++) {\n      if(classes[i].define) {\n        instrumentations.push(classes[i].define.generate());\n      }\n    }\n\n    // Return the list of instrumentation points\n    callback(null, instrumentations);\n  }\n\n  // Did the user want to instrument the prototype\n  if(typeof callback == 'function') {\n    instrumentPrototype(callback);\n  }\n\n  // ---------------------------------------------------------\n  //\n  // Server\n  //\n  // ---------------------------------------------------------\n\n  // Reference\n  var self = this;\n  // Names of methods we need to wrap\n  var methods = ['command', 'insert', 'update', 'remove'];\n  // Prototype\n  var proto = core.Server.prototype;\n  // Core server method we are going to wrap\n  methods.forEach(function(x) {\n    var func = proto[x];\n\n    // Add to overloaded methods\n    self.overloads.push({proto: proto, name:x, func:func});\n\n    // The actual prototype\n    proto[x] = function() {\n      var requestId = core.Query.nextRequestId();\n      // Get the aruments\n      var args = Array.prototype.slice.call(arguments, 0);\n      var ns = args[0];\n      var commandObj = args[1];\n      var options = args[2] || {};\n      var keys = Object.keys(commandObj);\n      var commandName = keys[0];\n      var db = ns.split('.')[0];\n\n      // Do we have a legacy insert/update/remove command\n      if(x == 'insert' && !this.lastIsMaster().maxWireVersion) {\n        commandName = 'insert';\n        // Get the collection\n        var col = ns.split('.');\n        col.shift();\n        col = col.join('.');\n\n        // Re-write the command\n        commandObj = {\n          insert: col, documents: commandObj\n        }\n\n        if(options.writeConcern && Object.keys(options.writeConcern).length > 0)  {\n          commandObj.writeConcern = options.writeConcern;\n        }\n\n        commandObj.ordered = options.ordered != undefined ? options.ordered : true;\n      } else if(x == 'update' && !this.lastIsMaster().maxWireVersion) {\n        commandName = 'update';\n\n        // Get the collection\n        var col = ns.split('.');\n        col.shift();\n        col = col.join('.');\n\n        // Re-write the command\n        commandObj = {\n          update: col, updates: commandObj\n        }\n\n        if(options.writeConcern && Object.keys(options.writeConcern).length > 0) {\n          commandObj.writeConcern = options.writeConcern;\n        }\n\n        commandObj.ordered = options.ordered != undefined ? options.ordered : true;\n      } else if(x == 'remove' && !this.lastIsMaster().maxWireVersion) {\n        commandName = 'delete';\n\n        // Get the collection\n        var col = ns.split('.');\n        col.shift();\n        col = col.join('.');\n\n        // Re-write the command\n        commandObj = {\n          delete: col, deletes: commandObj\n        }\n\n        if(options.writeConcern && Object.keys(options.writeConcern).length > 0) {\n          commandObj.writeConcern = options.writeConcern;\n        }\n\n        commandObj.ordered = options.ordered != undefined ? options.ordered : true;\n      } else if(x == 'insert' || x == 'update' || x == 'remove' && this.lastIsMaster().maxWireVersion >= 2) {\n        // Skip the insert/update/remove commands as they are executed as actual write commands in 2.6 or higher\n        return func.apply(this, args);\n      }\n\n      // Get the callback\n      var callback = args.pop();\n      // Set current callback operation id from the current context or create\n      // a new one\n      var ourOpId = callback.operationId || operationIdGenerator.next();\n\n      // Get a connection reference for this server instance\n      var connection = this.s.pool.get()\n\n      // Emit the start event for the command\n      var command = {\n        // Returns the command.\n        command: commandObj,\n        // Returns the database name.\n        databaseName: db,\n        // Returns the command name.\n        commandName: commandName,\n        // Returns the driver generated request id.\n        requestId: requestId,\n        // Returns the driver generated operation id.\n        // This is used to link events together such as bulk write operations. OPTIONAL.\n        operationId: ourOpId,\n        // Returns the connection id for the command. For languages that do not have this,\n        // this MUST return the driver equivalent which MUST include the server address and port.\n        // The name of this field is flexible to match the object that is returned from the driver.\n        connectionId: connection\n      };\n\n      // Filter out any sensitive commands\n      if(senstiveCommands.indexOf(commandName.toLowerCase())) {\n        command.commandObj = {};\n        command.commandObj[commandName] = true;\n      }\n\n      // Emit the started event\n      self.emit('started', command)\n\n      // Start time\n      var startTime = timestampGenerator.current();\n\n      // Push our handler callback\n      args.push(function(err, r) {\n        var endTime = timestampGenerator.current();\n        var command = {\n          duration: timestampGenerator.duration(startTime, endTime),\n          commandName: commandName,\n          requestId: requestId,\n          operationId: ourOpId,\n          connectionId: connection\n        };\n\n        // If we have an error\n        if(err || (r && r.result && r.result.ok == 0)) {\n          command.failure = err || r.result.writeErrors || r.result;\n\n          // Filter out any sensitive commands\n          if(senstiveCommands.indexOf(commandName.toLowerCase())) {\n            command.failure = {};\n          }\n\n          self.emit('failed', command);\n        } else if(commandObj && commandObj.writeConcern\n          && commandObj.writeConcern.w == 0) {\n          // If we have write concern 0\n          command.reply = {ok:1};\n          self.emit('succeeded', command);\n        } else {\n          command.reply = r && r.result ? r.result : r;\n\n          // Filter out any sensitive commands\n          if(senstiveCommands.indexOf(commandName.toLowerCase()) != -1) {\n            command.reply = {};\n          }\n\n          self.emit('succeeded', command);\n        }\n\n        // Return to caller\n        callback(err, r);\n      });\n\n      // Apply the call\n      func.apply(this, args);\n    }\n  });\n\n  // ---------------------------------------------------------\n  //\n  // Bulk Operations\n  //\n  // ---------------------------------------------------------\n\n  // Inject ourselves into the Bulk methods\n  var methods = ['execute'];\n  var prototypes = [\n    require('./bulk/ordered').Bulk.prototype,\n    require('./bulk/unordered').Bulk.prototype\n  ]\n\n  prototypes.forEach(function(proto) {\n    // Core server method we are going to wrap\n    methods.forEach(function(x) {\n      var func = proto[x];\n\n      // Add to overloaded methods\n      self.overloads.push({proto: proto, name:x, func:func});\n\n      // The actual prototype\n      proto[x] = function() {\n        var bulk = this;\n        // Get the aruments\n        var args = Array.prototype.slice.call(arguments, 0);\n        // Set an operation Id on the bulk object\n        this.operationId = operationIdGenerator.next();\n\n        // Get the callback\n        var callback = args.pop();\n        // If we have a callback use this\n        if(typeof callback == 'function') {\n          args.push(function(err, r) {\n            // Return to caller\n            callback(err, r);\n          });\n\n          // Apply the call\n          func.apply(this, args);\n        } else {\n          return func.apply(this, args);\n        }\n      }\n    });\n  });\n\n  // ---------------------------------------------------------\n  //\n  // Cursor\n  //\n  // ---------------------------------------------------------\n\n  // Inject ourselves into the Cursor methods\n  var methods = ['_find', '_getmore', '_killcursor'];\n  var prototypes = [\n    require('./cursor').prototype,\n    require('./command_cursor').prototype,\n    require('./aggregation_cursor').prototype\n  ]\n\n  // Command name translation\n  var commandTranslation = {\n    '_find': 'find', '_getmore': 'getMore', '_killcursor': 'killCursors', '_explain': 'explain'\n  }\n\n  prototypes.forEach(function(proto) {\n\n    // Core server method we are going to wrap\n    methods.forEach(function(x) {\n      var func = proto[x];\n\n      // Add to overloaded methods\n      self.overloads.push({proto: proto, name:x, func:func});\n\n      // The actual prototype\n      proto[x] = function() {\n        var cursor = this;\n        var requestId = core.Query.nextRequestId();\n        var ourOpId = operationIdGenerator.next();\n        var parts = this.ns.split('.');\n        var db = parts[0];\n\n        // Get the collection\n        parts.shift();\n        var collection = parts.join('.');\n\n        // Set the command\n        var command = this.query;\n        var cmd = this.s.cmd;\n\n        // If we have a find method, set the operationId on the cursor\n        if(x == '_find') {\n          cursor.operationId = ourOpId;\n        }\n\n        // Do we have a find command rewrite it\n        if(x == '_getmore') {\n          command = {\n            getMore: this.cursorState.cursorId,\n            collection: collection,\n            batchSize: cmd.batchSize\n          }\n\n          if(cmd.maxTimeMS) command.maxTimeMS = cmd.maxTimeMS;\n        } else if(x == '_killcursors') {\n          command = {\n            killCursors: collection,\n            cursors: [this.cursorState.cursorId]\n          }\n        } else if(cmd.find) {\n          command = {\n            find: collection, filter: cmd.query\n          }\n\n          if(cmd.sort) command.sort = cmd.sort;\n          if(cmd.fields) command.projection = cmd.fields;\n          if(cmd.limit && cmd.limit < 0) {\n            command.limit = Math.abs(cmd.limit);\n            command.singleBatch = true;\n          } else if(cmd.limit) {\n            command.limit = Math.abs(cmd.limit);\n          }\n\n          // Options\n          if(cmd.skip) command.skip = cmd.skip;\n          if(cmd.hint) command.hint = cmd.hint;\n          if(cmd.batchSize) command.batchSize = cmd.batchSize;\n          if(typeof cmd.returnKey == 'boolean') command.returnKey = cmd.returnKey;\n          if(cmd.comment) command.comment = cmd.comment;\n          if(cmd.min) command.min = cmd.min;\n          if(cmd.max) command.max = cmd.max;\n          if(cmd.maxScan) command.maxScan = cmd.maxScan;\n          if(cmd.maxTimeMS) command.maxTimeMS = cmd.maxTimeMS;\n\n          // Flags\n          if(typeof cmd.awaitData == 'boolean') command.awaitData = cmd.awaitData;\n          if(typeof cmd.snapshot == 'boolean') command.snapshot = cmd.snapshot;\n          if(typeof cmd.tailable == 'boolean') command.tailable = cmd.tailable;\n          if(typeof cmd.oplogReplay == 'boolean') command.oplogReplay = cmd.oplogReplay;\n          if(typeof cmd.noCursorTimeout == 'boolean') command.noCursorTimeout = cmd.noCursorTimeout;\n          if(typeof cmd.partial == 'boolean') command.partial = cmd.partial;\n          if(typeof cmd.showDiskLoc == 'boolean') command.showRecordId = cmd.showDiskLoc;\n\n          // Read Concern\n          if(cmd.readConcern) command.readConcern = cmd.readConcern;\n\n          // Override method\n          if(cmd.explain) command.explain = cmd.explain;\n          if(cmd.exhaust) command.exhaust = cmd.exhaust;\n\n          // If we have a explain flag\n          if(cmd.explain) {\n            // Create fake explain command\n            command = {\n              explain: command,\n              verbosity: 'allPlansExecution'\n            }\n\n            // Set readConcern on the command if available\n            if(cmd.readConcern) command.readConcern = cmd.readConcern\n\n            // Set up the _explain name for the command\n            x = '_explain';\n          }\n        } else {\n          command = cmd;\n        }\n\n        // Set up the connection\n        var connectionId = null;\n\n        // Set local connection\n        if(this.connection) connectionId = this.connection;\n        if(!connectionId && this.server && this.server.getConnection) connectionId = this.server.getConnection();\n\n        // Get the command Name\n        var commandName = x == '_find' ? Object.keys(command)[0] : commandTranslation[x];\n\n        // Emit the start event for the command\n        var command = {\n          // Returns the command.\n          command: command,\n          // Returns the database name.\n          databaseName: db,\n          // Returns the command name.\n          commandName: commandName,\n          // Returns the driver generated request id.\n          requestId: requestId,\n          // Returns the driver generated operation id.\n          // This is used to link events together such as bulk write operations. OPTIONAL.\n          operationId: this.operationId,\n          // Returns the connection id for the command. For languages that do not have this,\n          // this MUST return the driver equivalent which MUST include the server address and port.\n          // The name of this field is flexible to match the object that is returned from the driver.\n          connectionId: connectionId\n        };\n\n        // Get the aruments\n        var args = Array.prototype.slice.call(arguments, 0);\n\n        // Get the callback\n        var callback = args.pop();\n\n        // We do not have a callback but a Promise\n        if(typeof callback == 'function' || command.commandName == 'killCursors') {\n          var startTime = timestampGenerator.current();\n          // Emit the started event\n          self.emit('started', command)\n\n          // Emit succeeded event with killcursor if we have a legacy protocol\n          if(command.commandName == 'killCursors'\n            && this.server.lastIsMaster()\n            && this.server.lastIsMaster().maxWireVersion < 4) {\n            // Emit the succeeded command\n            var command = {\n              duration: timestampGenerator.duration(startTime, timestampGenerator.current()),\n              commandName: commandName,\n              requestId: requestId,\n              operationId: cursor.operationId,\n              connectionId: cursor.server.getConnection(),\n              reply: [{ok:1}]\n            };\n\n            // Emit the command\n            return self.emit('succeeded', command)\n          }\n\n          // Add our callback handler\n          args.push(function(err, r) {\n            if(err) {\n              // Command\n              var command = {\n                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),\n                commandName: commandName,\n                requestId: requestId,\n                operationId: ourOpId,\n                connectionId: cursor.server.getConnection(),\n                failure: err };\n\n              // Emit the command\n              self.emit('failed', command)\n            } else {\n              // Do we have a getMore\n              if(commandName.toLowerCase() == 'getmore' && r == null) {\n                r = {\n                  cursor: {\n                    id: cursor.cursorState.cursorId,\n                    ns: cursor.ns,\n                    nextBatch: cursor.cursorState.documents\n                  }, ok:1\n                }\n              } else if(commandName.toLowerCase() == 'find' && r == null) {\n                r = {\n                  cursor: {\n                    id: cursor.cursorState.cursorId,\n                    ns: cursor.ns,\n                    firstBatch: cursor.cursorState.documents\n                  }, ok:1\n                }\n              } else if(commandName.toLowerCase() == 'killcursors' && r == null) {\n                r = {\n                  cursorsUnknown:[cursor.cursorState.lastCursorId],\n                  ok:1\n                }\n              }\n\n              // cursor id is zero, we can issue success command\n              var command = {\n                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),\n                commandName: commandName,\n                requestId: requestId,\n                operationId: cursor.operationId,\n                connectionId: cursor.server.getConnection(),\n                reply: r && r.result ? r.result : r\n              };\n\n              // Emit the command\n              self.emit('succeeded', command)\n            }\n\n            // Return\n            if(!callback) return;\n\n            // Return to caller\n            callback(err, r);\n          });\n\n          // Apply the call\n          func.apply(this, args);\n        } else {\n          // Assume promise, push back the missing value\n          args.push(callback);\n          // Get the promise\n          var promise = func.apply(this, args);\n          // Return a new promise\n          return new cursor.s.promiseLibrary(function(resolve, reject) {\n            var startTime = timestampGenerator.current();\n            // Emit the started event\n            self.emit('started', command)\n            // Execute the function\n            promise.then(function(r) {\n              // cursor id is zero, we can issue success command\n              var command = {\n                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),\n                commandName: commandName,\n                requestId: requestId,\n                operationId: cursor.operationId,\n                connectionId: cursor.server.getConnection(),\n                reply: cursor.cursorState.documents\n              };\n\n              // Emit the command\n              self.emit('succeeded', command)\n            }).catch(function(err) {\n              // Command\n              var command = {\n                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),\n                commandName: commandName,\n                requestId: requestId,\n                operationId: ourOpId,\n                connectionId: cursor.server.getConnection(),\n                failure: err };\n\n              // Emit the command\n              self.emit('failed', command)\n              // reject the promise\n              reject(err);\n            });\n          });\n        }\n      }\n    });\n  });\n}\n\ninherits(Instrumentation, EventEmitter);\n\nInstrumentation.prototype.uninstrument = function() {\n  for(var i = 0; i < this.overloads.length; i++) {\n    var obj = this.overloads[i];\n    obj.proto[obj.name] = obj.func;\n  }\n\n  // Remove all listeners\n  this.removeAllListeners('started');\n  this.removeAllListeners('succeeded');\n  this.removeAllListeners('failed');\n}\n\nmodule.exports = Instrumentation;\n"]}