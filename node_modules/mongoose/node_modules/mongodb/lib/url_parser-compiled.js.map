{"version":3,"sources":["url_parser.js"],"names":[],"mappings":"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","file":"url_parser-compiled.js","sourcesContent":["\"use strict\";\n\nvar ReadPreference = require('./read_preference'),\n  parser = require('url'),\n  f = require('util').format;\n\nmodule.exports = function(url, options) {\n  // Ensure we have a default options object if none set\n  options = options || {};\n  // Variables\n  var connection_part = '';\n  var auth_part = '';\n  var query_string_part = '';\n  var dbName = 'admin';\n\n  // Url parser result\n  var result = parser.parse(url, true);\n\n  if(result.protocol != 'mongodb:') {\n    throw new Error('invalid schema, expected mongodb');\n  }\n\n  if((result.hostname == null || result.hostname == '') && url.indexOf('.sock') == -1) {\n    throw new Error('no hostname or hostnames provided in connection string');\n  }\n\n  if(result.port == '0') {\n    throw new Error('invalid port (zero) with hostname');\n  }\n\n  if(!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('invalid port (larger than 65535) with hostname');\n  }\n\n  if(result.path\n    && result.path.length > 0\n    && result.path[0] != '/'\n    && url.indexOf('.sock') == -1) {\n    throw new Error('missing delimiting slash between hosts and options');\n  }\n\n  if(result.query) {\n    for(var name in result.query) {\n      if(name.indexOf('::') != -1) {\n        throw new Error('double colon in host identifier');\n      }\n\n      if(result.query[name] == '') {\n        throw new Error('query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if(result.auth) {\n    var parts = result.auth.split(':');\n    if(url.indexOf(result.auth) != -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if(url.indexOf(result.auth) != -1 && result.auth.indexOf('@') != -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  var clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  var strings = clean.split(',');\n  var hosts = [];\n\n  for(var i = 0; i < strings.length; i++) {\n    var hostString = strings[i];\n\n    if(hostString.indexOf('mongodb') != -1) {\n      if(hostString.indexOf('@') != -1) {\n        hosts.push(hostString.split('@').pop())\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if(hostString.indexOf('/') != -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if(hostString.indexOf('/') == -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for(var i = 0; i < hosts.length; i++) {\n    var r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if(r.path && r.path.indexOf(':') != -1) {\n      throw new Error('double colon in host identifier');\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if(url.indexOf(\"?\") != -1) {\n    query_string_part = url.substr(url.indexOf(\"?\") + 1);\n    connection_part = url.substring(\"mongodb://\".length, url.indexOf(\"?\"))\n  } else {\n    connection_part = url.substring(\"mongodb://\".length);\n  }\n\n  // Check if we have auth params\n  if(connection_part.indexOf(\"@\") != -1) {\n    auth_part = connection_part.split(\"@\")[0];\n    connection_part = connection_part.split(\"@\")[1];\n  }\n\n  // Check if the connection string has a db\n  if(connection_part.indexOf(\".sock\") != -1) {\n    if(connection_part.indexOf(\".sock/\") != -1) {\n      dbName = connection_part.split(\".sock/\")[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf(\"/\") != -1) {\n        if (dbName.split(\"/\").length == 2 && dbName.split(\"/\")[1].length == 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\"/\", connection_part.indexOf(\".sock\") + \".sock\".length);\n    }\n  } else if(connection_part.indexOf(\"/\") != -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split(\"/\").length > 2) {\n      if (connection_part.split(\"/\")[2].length == 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split(\"/\")[1];\n    connection_part = connection_part.split(\"/\")[0];\n  }\n\n  // Result object\n  var object = {};\n\n  // Pick apart the authentication part of the string\n  var authPart = auth_part || '';\n  var auth = authPart.split(':', 2);\n\n  // Decode the URI components\n  auth[0] = decodeURIComponent(auth[0]);\n  if(auth[1]){\n    auth[1] = decodeURIComponent(auth[1]);\n  }\n\n  // Add auth to final object if we have 2 elements\n  if(auth.length == 2) object.auth = {user: auth[0], password: auth[1]};\n\n  // Variables used for temporary storage\n  var hostPart;\n  var urlOptions;\n  var servers;\n  var serverOptions = {socketOptions: {}};\n  var dbOptions = {read_preference_tags: []};\n  var replSetServersOptions = {socketOptions: {}};\n  var mongosOptions = {socketOptions: {}};\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if(url.match(/\\.sock/)) {\n    // Split out the socket part\n    var domainSocket = url.substring(\n        url.indexOf(\"mongodb://\") + \"mongodb://\".length\n      , url.lastIndexOf(\".sock\") + \".sock\".length);\n    // Clean out any auth stuff if any\n    if(domainSocket.indexOf(\"@\") != -1) domainSocket = domainSocket.split(\"@\")[1];\n    servers = [{domain_socket: domainSocket}];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    var deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart.split(',').map(function(h) {\n      var _host, _port, ipv6match;\n      //check if it matches [IPv6]:port, where the port number is optional\n      if ((ipv6match = /\\[([^\\]]+)\\](?:\\:(.+))?/.exec(h))) {\n        _host = ipv6match[1];\n        _port = parseInt(ipv6match[2], 10) || 27017;\n      } else {\n        //otherwise assume it's IPv4, or plain hostname\n        var hostPort = h.split(':', 2);\n        _host = hostPort[0] || 'localhost';\n        _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n        // Check for localhost?safe=true style case\n        if(_host.indexOf(\"?\") != -1) _host = _host.split(/\\?/)[0];\n      }\n\n      // No entry returned for duplicate servr\n      if(deduplicatedServers[_host + \"_\" + _port]) return null;\n      deduplicatedServers[_host + \"_\" + _port] = 1;\n\n      // Return the mapped object\n      return {host: _host, port: _port};\n    }).filter(function(x) {\n      return x != null;\n    });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if(!opt) return;\n    var splitOpt = opt.split('='), name = splitOpt[0], value = splitOpt[1];\n    // Options implementations\n    switch(name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = (value == 'true');\n        dbOptions.slaveOk = (value == 'true');\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = (value == 'true');\n        break;\n      case 'minPoolSize':\n        throw new Error(\"minPoolSize not supported\");\n      case 'maxIdleTimeMS':\n        throw new Error(\"maxIdleTimeMS not supported\");\n      case 'waitQueueMultiple':\n        throw new Error(\"waitQueueMultiple not supported\");\n      case 'waitQueueTimeoutMS':\n        throw new Error(\"waitQueueTimeoutMS not supported\");\n      case 'uuidRepresentation':\n        throw new Error(\"uuidRepresentation not supported\");\n      case 'ssl':\n        if(value == 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = (value == 'true');\n        replSetServersOptions.ssl = (value == 'true');\n        mongosOptions.ssl = (value == 'true');\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = (value == 'true');\n        replSetServersOptions.sslValidate = (value == 'true');\n        mongosOptions.sslValidate = (value == 'true');\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = (value == 'true');\n        break;\n      case 'fsync':\n        dbOptions.fsync = (value == 'true');\n        break;\n      case 'journal':\n        dbOptions.j = (value == 'true');\n        break;\n      case 'safe':\n        dbOptions.safe = (value == 'true');\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = (value == 'true');\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = {level: value};\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if(isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if(value == 'GSSAPI') {\n          // If no password provided decode only the principal\n          if(object.auth == null) {\n            var urlDecodeAuthPart = decodeURIComponent(authPart);\n            if(urlDecodeAuthPart.indexOf(\"@\") == -1) throw new Error(\"GSSAPI requires a provided principal\");\n            object.auth = {user: urlDecodeAuthPart, password: null};\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if(value == 'MONGODB-X509') {\n          object.auth = {user: decodeURIComponent(authPart)};\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if(value != 'GSSAPI'\n          && value != 'MONGODB-X509'\n          && value != 'MONGODB-CR'\n          && value != 'DEFAULT'\n          && value != 'SCRAM-SHA-1'\n          && value != 'PLAIN')\n            throw new Error(\"only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\");\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        // Split up into key, value pairs\n        var values = value.split(',');\n        var o = {};\n        // For each value split into key, value\n        values.forEach(function(x) {\n          var v = x.split(':');\n          o[v[0]] = v[1];\n        });\n\n        // Set all authMechanismProperties\n        dbOptions.authMechanismProperties = o;\n        // Set the service name value\n        if(typeof o.SERVICE_NAME == 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n        if(typeof o.SERVICE_REALM == 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n        if(typeof o.CANONICALIZE_HOST_NAME == 'string') dbOptions.gssapiCanonicalizeHostName = o.CANONICALIZE_HOST_NAME == 'true' ? true : false;\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if(!ReadPreference.isValid(value)) throw new Error(\"readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest\");\n        dbOptions.readPreference = value;\n        break;\n      case 'readPreferenceTags':\n        // Decode the value\n        value = decodeURIComponent(value);\n        // Contains the tag object\n        var tagObject = {};\n        if(value == null || value == '') {\n          dbOptions.read_preference_tags.push(tagObject);\n          break;\n        }\n\n        // Split up the tags\n        var tags = value.split(/\\,/);\n        for(var i = 0; i < tags.length; i++) {\n          var parts = tags[i].trim().split(/\\:/);\n          tagObject[parts[0]] = parts[1];\n        }\n\n        // Set the preferences tags\n        dbOptions.read_preference_tags.push(tagObject);\n        break;\n      default:\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if(dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if((dbOptions.w == -1 || dbOptions.w == 0) && (\n      dbOptions.journal == true\n      || dbOptions.fsync == true\n      || dbOptions.safe == true)) throw new Error(\"w set to -1 or 0 cannot be combined with safe/w/journal/fsync\")\n\n  // If no read preference set it to primary\n  if(!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // Add servers to result\n  object.servers = servers;\n  // Returned parsed object\n  return object;\n}\n"]}