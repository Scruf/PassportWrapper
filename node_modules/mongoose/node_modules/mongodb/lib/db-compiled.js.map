{"version":3,"sources":["db.js"],"names":[],"mappings":"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","file":"db-compiled.js","sourcesContent":["\"use strict\";\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , getSingleProperty = require('./utils').getSingleProperty\n  , shallowClone = require('./utils').shallowClone\n  , parseIndexOptions = require('./utils').parseIndexOptions\n  , debugOptions = require('./utils').debugOptions\n  , CommandCursor = require('./command_cursor')\n  , handleCallback = require('./utils').handleCallback\n  , toError = require('./utils').toError\n  , ReadPreference = require('./read_preference')\n  , f = require('util').format\n  , Admin = require('./admin')\n  , Code = require('mongodb-core').BSON.Code\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , MongoError = require('mongodb-core').MongoError\n  , ObjectID = require('mongodb-core').ObjectID\n  , Define = require('./metadata')\n  , Logger = require('mongodb-core').Logger\n  , Collection = require('./collection')\n  , crypto = require('crypto');\n\nvar debugFields = ['authSource', 'w', 'wtimeout', 'j', 'native_parser', 'forceServerObjectId'\n  , 'serializeFunctions', 'raw', 'promoteLongs', 'bufferMaxEntries', 'numberOfRetries', 'retryMiliSeconds'\n  , 'readPreference', 'pkFactory'];\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Get an additional db\n *   var testDb = db.db('test');\n *   db.close();\n * });\n */\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @property {object} topology Access the topology object (single server, replicaset or mongos).\n * @fires Db#close\n * @fires Db#authenticated\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nvar Db = function(databaseName, topology, options) {\n  options = options || {};\n  if(!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n  var self = this;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // var self = this;  // Internal state of the db object\n  this.s = {\n    // Database name\n      databaseName: databaseName\n    // DbCache\n    , dbCache: {}\n    // Children db's\n    , children: []\n    // Topology\n    , topology: topology\n    // Options\n    , options: options\n    // Logger instance\n    , logger: Logger('Db', options)\n    // Get the bson parser\n    , bson: topology ? topology.bson : null\n    // Authsource if any\n    , authSource: options.authSource\n    // Unpack read preference\n    , readPreference: options.readPreference\n    // Set buffermaxEntries\n    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : -1\n    // Parent db (if chained)\n    , parentDb: options.parentDb || null\n    // Set up the primary key factory or fallback to ObjectID\n    , pkFactory: options.pkFactory || ObjectID\n    // Get native parser\n    , nativeParser: options.nativeParser || options.native_parser\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // No listener\n    , noListener: typeof options.noListener == 'boolean' ? options.noListener : false\n    // ReadConcern\n    , readConcern: options.readConcern\n  }\n\n  // Ensure we have a valid db name\n  validateDatabaseName(self.s.databaseName);\n\n  // If we have specified the type of parser\n  if(typeof self.s.nativeParser == 'boolean') {\n    if(self.s.nativeParser) {\n      topology.setBSONParserType(\"c++\");\n    } else {\n      topology.setBSONParserType(\"js\");\n    }\n  }\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', self.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', self.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', self.s.databaseName);\n\n  // This is a child db, do not register any listeners\n  if(options.parentDb) return;\n  if(this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(self, 'error', self));\n  topology.on('timeout', createListener(self, 'timeout', self));\n  topology.on('close', createListener(self, 'close', self));\n  topology.on('parseError', createListener(self, 'parseError', self));\n  topology.once('open', createListener(self, 'open', self));\n  topology.once('fullsetup', createListener(self, 'fullsetup', self));\n  topology.once('all', createListener(self, 'all', self));\n  topology.on('reconnect', createListener(self, 'reconnect', self));\n}\n\ninherits(Db, EventEmitter);\n\nvar define = Db.define = new Define('Db', Db, false);\n\n// Topology\nObject.defineProperty(Db.prototype, 'topology', {\n  enumerable:true,\n  get: function() { return this.s.topology; }\n});\n\n// Options\nObject.defineProperty(Db.prototype, 'options', {\n  enumerable:true,\n  get: function() { return this.s.options; }\n});\n\n// Running native parser\nObject.defineProperty(Db.prototype, 'native_parser', {\n  enumerable:true,\n  get: function() { return this.s.topology.parserType() == 'c++'; }\n});\n\n// slaveOk specified\nObject.defineProperty(Db.prototype, 'slaveOk', {\n  enumerable:true,\n  get: function() {\n    if(this.s.options.readPreference != null\n      && (this.s.options.readPreference != 'primary' || this.s.options.readPreference.mode != 'primary')) {\n      return true;\n    }\n    return false;\n  }\n});\n\n// get the write Concern\nObject.defineProperty(Db.prototype, 'writeConcern', {\n  enumerable:true,\n  get: function() {\n    var ops = {};\n    if(this.s.options.w != null) ops.w = this.s.options.w;\n    if(this.s.options.j != null) ops.j = this.s.options.j;\n    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * The callback format for the Db.open method\n * @callback Db~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Db} db The Db instance if the open method was successful.\n */\n\n// Internal method\nvar open = function(self, callback) {\n  self.s.topology.connect(self, self.s.options, function(err, topology) {\n    if(callback == null) return;\n    var internalCallback = callback;\n    callback == null;\n\n    if(err) {\n      self.close();\n      return internalCallback(err);\n    }\n\n    internalCallback(null, self);\n  });\n}\n\n/**\n * Open the database\n * @method\n * @param {Db~openCallback} [callback] Callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.open = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return open(self, callback);\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    open(self, function(err, db) {\n      if(err) return reject(err);\n      resolve(db);\n    })\n  });\n}\n\ndefine.classMethod('open', {callback: true, promise:true});\n\n/**\n * Converts provided read preference to CoreReadPreference\n * @param {(ReadPreference|string|object)} readPreference the user provided read preference\n * @return {CoreReadPreference}\n */\nvar convertReadPreference = function(readPreference) {\n  if(readPreference && typeof readPreference == 'string') {\n    return new CoreReadPreference(readPreference);\n  } else if(readPreference instanceof ReadPreference) {\n    return new CoreReadPreference(readPreference.mode, readPreference.tags);\n  } else if(readPreference && typeof readPreference == 'object') {\n    var mode = readPreference.mode || readPreference.preference;\n    if (mode && typeof mode == 'string') {\n      readPreference = new CoreReadPreference(mode, readPreference.tags);\n    }\n  }\n  return readPreference;\n}\n\n/**\n * The callback format for results\n * @callback Db~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\nvar executeCommand = function(self, command, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  var dbName = options.dbName || options.authdb || self.s.databaseName;\n  // If we have a readPreference set\n  if(options.readPreference == null && self.s.readPreference) {\n    options.readPreference = self.s.readPreference;\n  }\n\n  // Convert the readPreference\n  if(options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  }\n\n  // Debug information\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command %s against %s with options [%s]'\n    , JSON.stringify(command), f('%s.$cmd', dbName), JSON.stringify(debugOptions(debugFields, options))));\n\n  // Execute command\n  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  var self = this;\n  // Change the callback\n  if(typeof options == 'function') callback = options, options = {};\n  // Clone the options\n  options = shallowClone(options);\n\n  // Do we have a callback\n  if(typeof callback == 'function') return executeCommand(self, command, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    executeCommand(self, command, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('command', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Db~noResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {null} result Is not set to a value\n */\n\n/**\n * Close the db and its underlying connections\n * @method\n * @param {boolean} force Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.close = function(force, callback) {\n  if(typeof force == 'function') callback = force, force = false;\n  this.s.topology.close(force);\n  var self = this;\n\n  // Fire close event if any listeners\n  if(this.listeners('close').length > 0) {\n    this.emit('close');\n\n    // If it's the top level db emit close on all children\n    if(this.parentDb == null) {\n      // Fire close on all children\n      for(var i = 0; i < this.s.children.length; i++) {\n        this.s.children[i].emit('close');\n      }\n    }\n\n    // Remove listeners after emit\n    self.removeAllListeners('close');\n  }\n\n  // Close parent db if set\n  if(this.s.parentDb) this.s.parentDb.close();\n  // Callback after next event loop tick\n  if(typeof callback == 'function') return process.nextTick(function() {\n    handleCallback(callback, null);\n  })\n\n  // Return dummy promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    resolve();\n  });\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\ndefine.classMethod('admin', {callback: false, promise:false, returns: [Admin]});\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\n * can use it without a callback in the following way: `var collection = db.collection('mycollection');`\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} callback The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern || this.s.readConcern;\n\n  // Do we have ignoreUndefined set\n  if(this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute\n  if(options == null || !options.strict) {\n    try {\n      var collection = new Collection(this, this.s.topology, this.s.databaseName, name, this.s.pkFactory, options);\n      if(callback) callback(null, collection);\n      return collection;\n    } catch(err) {\n      if(callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if(typeof callback != 'function') {\n    throw toError(f(\"A callback is required in strict mode. While getting collection %s.\", name));\n  }\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  // Strict mode\n  this.listCollections({name:name}).toArray(function(err, collections) {\n    if(err != null) return handleCallback(callback, err, null);\n    if(collections.length == 0) return handleCallback(callback, toError(f(\"Collection %s does not exist. Currently in strict mode.\", name)), null);\n\n    try {\n      return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n    } catch(err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n}\n\ndefine.classMethod('collection', {callback: true, promise:false, returns: [Collection]});\n\nvar createCollection = function(self, name, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self, options);\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Check if we have the name\n  self.listCollections({name: name}).toArray(function(err, collections) {\n    if(err != null) return handleCallback(callback, err, null);\n    if(collections.length > 0 && finalOptions.strict) {\n      return handleCallback(callback, MongoError.create({message: f(\"Collection %s already exists. Currently in strict mode.\", name), driver:true}), null);\n    } else if (collections.length > 0) {\n      try { return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options)); }\n      catch(err) { return handleCallback(callback, err); }\n    }\n\n    // Create collection command\n    var cmd = {'create':name};\n\n    // Add all optional parameters\n    for(var n in options) {\n      if(options[n] != null && typeof options[n] != 'function')\n        cmd[n] = options[n];\n    }\n\n    // Execute command\n    self.command(cmd, finalOptions, function(err, result) {\n      if(err) return handleCallback(callback, err);\n      handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n    });\n  });\n}\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {number} [options.size=null] The size of the capped collection in bytes.\n * @param {number} [options.max=null] The maximum number of documents in the capped collection.\n * @param {boolean} [options.autoIndexId=true] Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = function(name, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  name = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Do we have a promisesLibrary\n  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'string') name = callback;\n\n  // Execute the fallback callback\n  if(typeof callback == 'function') return createCollection(self, name, options, callback);\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createCollection(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('createCollection', {callback: true, promise:true});\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Build command object\n  var commandObject = { dbStats:true };\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n  // Execute the command\n  return this.command(commandObject, options, callback);\n}\n\ndefine.classMethod('stats', {callback: true, promise:true});\n\n// Transformation methods for cursor results\nvar listCollectionsTranforms = function(databaseName) {\n  var matching = f('%s.', databaseName);\n\n  return {\n    doc: function(doc) {\n      var index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if(doc.name && index == 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  }\n}\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} filter Query to filter collections by\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Shallow clone the object\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Ensure valid readPreference\n  if(options.readPreference) {\n    options.readPreference = convertReadPreference(options.readPreference);\n  }\n\n  // We have a list collections command\n  if(this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listCollections : true, filter: filter, cursor: cursor };\n    // Set the AggregationCursor constructor\n    options.cursorFactory = CommandCursor;\n    // Create the cursor\n    var cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);\n    // Do we have a readPreference, apply it\n    if(options.readPreference) {\n      cursor.setReadPreference(options.readPreference);\n    }\n    // Return the cursor\n    return cursor;\n  }\n\n  // We cannot use the listCollectionsCommand\n  if(!this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    if(typeof filter.name == 'string' && !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {\n      filter = shallowClone(filter);\n      filter.name = f('%s.%s', this.s.databaseName, filter.name);\n    }\n  }\n\n  // No filter, filter by current database\n  if(filter == null) {\n    filter.name = f('/%s/', this.s.databaseName);\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if(filter.name) {\n    filter = {$and: [{name: filter.name}, {name:/^((?!\\$).)*$/}]};\n  } else {\n    filter = {name:/^((?!\\$).)*$/};\n  }\n\n  // Return options\n  var _options = {transforms: listCollectionsTranforms(this.s.databaseName)}\n  // Get the cursor\n  var cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);\n  // Do we have a readPreference, apply it\n  if(options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\ndefine.classMethod('listCollections', {callback: false, promise:false, returns: [CommandCursor]});\n\nvar evaluate = function(self, code, parameters, options, callback) {\n  var finalCode = code;\n  var finalParameters = [];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if(!(finalCode instanceof Code)) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if(parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if(parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  var cmd = {'$eval':finalCode, 'args':finalParameters};\n  // Check if the nolock parameter is passed in\n  if(options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new CoreReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result && result.ok == 1) return handleCallback(callback, null, result.retval);\n    if(result) return handleCallback(callback, MongoError.create({message: f(\"eval failed: %s\", result.errmsg), driver:true}), null);\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript.\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = function(code, parameters, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    evaluate(self, code, parameters, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('eval', {callback: true, promise:true});\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Add return new collection\n  options.new_collection = true;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') {\n    return this.collection(fromCollection).rename(toCollection, options, callback);\n  }\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.collection(fromCollection).rename(toCollection, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('renameCollection', {callback: true, promise:true});\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, callback) {\n  var self = this;\n\n  // Command to execute\n  var cmd = {'drop':name}\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err);\n    if(result.ok) return handleCallback(callback, null, true);\n    handleCallback(callback, null, false);\n  });\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, self.s.options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n};\n\ndefine.classMethod('dropCollection', {callback: true, promise:true});\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(callback) {\n  var self = this;\n  // Drop database command\n  var cmd = {'dropDatabase':1};\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, self.s.options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n}\n\ndefine.classMethod('dropDatabase', {callback: true, promise:true});\n\n/**\n * The callback format for the collections method.\n * @callback Db~collectionsResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection[]} collections An array of all the collections objects for the db instance.\n */\nvar collections = function(self, callback) {\n  // Let's get the collection names\n  self.listCollections().toArray(function(err, documents) {\n    if(err != null) return handleCallback(callback, err, null);\n    // Filter collections removing any illegal ones\n    documents = documents.filter(function(doc) {\n      return doc.name.indexOf('$') == -1;\n    });\n\n    // Return the collection objects\n    handleCallback(callback, null, documents.map(function(d) {\n      return new Collection(self, self.s.topology, self.s.databaseName, d.name.replace(self.s.databaseName + \".\", ''), self.s.pkFactory, self.s.options);\n    }));\n  });\n}\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(callback) {\n  var self = this;\n\n  // Return the callback\n  if(typeof callback == 'function') return collections(self, callback);\n  // Return the promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    collections(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('collections', {callback: true, promise:true});\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Ensure valid readPreference\n  if(options.readPreference\n    && !(options.readPreference instanceof ReadPreference)\n    && typeof options.readPreference == 'object') {\n    var mode = options.readPreference.mode || options.readPreference.preference;\n    if (mode && typeof mode == 'string') {\n      options.readPreference = new ReadPreference(mode, readPreference.tags);\n    }\n  }\n\n  // Return the callback\n  if(typeof callback == 'function') return self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.result);\n  });\n\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      resolve(result.result);\n    });\n  });\n};\n\ndefine.classMethod('executeDbAdminCommand', {callback: true, promise:true});\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n  // Shallow clone the options\n  options = shallowClone(options);\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar createIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options);\n  // Ensure we have a callback\n  if(finalOptions.writeConcern && typeof callback != 'function') {\n    throw MongoError.create({message: \"Cannot use a writeConcern without a provided callback\", driver:true});\n  }\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {\n    if(err == null) return handleCallback(callback, err, result);\n    // 67 = 'CannotCreateIndex', means that the server recognized\n    // `createIndex` as a command and so we don't need to fallback to\n    // an insert.\n    if(err.code === 67) {\n      return handleCallback(callback, err, result);\n    }\n    // Create command\n    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) {\n      if(callback == null) return;\n      if(err) return handleCallback(callback, err);\n      if(result == null) return handleCallback(callback, null, null);\n      if(result.result.writeErrors) return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n      handleCallback(callback, null, doc.name);\n    });\n  });\n}\n\ndefine.classMethod('createIndex', {callback: true, promise:true});\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    ensureIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar ensureIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options);\n  // Create command\n  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);\n  var index_name = selector.name;\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Default command options\n  var commandOptions = {};\n  // Check if the index allready exists\n  self.indexInformation(name, finalOptions, function(err, indexInformation) {\n    if(err != null && err.code != 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if(indexInformation == null || !indexInformation[index_name])  {\n      self.createIndex(name, fieldOrSpec, options, callback);\n    } else {\n      if(typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n}\n\ndefine.classMethod('ensureIndex', {callback: true, promise:true});\n\nDb.prototype.addChild = function(db) {\n  if(this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n}\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} name The name of the database we want to use.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nDb.prototype.db = function(dbName, options) {\n  options = options || {};\n  // Copy the options and add out internal override of the not shared flag\n  for(var key in this.options) {\n    options[key] = this.options[key];\n  }\n\n  // Do we have the db in the cache already\n  if(this.s.dbCache[dbName] && options.returnNonCachedInstance !== true) {\n    return this.s.dbCache[dbName];\n  }\n\n  // Add current db as parentDb\n  if(options.noListener == null || options.noListener == false) {\n    options.parentDb = this;\n  }\n\n  // Add promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Return the db object\n  var db = new Db(dbName, this.s.topology, options)\n\n  // Add as child\n  if(options.noListener == null || options.noListener == false) {\n    this.addChild(db);\n  }\n\n  // Add the db to the cache\n  this.s.dbCache[dbName] = db;\n  // Return the database\n  return db;\n};\n\ndefine.classMethod('db', {callback: false, promise:false, returns: [Db]});\n\nvar _executeAuthCreateUserCommand = function(self, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if(typeof username == 'string'\n    && password != null && typeof password == 'object') {\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if(options.digestPassword != null) {\n    throw toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\");\n  }\n\n  // Get additional values\n  var customData = options.customData != null ? options.customData : {};\n  var roles = Array.isArray(options.roles) ? options.roles : [];\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if(roles.length == 0) {\n    console.log(\"Creating a user without roles is deprecated in MongoDB >= 2.6\");\n  }\n\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') && !Array.isArray(options.roles)) {\n    roles = ['root']\n  } else if(!Array.isArray(options.roles)) {\n    roles = ['dbOwner']\n  }\n\n  // Build the command to execute\n  var command = {\n      createUser: username\n    , customData: customData\n    , roles: roles\n    , digestPassword:false\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var userPassword = md5.digest('hex');\n\n  // No password\n  if(typeof password == 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Force write using primary\n  commandOptions.readPreference = CoreReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && err.ok == 0 && err.code == undefined) return handleCallback(callback, {code: -5000}, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, !result.ok ? toError(result) : null\n      , result.ok ? [{user: username, pwd: ''}] : null);\n  })\n}\n\nvar addUser = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Attempt to execute auth command\n  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {\n    // We need to perform the backward compatible insert operation\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // Use node md5 generator\n      var md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + \":mongo:\" + password);\n      var userPassword = md5.digest('hex');\n\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Check if we are inserting the first user\n      collection.count({}, function(err, count) {\n        // We got an error (f.ex not authorized)\n        if(err != null) return handleCallback(callback, err, null);\n        // Check if the user exists and update i\n        collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err, documents) {\n          // We got an error (f.ex not authorized)\n          if(err != null) return handleCallback(callback, err, null);\n          // Add command keys\n          finalOptions.upsert = true;\n\n          // We have a user, let's update the password or upsert if not\n          collection.update({user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err, results, full) {\n            if(count == 0 && err) return handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n            if(err) return handleCallback(callback, err, null)\n            handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n          });\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, r);\n  });\n}\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return addUser(self, username, password, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    addUser(self, username, password, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('addUser', {callback: true, promise:true});\n\nvar _executeAuthRemoveUserCommand = function(self, username, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  var command = {\n    dropUser: username\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Force write using primary\n  commandOptions.readPreference = CoreReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && !err.ok && err.code == undefined) return handleCallback(callback, {code: -5000});\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  })\n}\n\nvar removeUser = function(self, username, options, callback) {\n  // Attempt to execute command\n  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Locate the user\n      collection.findOne({user: username}, {}, function(err, user) {\n        if(user == null) return handleCallback(callback, err, false);\n        collection.remove({user: username}, finalOptions, function(err, result) {\n          handleCallback(callback, err, true);\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, result);\n  });\n}\n\ndefine.classMethod('removeUser', {callback: true, promise:true});\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return removeUser(self, username, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    removeUser(self, username, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar authenticate = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  var authdb = options.authdb ? options.authdb : options.dbName;\n  authdb = options.authSource ? options.authSource : authdb;\n  authdb = authdb ? authdb : self.databaseName;\n\n  // Callback\n  var _callback = function(err, result) {\n    if(self.listeners('authenticated').length > 0) {\n      self.emit('authenticated', err, result);\n    }\n\n    // Return to caller\n    handleCallback(callback, err, result);\n  }\n\n  // authMechanism\n  var authMechanism = options.authMechanism || '';\n  authMechanism = authMechanism.toUpperCase();\n\n  // If classic auth delegate to auth command\n  if(authMechanism == 'MONGODB-CR') {\n    self.s.topology.auth('mongocr', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'PLAIN') {\n    self.s.topology.auth('plain', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'MONGODB-X509') {\n    self.s.topology.auth('x509', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'SCRAM-SHA-1') {\n    self.s.topology.auth('scram-sha-1', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'GSSAPI') {\n    if(process.platform == 'win32') {\n      self.s.topology.auth('sspi', authdb, username, password, options, function(err, result) {\n        if(err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    } else {\n      self.s.topology.auth('gssapi', authdb, username, password, options, function(err, result) {\n        if(err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    }\n  } else if(authMechanism == 'DEFAULT') {\n    self.s.topology.auth('default', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else {\n    handleCallback(callback, MongoError.create({message: f(\"authentication mechanism %s not supported\", options.authMechanism), driver:true}));\n  }\n}\n\n/**\n * Authenticate a user against the server.\n * @method\n * @param {string} username The username.\n * @param {string} [password] The password.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authMechanism=MONGODB-CR] The authentication mechanism to use, GSSAPI, MONGODB-CR, MONGODB-X509, PLAIN\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.authenticate = function(username, password, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  // Shallow copy the options\n  options = shallowClone(options);\n\n  // Set default mechanism\n  if(!options.authMechanism) {\n    options.authMechanism = 'DEFAULT';\n  } else if(options.authMechanism != 'GSSAPI'\n    && options.authMechanism != 'MONGODB-CR'\n    && options.authMechanism != 'MONGODB-X509'\n    && options.authMechanism != 'SCRAM-SHA-1'\n    && options.authMechanism != 'PLAIN') {\n      return handleCallback(callback, MongoError.create({message: \"only GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\", driver:true}));\n  }\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return authenticate(self, username, password, options, function(err, r) {\n    // Support failed auth method\n    if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;\n    // Reject error\n    if(err) return callback(err, r);\n    callback(null, r);\n  });\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;\n      // Reject error\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('authenticate', {callback: true, promise:true});\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.dbName=null] Logout against different database than current.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.logout = function(options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // logout command\n  var cmd = {'logout':1};\n\n  // Add onAll to login to ensure all connection are logged out\n  options.onAll = true;\n\n  // We authenticated against a different db use that\n  if(this.s.authSource) options.dbName = this.s.authSource;\n\n  // Execute the command\n  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true)\n  });\n\n  // Return promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.command(cmd, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      resolve(true);\n    });\n  });\n}\n\ndefine.classMethod('logout', {callback: true, promise:true});\n\n// Figure out the read preference\nvar getReadPreference = function(options, db) {\n  if(options.readPreference) return options;\n  if(db.readPreference) options.readPreference = db.readPreference;\n  return options;\n}\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return indexInformation(self, name, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexInformation(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar indexInformation = function(self, name, options, callback) {\n    // If we specified full information\n  var full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Process all the results from the index command and collection\n  var processResults = function(indexes) {\n    // Contains all the information\n    var info = {};\n    // Process all the indexes\n    for(var i = 0; i < indexes.length; i++) {\n      var index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for(var name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  self.collection(name).listIndexes().toArray(function(err, indexes) {\n    if(err) return callback(toError(err));\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, []);\n    if(full) return handleCallback(callback, null, indexes);\n    handleCallback(callback, null, processResults(indexes));\n  });\n}\n\ndefine.classMethod('indexInformation', {callback: true, promise:true});\n\nvar createCreateIndexCommand = function(db, name, fieldOrSpec, options) {\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  var fieldHash = indexParameters.fieldHash;\n  var keys = indexParameters.keys;\n\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  var selector = {\n    'ns': db.databaseName + \".\" + name, 'key': fieldHash, 'name': indexName\n  }\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options == 'boolean' ? {} : options;\n\n  // Add all the options\n  var keysToOmit = Object.keys(selector);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if(selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n  for(var i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n}\n\nvar createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) {\n  // Build the index\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  var keysToOmit = Object.keys(indexes[0]);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n\n    // Remove any write concern operations\n    var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n    for(var i = 0; i < removeKeys.length; i++) {\n      delete indexes[0][removeKeys[i]];\n    }\n  }\n\n  // Create command\n  var cmd = {createIndexes: name, indexes: indexes};\n\n  // Apply write concern to command\n  cmd = writeConcern(cmd, self, options);\n\n  // Build the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result.ok == 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n}\n\n// Validate the database name\nvar validateDatabaseName = function(databaseName) {\n  if(typeof databaseName !== 'string') throw MongoError.create({message: \"database name must be a string\", driver:true});\n  if(databaseName.length === 0) throw MongoError.create({message: \"database name cannot be the empty string\", driver:true});\n  if(databaseName == '$external') return;\n\n  var invalidChars = [\" \", \".\", \"$\", \"/\", \"\\\\\"];\n  for(var i = 0; i < invalidChars.length; i++) {\n    if(databaseName.indexOf(invalidChars[i]) != -1) throw MongoError.create({message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\", driver:true});\n  }\n}\n\n// Get write concern\nvar writeConcern = function(target, db, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w) opts.w = options.w;\n    if(options.wtimeout) opts.wtimeout = options.wtimeout;\n    if(options.j) opts.j = options.j;\n    if(options.fsync) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Add listeners to topology\nvar createListener = function(self, e, object) {\n  var listener = function(err) {\n    if(e != 'error') {\n      object.emit(e, err, self);\n\n      // Emit on all associated db's if available\n      for(var i = 0; i < self.s.children.length; i++) {\n        self.s.children[i].emit(e, err, self.s.children[i]);\n      }\n    }\n  }\n  return listener;\n}\n\n\n/**\n * Unref all sockets\n * @method\n */\nDb.prototype.unref = function(options, callback) {\n  this.s.topology.unref();\n}\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db authenticated event\n *\n * Emitted after all server members in the topology (single server, replicaset or mongos) have successfully authenticated.\n *\n * @event Db#authenticated\n * @type {object}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";\nDb.SYSTEM_INDEX_COLLECTION = \"system.indexes\";\nDb.SYSTEM_PROFILE_COLLECTION = \"system.profile\";\nDb.SYSTEM_USER_COLLECTION = \"system.users\";\nDb.SYSTEM_COMMAND_COLLECTION = \"$cmd\";\nDb.SYSTEM_JS_COLLECTION = \"system.js\";\n\nmodule.exports = Db;\n"]}