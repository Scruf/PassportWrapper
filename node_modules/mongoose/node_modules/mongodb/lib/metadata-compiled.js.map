{"version":3,"sources":["metadata.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,QAAQ,MAAR,EAAgB,MAAhB;;AAER,IAAI,SAAS,UAAS,IAAT,EAAe,MAAf,EAAuB,MAAvB,EAA+B;AAC1C,OAAK,IAAL,GAAY,IAAZ,CAD0C;AAE1C,OAAK,MAAL,GAAc,MAAd,CAF0C;AAG1C,OAAK,MAAL,GAAc,OAAO,MAAP,IAAiB,SAAjB,GAA6B,MAA7B,GAAsC,KAAtC,CAH4B;AAI1C,OAAK,gBAAL,GAAwB,EAAxB,CAJ0C;CAA/B;;AAOb,OAAO,SAAP,CAAiB,WAAjB,GAA+B,UAAS,IAAT,EAAe,OAAf,EAAwB;AACrD,MAAI,OAAO,OAAO,IAAP,CAAY,OAAZ,EAAqB,IAArB,EAAP,CADiD;AAErD,MAAI,MAAM,YAAY,IAAZ,EAAkB,OAAlB,CAAN;;;AAFiD,MAKlD,KAAK,gBAAL,CAAsB,GAAtB,KAA8B,IAA9B,EAAoC;AACrC,SAAK,gBAAL,CAAsB,GAAtB,IAA6B;AAC3B,eAAS,EAAT,EAAa,SAAS,OAAT;KADf,CADqC;GAAvC;;;AALqD,MAYrD,CAAK,gBAAL,CAAsB,GAAtB,EAA2B,OAA3B,CAAmC,IAAnC,CAAwC,IAAxC,EAZqD;CAAxB;;AAe/B,IAAI,cAAc,UAAS,IAAT,EAAe,OAAf,EAAwB;AACxC,MAAI,QAAQ,EAAR,CADoC;AAExC,OAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,GAAhC,EAAqC;AACnC,UAAM,IAAN,CAAW,EAAE,OAAF,EAAW,KAAK,CAAL,CAAX,EAAoB,QAAQ,KAAK,CAAL,CAAR,CAApB,CAAX,EADmC;GAArC;;AAIA,SAAO,MAAM,IAAN,EAAP,CANwC;CAAxB;;AASlB,OAAO,SAAP,CAAiB,YAAjB,GAAgC,UAAS,IAAT,EAAe,OAAf,EAAwB;AACtD,UAAQ,MAAR,GAAiB,IAAjB,CADsD;AAEtD,MAAI,OAAO,OAAO,IAAP,CAAY,OAAZ,EAAqB,IAArB,EAAP,CAFkD;AAGtD,MAAI,MAAM,YAAY,IAAZ,EAAkB,OAAlB,CAAN;;;AAHkD,MAMnD,KAAK,gBAAL,CAAsB,GAAtB,KAA8B,IAA9B,EAAoC;AACrC,SAAK,gBAAL,CAAsB,GAAtB,IAA6B;AAC3B,eAAS,EAAT,EAAa,SAAS,OAAT;KADf,CADqC;GAAvC;;;AANsD,MAatD,CAAK,gBAAL,CAAsB,GAAtB,EAA2B,OAA3B,CAAmC,IAAnC,CAAwC,IAAxC,EAbsD;CAAxB;;AAgBhC,OAAO,SAAP,CAAiB,QAAjB,GAA4B,UAAS,IAAT,EAAe,OAAf,EAAwB;;AAElD,MAAI,SAAS;AACX,UAAM,KAAK,IAAL,EAAW,KAAK,KAAK,MAAL,EAAa,QAAQ,KAAK,MAAL;AAC3C,sBAAkB,EAAlB;GAFE,CAF8C;;AAOlD,OAAI,IAAI,IAAJ,IAAY,KAAK,gBAAL,EAAuB;AACrC,WAAO,gBAAP,CAAwB,IAAxB,CAA6B,KAAK,gBAAL,CAAsB,IAAtB,CAA7B,EADqC;GAAvC;;AAIA,SAAO,MAAP,CAXkD;CAAxB;;AAc5B,OAAO,OAAP,GAAiB,MAAjB","file":"metadata-compiled.js","sourcesContent":["var f = require('util').format;\n\nvar Define = function(name, object, stream) {\n  this.name = name;\n  this.object = object;\n  this.stream = typeof stream == 'boolean' ? stream : false;\n  this.instrumentations = {};\n}\n\nDefine.prototype.classMethod = function(name, options) {\n  var keys = Object.keys(options).sort();\n  var key = generateKey(keys, options);\n\n  // Add a list of instrumentations\n  if(this.instrumentations[key] == null) {\n    this.instrumentations[key] = {\n      methods: [], options: options\n    }\n  }\n\n  // Push to list of method for this instrumentation\n  this.instrumentations[key].methods.push(name);\n}\n\nvar generateKey = function(keys, options) {\n  var parts = [];\n  for(var i = 0; i < keys.length; i++) {\n    parts.push(f('%s=%s', keys[i], options[keys[i]]));\n  }\n\n  return parts.join();\n}\n\nDefine.prototype.staticMethod = function(name, options) {\n  options.static = true;\n  var keys = Object.keys(options).sort();\n  var key = generateKey(keys, options);\n\n  // Add a list of instrumentations\n  if(this.instrumentations[key] == null) {\n    this.instrumentations[key] = {\n      methods: [], options: options\n    }\n  }\n\n  // Push to list of method for this instrumentation\n  this.instrumentations[key].methods.push(name);\n}\n\nDefine.prototype.generate = function(keys, options) {\n  // Generate the return object\n  var object = {\n    name: this.name, obj: this.object, stream: this.stream,\n    instrumentations: []\n  }\n\n  for(var name in this.instrumentations) {\n    object.instrumentations.push(this.instrumentations[name]);\n  }\n\n  return object;\n}\n\nmodule.exports = Define;"]}