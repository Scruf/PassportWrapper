{"version":3,"sources":["upload.js"],"names":[],"mappings":"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","file":"upload-compiled.js","sourcesContent":["var core = require('mongodb-core');\nvar crypto = require('crypto');\nvar shallowClone = require('../utils').shallowClone;\nvar stream = require('stream');\nvar util = require('util');\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.chunkSizeBytes=null] The chunk size to use, in bytes\n * @param {number} [options.w=null] The write concern\n * @param {number} [options.wtimeout=null] The write concern timeout\n * @param {number} [options.j=null] The journal write concern\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance.\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n\n  this.id = core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = new Buffer(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false,\n    aborted: false,\n    promiseLibrary: this.bucket.s.promiseLibrary\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * `end()` was called and the write stream successfully wrote the file\n * metadata and all the chunks to MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Places this write stream into an aborted state (all future writes fail)\n * and deletes all chunks that have already been written.\n *\n * @method\n * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred\n * @return {Promise} if no callback specified\n */\n\nGridFSBucketWriteStream.prototype.abort = function(callback) {\n  if (this.state.streamEnd) {\n    var error = new Error('Cannot abort a stream that has already completed');\n    if (typeof callback == 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  if (this.state.aborted) {\n    var error = new Error('Cannot call abort() on a stream twice');\n    if (typeof callback == 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  this.state.aborted = true;\n  this.chunks.deleteMany({ files_id: this.id }, function(error) {\n    if(typeof callback == 'function') callback(error);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  if (checkAborted(this, callback)) {\n    return;\n  }\n  var _this = this;\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', callback);\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  var _this = this;\n  var inputBuf = (Buffer.isBuffer(chunk)) ?\n    chunk : new Buffer(chunk, encoding);\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 &&\n            index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      var index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.state.streamEnd &&\n      _this.state.outstandingRequests === 0 &&\n      !_this.state.errored) {\n    var filesDoc = createFilesDoc(_this.id, _this.length, _this.chunkSizeBytes,\n      _this.md5.digest('hex'), _this.filename, _this.options.contentType,\n      _this.options.aliases, _this.options.metadata);\n\n    if (checkAborted(_this, callback)) {\n      return false;\n    }\n\n    _this.files.insert(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 &&\n            index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        var index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType,\n  aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    md5: md5,\n    filename: filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  var inputBuf = (Buffer.isBuffer(chunk)) ?\n    chunk : new Buffer(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos,\n      inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      _this.md5.update(_this.bufToStore);\n      var doc = createChunkDoc(_this.id, _this.n, _this.bufToStore);\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(_this, callback)) {\n        return false;\n      }\n\n      _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = concern.w;\n    obj.wtimeout = concern.wtimeout;\n    obj.j = concern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = new Buffer(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  _this.md5.update(remnant);\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkAborted(_this, callback) {\n  if (_this.state.aborted) {\n    if(typeof callback == 'function') {\n      callback(new Error('this stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n"]}