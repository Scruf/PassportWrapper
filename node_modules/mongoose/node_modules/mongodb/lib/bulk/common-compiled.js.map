{"version":3,"sources":["common.js"],"names":[],"mappings":"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","file":"common-compiled.js","sourcesContent":["\"use strict\";\n\nvar utils = require('../utils'),\n  Long = require('mongodb-core').BSON.Long,\n  Timestamp = require('mongodb-core').BSON.Timestamp;\n\n// Error codes\nvar UNKNOWN_ERROR = 8;\nvar INVALID_BSON_ERROR = 22;\nvar WRITE_CONCERN_ERROR = 64;\nvar MULTIPLE_ERROR = 65;\n\n// Insert types\nvar INSERT = 1;\nvar UPDATE = 2;\nvar REMOVE = 3\n\n\n// Get write concern\nvar writeConcern = function(target, col, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    target.writeConcern = options;\n  } else if(col.writeConcern.w != null || col.writeConcern.j != null || col.writeConcern.fsync != null) {\n    target.writeConcern = col.writeConcern;\n  }\n\n  return target\n}\n\n/**\n * Helper function to define properties\n * @ignore\n */\nvar defineReadOnlyProperty = function(self, name, value) {\n  Object.defineProperty(self, name, {\n      enumerable: true\n    , get: function() {\n      return value;\n    }\n  });\n}\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n * @ignore\n */\nvar Batch = function(batchType, originalZeroIndex) {\n  this.originalZeroIndex = originalZeroIndex;\n  this.currentIndex = 0;\n  this.originalIndexes = [];\n  this.batchType = batchType;\n  this.operations = [];\n  this.size = 0;\n  this.sizeBytes = 0;\n}\n\n/**\n * Wraps a legacy operation so we can correctly rewrite it's error\n * @ignore\n */\nvar LegacyOp = function(batchType, operation, index) {\n  this.batchType = batchType;\n  this.index = index;\n  this.operation = operation;\n}\n\n/**\n * Create a new BulkWriteResult instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {boolean} ok Did bulk operation correctly execute\n * @property {number} nInserted number of inserted documents\n * @property {number} nUpdated number of documents updated logically\n * @property {number} nUpserted Number of upserted documents\n * @property {number} nModified Number of documents updated physically on disk\n * @property {number} nRemoved Number of removed documents\n * @return {BulkWriteResult} a BulkWriteResult instance\n */\nvar BulkWriteResult = function(bulkResult) {\n  defineReadOnlyProperty(this, \"ok\", bulkResult.ok);\n  defineReadOnlyProperty(this, \"nInserted\", bulkResult.nInserted);\n  defineReadOnlyProperty(this, \"nUpserted\", bulkResult.nUpserted);\n  defineReadOnlyProperty(this, \"nMatched\", bulkResult.nMatched);\n  defineReadOnlyProperty(this, \"nModified\", bulkResult.nModified);\n  defineReadOnlyProperty(this, \"nRemoved\", bulkResult.nRemoved);\n\n  /**\n   * Return an array of inserted ids\n   *\n   * @return {object[]}\n   */\n  this.getInsertedIds = function() {\n    return bulkResult.insertedIds;\n  }\n\n  /**\n   * Return an array of upserted ids\n   *\n   * @return {object[]}\n   */\n  this.getUpsertedIds = function() {\n    return bulkResult.upserted;\n  }\n\n  /**\n   * Return the upserted id at position x\n   *\n   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index\n   * @return {object}\n   */\n  this.getUpsertedIdAt = function(index) {\n    return bulkResult.upserted[index];\n  }\n\n  /**\n   * Return raw internal result\n   *\n   * @return {object}\n   */\n  this.getRawResponse = function() {\n    return bulkResult;\n  }\n\n  /**\n   * Returns true if the bulk operation contains a write error\n   *\n   * @return {boolean}\n   */\n  this.hasWriteErrors = function() {\n    return bulkResult.writeErrors.length > 0;\n  }\n\n  /**\n   * Returns the number of write errors off the bulk operation\n   *\n   * @return {number}\n   */\n  this.getWriteErrorCount = function() {\n    return bulkResult.writeErrors.length;\n  }\n\n  /**\n   * Returns a specific write error object\n   *\n   * @return {WriteError}\n   */\n  this.getWriteErrorAt = function(index) {\n    if(index < bulkResult.writeErrors.length) {\n      return bulkResult.writeErrors[index];\n    }\n    return null;\n  }\n\n  /**\n   * Retrieve all write errors\n   *\n   * @return {object[]}\n   */\n  this.getWriteErrors = function() {\n    return bulkResult.writeErrors;\n  }\n\n  /**\n   * Retrieve lastOp if available\n   *\n   * @return {object}\n   */\n  this.getLastOp = function() {\n    return bulkResult.lastOp;\n  }\n\n  /**\n   * Retrieve the write concern error if any\n   *\n   * @return {WriteConcernError}\n   */\n  this.getWriteConcernError = function() {\n    if(bulkResult.writeConcernErrors.length == 0) {\n      return null;\n    } else if(bulkResult.writeConcernErrors.length == 1) {\n      // Return the error\n      return bulkResult.writeConcernErrors[0];\n    } else {\n\n      // Combine the errors\n      var errmsg = \"\";\n      for(var i = 0; i < bulkResult.writeConcernErrors.length; i++) {\n        var err = bulkResult.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if(i == 0) errmsg = errmsg + \" and \";\n      }\n\n      return new WriteConcernError({ errmsg : errmsg, code : WRITE_CONCERN_ERROR });\n    }\n  }\n\n  this.toJSON = function() {\n    return bulkResult;\n  }\n\n  this.toString = function() {\n    return \"BulkWriteResult(\" + this.toJSON(bulkResult) + \")\";\n  }\n\n  this.isOk = function() {\n    return bulkResult.ok == 1;\n  }\n}\n\n/**\n * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {number} code Write concern error code.\n * @property {string} errmsg Write concern error message.\n * @return {WriteConcernError} a WriteConcernError instance\n */\nvar WriteConcernError = function(err) {\n  if(!(this instanceof WriteConcernError)) return new WriteConcernError(err);\n\n  // Define properties\n  defineReadOnlyProperty(this, \"code\", err.code);\n  defineReadOnlyProperty(this, \"errmsg\", err.errmsg);\n\n  this.toJSON = function() {\n    return {code: err.code, errmsg: err.errmsg};\n  }\n\n  this.toString = function() {\n    return \"WriteConcernError(\" + err.errmsg + \")\";\n  }\n}\n\n/**\n * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @property {number} code Write concern error code.\n * @property {number} index Write concern error original bulk operation index.\n * @property {string} errmsg Write concern error message.\n * @return {WriteConcernError} a WriteConcernError instance\n */\nvar WriteError = function(err) {\n  if(!(this instanceof WriteError)) return new WriteError(err);\n\n  // Define properties\n  defineReadOnlyProperty(this, \"code\", err.code);\n  defineReadOnlyProperty(this, \"index\", err.index);\n  defineReadOnlyProperty(this, \"errmsg\", err.errmsg);\n\n  //\n  // Define access methods\n  this.getOperation = function() {\n    return err.op;\n  }\n\n  this.toJSON = function() {\n    return {code: err.code, index: err.index, errmsg: err.errmsg, op: err.op};\n  }\n\n  this.toString = function() {\n    return \"WriteError(\" + JSON.stringify(this.toJSON()) + \")\";\n  }\n}\n\n/**\n * Merges results into shared data structure\n * @ignore\n */\nvar mergeBatchResults = function(ordered, batch, bulkResult, err, result) {\n  // If we have an error set the result to be the err object\n  if(err) {\n    result = err;\n  } else if(result && result.result) {\n    result = result.result;\n  } else if(result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if(result.ok == 0 && bulkResult.ok == 1) {\n    bulkResult.ok = 0;\n\n    var writeError = {\n        index: 0\n      , code: result.code || 0\n      , errmsg: result.message\n      , op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if(result.ok == 0 && bulkResult.ok == 0) {\n    return;\n  }\n\n  // Deal with opTime if available\n  if(result.opTime || result.lastOp) {\n    var opTime = result.lastOp || result.opTime;\n    var lastOpTS = null;\n    var lastOpT = null;\n\n    // We have a time stamp\n    if(opTime instanceof Timestamp) {\n      if(bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if(opTime.greaterThan(bulkResult.lastOp)) {\n        bulkResult.lastOp = opTime;\n      }\n    } else {\n      // Existing TS\n      if(bulkResult.lastOp) {\n        lastOpTS = typeof bulkResult.lastOp.ts == 'number'\n          ? Long.fromNumber(bulkResult.lastOp.ts) : bulkResult.lastOp.ts;\n        lastOpT = typeof bulkResult.lastOp.t == 'number'\n          ? Long.fromNumber(bulkResult.lastOp.t) : bulkResult.lastOp.t;\n      }\n\n      // Current OpTime TS\n      var opTimeTS = typeof opTime.ts == 'number'\n        ? Long.fromNumber(opTime.ts) : opTime.ts;\n      var opTimeT = typeof opTime.t == 'number'\n        ? Long.fromNumber(opTime.t) : opTime.t;\n\n      // Compare the opTime's\n      if(bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if(opTimeTS.greaterThan(lastOpTS)) {\n        bulkResult.lastOp = opTime;\n      } else if(opTimeTS.equals(lastOpTS)) {\n        if(opTimeT.greaterThan(lastOpT)) {\n          bulkResult.lastOp = opTime;\n        }\n      }\n    }\n  }\n\n  // If we have an insert Batch type\n  if(batch.batchType == INSERT && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if(batch.batchType == REMOVE && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  var nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if(Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for(var i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n          index: result.upserted[i].index + batch.originalZeroIndex\n        , _id: result.upserted[i]._id\n      });\n    }\n  } else if(result.upserted) {\n\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n        index: batch.originalZeroIndex\n      , _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if(batch.batchType == UPDATE && result.n) {\n    var nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if(typeof nModified == 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = null;\n    }\n  }\n\n  if(Array.isArray(result.writeErrors)) {\n    for(var i = 0; i < result.writeErrors.length; i++) {\n\n      var writeError = {\n          index: batch.originalZeroIndex + result.writeErrors[i].index\n        , code: result.writeErrors[i].code\n        , errmsg: result.writeErrors[i].errmsg\n        , op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if(result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var clone = {};\n  var keys = Object.keys(options);\n  for(var i = 0; i < keys.length; i++) {\n    clone[keys[i]] = options[keys[i]];\n  }\n\n  return clone;\n}\n\n// Exports symbols\nexports.BulkWriteResult = BulkWriteResult;\nexports.WriteError = WriteError;\nexports.Batch = Batch;\nexports.LegacyOp = LegacyOp;\nexports.mergeBatchResults = mergeBatchResults;\nexports.cloneOptions = cloneOptions;\nexports.writeConcern = writeConcern;\nexports.INVALID_BSON_ERROR = INVALID_BSON_ERROR;\nexports.WRITE_CONCERN_ERROR = WRITE_CONCERN_ERROR;\nexports.MULTIPLE_ERROR = MULTIPLE_ERROR;\nexports.UNKNOWN_ERROR = UNKNOWN_ERROR;\nexports.INSERT = INSERT;\nexports.UPDATE = UPDATE;\nexports.REMOVE = REMOVE;\n"]}