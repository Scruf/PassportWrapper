{"version":3,"sources":["asap.js"],"names":[],"mappings":"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","file":"asap-compiled.js","sourcesContent":["var len = 0;\nvar toString = {}.toString;\nvar vertxNext;\nvar customSchedulerFn;\n\nexport var asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n}\n\nexport function setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nexport function setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = (typeof window !== 'undefined') ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n  typeof importScripts !== 'undefined' &&\n  typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function() {\n    process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function() {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function() {\n    node.data = (iterations = ++iterations % 2);\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function() {\n    setTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i+=2) {\n    var callback = queue[i];\n    var arg = queue[i+1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i+1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch(e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n"]}