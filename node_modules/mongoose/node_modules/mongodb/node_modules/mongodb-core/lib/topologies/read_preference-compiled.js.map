{"version":3,"sources":["read_preference.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,cAAc,CAAC,kBAAD,EAAqB,WAArB,EAAkC,oBAAlC,EAAwD,SAAxD,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCJ,IAAI,iBAAiB,UAAS,UAAT,EAAqB,IAArB,EAA2B,OAA3B,EAAoC;AACvD,OAAK,UAAL,GAAkB,UAAlB,CADuD;AAEvD,OAAK,IAAL,GAAY,IAAZ,CAFuD;AAGvD,OAAK,OAAL,GAAe,OAAf,CAHuD;CAApC;;;;;;;AAWrB,eAAe,SAAf,CAAyB,OAAzB,GAAmC,YAAW;AAC5C,SAAO,YAAY,OAAZ,CAAoB,KAAK,UAAL,CAApB,IAAwC,CAAC,CAAD,CADH;CAAX;;;;;;;AASnC,eAAe,SAAf,CAAyB,MAAzB,GAAkC,UAAS,cAAT,EAAyB;AACzD,SAAO,eAAe,UAAf,IAA6B,KAAK,UAAL,CADqB;CAAzB;;;;;;;AASlC,eAAe,SAAf,CAAyB,MAAzB,GAAkC,YAAW;AAC3C,MAAI,iBAAiB,EAAC,MAAM,KAAK,UAAL,EAAxB,CADuC;AAE3C,MAAG,MAAM,OAAN,CAAc,KAAK,IAAL,CAAjB,EAA6B,eAAe,IAAf,GAAsB,KAAK,IAAL,CAAnD;AACA,SAAO,cAAP,CAH2C;CAAX;;;;;;;AAWlC,eAAe,OAAf,GAAyB,IAAI,cAAJ,CAAmB,SAAnB,CAAzB;;;;;;AAMA,eAAe,gBAAf,GAAkC,IAAI,cAAJ,CAAmB,kBAAnB,CAAlC;;;;;;AAMA,eAAe,SAAf,GAA2B,IAAI,cAAJ,CAAmB,WAAnB,CAA3B;;;;;;AAMA,eAAe,kBAAf,GAAoC,IAAI,cAAJ,CAAmB,oBAAnB,CAApC;;;;;;AAMA,eAAe,OAAf,GAAyB,IAAI,cAAJ,CAAmB,SAAnB,CAAzB;;AAEA,OAAO,OAAP,GAAiB,cAAjB","file":"read_preference-compiled.js","sourcesContent":["\"use strict\";\n\nvar needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];\n\n/**\n * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * \n * @example\n * var ReplSet = require('mongodb-core').ReplSet\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n * \n * var server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   var cursor = server.cursor('db.test'\n *     , {find: 'db.test', query: {}}\n *     , {readPreference: new ReadPreference('secondary')});\n *   cursor.next(function(err, doc) {\n *     server.destroy();\n *   });\n * });\n * \n * // Start connecting\n * server.connect();\n */\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} preference A string describing the preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @param {object} tags The tags object\n * @param {object} [options] Additional read preference options\n * @property {string} preference The preference string (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @property {object} tags The tags object\n * @property {object} options Additional read preference options\n * @return {ReadPreference}\n */\nvar ReadPreference = function(preference, tags, options) {\n  this.preference = preference;\n  this.tags = tags;\n  this.options = options;\n}\n\n/**\n * This needs slaveOk bit set\n * @method\n * @return {boolean}\n */\nReadPreference.prototype.slaveOk = function() {\n  return needSlaveOk.indexOf(this.preference) != -1;\n}\n\n/**\n * Are the two read preference equal\n * @method\n * @return {boolean}\n */\nReadPreference.prototype.equals = function(readPreference) {\n  return readPreference.preference == this.preference;\n}\n\n/**\n * Return JSON representation\n * @method\n * @return {Object}\n */\nReadPreference.prototype.toJSON = function() {\n  var readPreference = {mode: this.preference};\n  if(Array.isArray(this.tags)) readPreference.tags = this.tags;\n  return readPreference;\n}\n\n/**\n * Primary read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.primary = new ReadPreference('primary');\n/**\n * Primary Preferred read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');\n/**\n * Secondary read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.secondary = new ReadPreference('secondary');\n/**\n * Secondary Preferred read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');\n/**\n * Nearest read preference\n * @method\n * @return {ReadPreference}\n */\nReadPreference.nearest = new ReadPreference('nearest');\n\nmodule.exports = ReadPreference;"]}