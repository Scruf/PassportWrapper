{"version":3,"sources":["smoke_plugin.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAL;;;;;AAKJ,QAAQ,cAAR,GAAyB,UAAS,MAAT,EAAiB,UAAjB,EAA6B;AACpD,MAAI,cAAc,EAAE,SAAU,EAAV,EAAhB,CADgD;AAEpD,MAAI,eAAe,EAAf,CAFgD;;AAIpD,MAAI,gBAAgB;AAClB,gBAAY,UAAS,IAAT,EAAe,QAAf,EAAyB;AACnC,WAAK,SAAL,GAAiB,KAAK,GAAL,EAAjB,CADmC;AAEnC,mBAAa,KAAK,IAAL,CAAb,GAA0B,IAA1B,CAFmC;AAGnC,iBAHmC;KAAzB;AAKZ,eAAW,UAAS,IAAT,EAAe,QAAf,EAAyB;AAClC,kBAAY,OAAZ,CAAoB,IAApB,CAAyB;AACvB,gBAAQ,KAAK,MAAL;AACR,eAAO,KAAK,SAAL;AACP,aAAK,KAAK,GAAL,EAAL;AACA,mBAAW,KAAK,IAAL;AACX,mBAAW,CAAX;AACA,aAAK,EAAL;OANF,EADkC;AASlC,aAAO,aAAa,KAAK,IAAL,CAApB,CATkC;AAUlC,iBAVkC;KAAzB;AAYX,gBAAY,UAAS,GAAT,EAAc,QAAd,EAAwB;AAClC,SAAG,SAAH,CAAa,UAAb,EAAyB,KAAK,SAAL,CAAe,WAAf,CAAzB,EAAsD,YAAW;AAC/D,mBAD+D;OAAX,CAAtD,CADkC;KAAxB;GAlBV;;;AAJgD,SA8BpD,CAAQ,EAAR,CAAW,mBAAX,EAAgC,UAAS,GAAT,EAAc;;AAE5C,SAAK,IAAI,QAAJ,IAAgB,YAArB,EAAmC;AACjC,kBAAY,OAAZ,CAAoB,IAApB,CAAyB;AACvB,gBAAQ,MAAR;AACA,eAAO,aAAa,QAAb,EAAuB,SAAvB;AACP,aAAK,KAAK,GAAL,EAAL;AACA,mBAAW,QAAX;AACA,mBAAW,CAAX;AACA,aAAK,EAAL;OANF,EADiC;KAAnC;;;AAF4C,MAc5C,CAAG,aAAH,CAAiB,UAAjB,EAA6B,KAAK,SAAL,CAAe,WAAf,CAA7B;;;AAd4C,WAiB5C,CAAQ,KAAR,CAAc,IAAI,KAAJ,CAAd,CAjB4C;AAkB5C,YAAQ,IAAR,CAAa,CAAb,EAlB4C;GAAd,CAAhC,CA9BoD;;AAmDpD,SAAO,MAAP,CAAc,aAAd,EAnDoD;AAoDpD,SAAO,aAAP,CApDoD;CAA7B","file":"smoke_plugin-compiled.js","sourcesContent":["var fs = require('fs');\n\n/* Note: because this plugin uses process.on('uncaughtException'), only one\n * of these can exist at any given time. This plugin and anything else that\n * uses process.on('uncaughtException') will conflict. */\nexports.attachToRunner = function(runner, outputFile) {\n  var smokeOutput = { results : [] };\n  var runningTests = {};\n\n  var integraPlugin = {\n    beforeTest: function(test, callback) {\n      test.startTime = Date.now();\n      runningTests[test.name] = test;\n      callback();\n    },\n    afterTest: function(test, callback) {\n      smokeOutput.results.push({\n        status: test.status,\n        start: test.startTime,\n        end: Date.now(),\n        test_file: test.name,\n        exit_code: 0,\n        url: \"\"\n      });\n      delete runningTests[test.name];\n      callback();\n    },\n    beforeExit: function(obj, callback) {\n      fs.writeFile(outputFile, JSON.stringify(smokeOutput), function() {\n        callback();\n      });\n    }\n  };\n\n  // In case of exception, make sure we write file\n  process.on('uncaughtException', function(err) {\n    // Mark all currently running tests as failed\n    for (var testName in runningTests) {\n      smokeOutput.results.push({\n        status: \"fail\",\n        start: runningTests[testName].startTime,\n        end: Date.now(),\n        test_file: testName,\n        exit_code: 0,\n        url: \"\"\n      });\n    }\n\n    // write file\n    fs.writeFileSync(outputFile, JSON.stringify(smokeOutput));\n\n    // Standard NodeJS uncaught exception handler\n    console.error(err.stack);\n    process.exit(1);\n  });\n\n  runner.plugin(integraPlugin);\n  return integraPlugin;\n};\n"]}