{"version":3,"sources":["2_6_support.js"],"names":[],"mappings":"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","file":"2_6_support-compiled.js","sourcesContent":["\"use strict\";\n\nvar Insert = require('./commands').Insert\n  , Update = require('./commands').Update\n  , Remove = require('./commands').Remove\n  , Query = require('../connection/commands').Query\n  , copy = require('../connection/utils').copy\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , ReadPreference = require('../topologies/read_preference')\n  , f = require('util').format\n  , CommandResult = require('../topologies/command_result')\n  , MongoError = require('../error')\n  , Long = require('bson').Long\n  , getReadPreference = require('./shared').getReadPreference;\n\nvar WireProtocol = function() {}\n\n//\n// Execute a write operation\nvar executeWrite = function(topology, type, opsField, ns, ops, options, callback) {\n  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split(\".\");\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern || {};\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if(writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Options object\n  var opts = {};\n  if(type == 'insert') opts.checkKeys = true;\n  // Ensure we support serialization of functions\n  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;\n  if(options.ignoreUndefined) opts.ignoreUndefined = options.ignoreUndefined;\n  // Execute command\n  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'insert', 'documents', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'update', 'updates', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'delete', 'deletes', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) {\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, [cursorId]);\n  // Execute the kill cursor command\n  if(pool && pool.isConnected()) pool.write(killCursor.toBin(), callback, {immediateRelease:true});\n  // Set cursor to 0\n  cursorId = Long.ZERO;\n  // Return to caller\n  if(callback) callback(null, null);\n}\n\nWireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});\n\n  // Query callback\n  var queryCallback = function(err, r) {\n    if(err) return callback(err);\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId == 'number'\n      ? Long.fromNumber(r.cursorId)\n      : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  }\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryCallback.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if(typeof cursorState.promoteLongs == 'boolean') {\n    queryCallback.promoteLongs = cursorState.promoteLongs;\n  }\n\n  // Register a callback\n  callbacks.register(getMore.requestId, queryCallback);\n  // Write out the getMore command\n  connection.write(getMore.toBin(), queryCallback);\n}\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)\n  } else if(cursorState.cursorId != null) {\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if(cursorState.limit == 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n  // Using special modifier\n  var usesSpecialModifier = false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n    usesSpecialModifier = true;\n  }\n\n  // Add special modifiers to the query\n  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;\n  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;\n  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;\n  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;\n  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;\n  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;\n  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;\n  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;\n  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;\n  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;\n\n  if(cmd.explain) {\n\t// nToReturn must be 0 (match all) or negative (match N and close cursor)\n\t// nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    usesSpecialModifier = true;\n    findCmd['$explain'] = true;\n  }\n\n  // If we have a special modifier\n  if(usesSpecialModifier) {\n    findCmd['$query'] = cmd.query;\n  } else {\n    findCmd = cmd.query;\n  }\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n      numberToSkip: numberToSkip, numberToReturn: numberToReturn\n    , checkKeys: false, returnFieldSelector: cmd.fields\n    , serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if(typeof cmd.tailable == 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if(typeof cmd.oplogReplay == 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if(typeof cmd.noCursorTimeout == 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if(typeof cmd.awaitData == 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if(typeof cmd.partial == 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {}\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    finalCmd = {\n      '$query': finalCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\nmodule.exports = WireProtocol;\n"]}