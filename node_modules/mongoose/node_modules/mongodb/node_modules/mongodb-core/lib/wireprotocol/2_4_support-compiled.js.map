{"version":3,"sources":["2_4_support.js"],"names":[],"mappings":"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","file":"2_4_support-compiled.js","sourcesContent":["\"use strict\";\n\nvar Insert = require('./commands').Insert\n  , Update = require('./commands').Update\n  , Remove = require('./commands').Remove\n  , Query = require('../connection/commands').Query\n  , copy = require('../connection/utils').copy\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , ReadPreference = require('../topologies/read_preference')\n  , f = require('util').format\n  , CommandResult = require('../topologies/command_result')\n  , MongoError = require('../error')\n  , Long = require('bson').Long\n  , getReadPreference = require('./shared').getReadPreference;\n\n// Write concern fields\nvar writeConcernFields = ['w', 'wtimeout', 'j', 'fsync'];\n\nvar WireProtocol = function() {}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  options = options || {};\n  // Default is ordered execution\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var legacy = typeof options.legacy == 'boolean' ? options.legacy : false;\n  ops = Array.isArray(ops) ? ops :[ops];\n\n  // If we have more than a 1000 ops fails\n  if(ops.length > 1000) return callback(new MongoError(\"exceeded maximum write batch size of 1000\"));\n\n  // Write concern\n  var writeConcern = options.writeConcern || {w:1};\n\n  // We are unordered\n  if(!ordered || writeConcern.w == 0) {\n    return executeUnordered('insert', Insert, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n  }\n\n  return executeOrdered('insert', Insert, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n}\n\nWireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  options = options || {};\n  // Default is ordered execution\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  ops = Array.isArray(ops) ? ops :[ops];\n\n  // Write concern\n  var writeConcern = options.writeConcern || {w:1};\n\n  // We are unordered\n  if(!ordered || writeConcern.w == 0) {\n    return executeUnordered('update', Update, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n  }\n\n  return executeOrdered('update', Update, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n}\n\nWireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  options = options || {};\n  // Default is ordered execution\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  ops = Array.isArray(ops) ? ops :[ops];\n\n  // Write concern\n  var writeConcern = options.writeConcern || {w:1};\n\n  // We are unordered\n  if(!ordered || writeConcern.w == 0) {\n    return executeUnordered('remove', Remove, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n  }\n\n  return executeOrdered('remove', Remove, ismaster, ns, bson, pool, callbacks, ops, options, callback);\n}\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) {\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, [cursorId]);\n  // Execute the kill cursor command\n  if(pool && pool.isConnected()) pool.write(killCursor.toBin(), callback, {immediateRelease:true});\n  // Set cursor to 0\n  cursorId = Long.ZERO;\n  // Return to caller\n  if(callback) callback(null, null);\n}\n\nWireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});\n\n  // Query callback\n  var queryCallback = function(err, r) {\n    if(err) return callback(err);\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId == 'number'\n      ? Long.fromNumber(r.cursorId)\n      : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  }\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryCallback.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if(typeof cursorState.promoteLongs == 'boolean') {\n    queryCallback.promoteLongs = cursorState.promoteLongs;\n  }\n\n  // Register a callback\n  callbacks.register(getMore.requestId, queryCallback);\n  // Write out the getMore command\n  connection.write(getMore.toBin(), queryCallback);\n}\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)\n  } else if(cursorState.cursorId != null) {\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if(cursorState.limit == 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n  // Using special modifier\n  var usesSpecialModifier = false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n    usesSpecialModifier = true;\n  }\n\n  // Add special modifiers to the query\n  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;\n  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;\n  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;\n  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;\n  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;\n  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;\n  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;\n  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;\n  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;\n  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;\n\n  if(cmd.explain) {\n\t// nToReturn must be 0 (match all) or negative (match N and close cursor)\n\t// nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    usesSpecialModifier = true;\n    findCmd['$explain'] = true;\n  }\n\n  // If we have a special modifier\n  if(usesSpecialModifier) {\n    findCmd['$query'] = cmd.query;\n  } else {\n    findCmd = cmd.query;\n  }\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Set up the serialize and ignoreUndefined fields\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n      numberToSkip: numberToSkip, numberToReturn: numberToReturn\n    , checkKeys: false, returnFieldSelector: cmd.fields\n    , serializeFunctions: serializeFunctions, ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if(typeof cmd.tailable == 'boolean') query.tailable = cmd.tailable;\n  if(typeof cmd.oplogReplay == 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if(typeof cmd.noCursorTimeout == 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if(typeof cmd.awaitData == 'boolean') query.awaitData = cmd.awaitData;\n  if(typeof cmd.partial == 'boolean') query.partial = cmd.partial;\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {}\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) delete cmd['readConcern'];\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    finalCmd = {\n      '$query': finalCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\nvar hasWriteConcern = function(writeConcern) {\n  if(writeConcern.w\n    || writeConcern.wtimeout\n    || writeConcern.j == true\n    || writeConcern.fsync == true\n    || Object.keys(writeConcern).length == 0) {\n    return true;\n  }\n  return false;\n}\n\nvar cloneWriteConcern = function(writeConcern) {\n  var wc = {};\n  if(writeConcern.w != null) wc.w = writeConcern.w;\n  if(writeConcern.wtimeout != null) wc.wtimeout = writeConcern.wtimeout;\n  if(writeConcern.j != null) wc.j = writeConcern.j;\n  if(writeConcern.fsync != null) wc.fsync = writeConcern.fsync;\n  return wc;\n}\n\n//\n// Aggregate up all the results\n//\nvar aggregateWriteOperationResults = function(opType, ops, results, connection) {\n  var finalResult = { ok: 1, n: 0 }\n\n  // Map all the results coming back\n  for(var i = 0; i < results.length; i++) {\n    var result = results[i];\n    var op = ops[i];\n\n    if((result.upserted || (result.updatedExisting == false)) && finalResult.upserted == null) {\n      finalResult.upserted = [];\n    }\n\n    // Push the upserted document to the list of upserted values\n    if(result.upserted) {\n      finalResult.upserted.push({index: i, _id: result.upserted});\n    }\n\n    // We have an upsert where we passed in a _id\n    if(result.updatedExisting == false && result.n == 1 && result.upserted == null) {\n      finalResult.upserted.push({index: i, _id: op.q._id});\n    }\n\n    // We have an insert command\n    if(result.ok == 1 && opType == 'insert' && result.err == null) {\n      finalResult.n = finalResult.n + 1;\n    }\n\n    // We have a command error\n    if(result != null && result.ok == 0 || result.err || result.errmsg) {\n      if(result.ok == 0) finalResult.ok = 0;\n      finalResult.code = result.code;\n      finalResult.errmsg = result.errmsg || result.err || result.errMsg;\n\n      // Check if we have a write error\n      if(result.code == 11000\n        || result.code == 11001\n        || result.code == 12582\n        || result.code == 16544\n        || result.code == 16538\n        || result.code == 16542\n        || result.code == 14\n        || result.code == 13511) {\n        if(finalResult.writeErrors == null) finalResult.writeErrors = [];\n        finalResult.writeErrors.push({\n            index: i\n          , code: result.code\n          , errmsg: result.errmsg || result.err || result.errMsg\n        });\n      } else {\n        finalResult.writeConcernError = {\n            code: result.code\n          , errmsg: result.errmsg || result.err || result.errMsg\n        }\n      }\n    } else if(typeof result.n == 'number') {\n      finalResult.n += result.n;\n    } else {\n      finalResult.n += 1;\n    }\n\n    // Result as expected\n    if(result != null && result.lastOp) finalResult.lastOp = result.lastOp;\n  }\n\n  // Return finalResult aggregated results\n  return new CommandResult(finalResult, connection);\n}\n\n//\n// Execute all inserts in an ordered manner\n//\nvar executeOrdered = function(opType ,command, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  var _ops = ops.slice(0);\n  // Bind to current domain\n  callback = bindToCurrentDomain(callback);\n  // Collect all the getLastErrors\n  var getLastErrors = [];\n\n  // Execute an operation\n  var executeOp = function(list, _callback) {\n    // No more items in the list\n    if(list.length == 0) {\n      return process.nextTick(function() {\n        _callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));\n      });\n    }\n\n    // Get the first operation\n    var doc = list.shift();\n    // Create an insert command\n    var op = new command(Query.getRequestId(), ismaster, bson, ns, [doc], options);\n    // Write concern\n    var optionWriteConcern = options.writeConcern || {w:1};\n    // Final write concern\n    var writeConcern = cloneWriteConcern(optionWriteConcern);\n\n    // Get the db name\n    var db = ns.split('.').shift();\n\n    try {\n      // Add binary message to list of commands to execute\n      var commands = [op.toBin()];\n\n      // If write concern 0 don't fire getLastError\n      if(hasWriteConcern(writeConcern)) {\n        var getLastErrorCmd = {getlasterror: 1};\n        // Merge all the fields\n        for(var i = 0; i < writeConcernFields.length; i++) {\n          if(writeConcern[writeConcernFields[i]] != null) {\n            getLastErrorCmd[writeConcernFields[i]] = writeConcern[writeConcernFields[i]];\n          }\n        }\n\n        // Create a getLastError command\n        var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});\n        // Add getLastError command to list of ops to execute\n        commands.push(getLastErrorOp.toBin());\n\n        // getLastError callback\n        var getLastErrorCallback = function(err, result) {\n          if(err) return callback(err);\n          // Get the document\n          var doc = result.documents[0];\n          // Save the getLastError document\n          getLastErrors.push(doc);\n\n          // If we have an error terminate\n          if(doc.ok == 0 || doc.err || doc.errmsg) {\n            return callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, result.connection));\n          }\n\n          // Execute the next op in the list\n          executeOp(list, callback);\n        }\n\n        // Register the callback\n        callbacks.register(getLastErrorOp.requestId, getLastErrorCallback);\n        // Write both commands out at the same time\n        pool.write(commands, getLastErrorCallback);\n      } else {\n        // Write both commands out at the same time\n        pool.write(commands, callback, {immediateRelease:true});\n      }\n    } catch(err) {\n      if(typeof err == 'string') err = new MongoError(err);\n      // We have a serialization error, rewrite as a write error to have same behavior as modern\n      // write commands\n      getLastErrors.push({ ok: 1, errmsg: err.message, code: 14 });\n      // Return due to an error\n      process.nextTick(function() {\n        callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));\n      });\n    }\n  }\n\n  // Execute the operations\n  executeOp(_ops, callback);\n}\n\nvar executeUnordered = function(opType, command, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  // Bind to current domain\n  callback = bindToCurrentDomain(callback);\n  // Total operations to write\n  var totalOps = ops.length;\n  // Collect all the getLastErrors\n  var getLastErrors = [];\n  // Write concern\n  var optionWriteConcern = options.writeConcern || {w:1};\n  // Final write concern\n  var writeConcern = cloneWriteConcern(optionWriteConcern);\n  // Driver level error\n  var error;\n\n  // Execute all the operations\n  for(var i = 0; i < ops.length; i++) {\n    // Create an insert command\n    var op = new command(Query.getRequestId(), ismaster, bson, ns, [ops[i]], options);\n    // Get db name\n    var db = ns.split('.').shift();\n\n    try {\n      // Add binary message to list of commands to execute\n      var commands = [op.toBin()];\n\n      // If write concern 0 don't fire getLastError\n      if(hasWriteConcern(writeConcern)) {\n        var getLastErrorCmd = {getlasterror: 1};\n        // Merge all the fields\n        for(var j = 0; j < writeConcernFields.length; j++) {\n          if(writeConcern[writeConcernFields[j]] != null)\n            getLastErrorCmd[writeConcernFields[j]] = writeConcern[writeConcernFields[j]];\n        }\n\n        // Create a getLastError command\n        var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});\n        // Add getLastError command to list of ops to execute\n        commands.push(getLastErrorOp.toBin());\n\n        // Give the result from getLastError the right index\n        var callbackOp = function(_index) {\n          return function(err, result) {\n            if(err) error = err;\n            // Update the number of operations executed\n            totalOps = totalOps - 1;\n            // Save the getLastError document\n            if(!err) getLastErrors[_index] = result.documents[0];\n            // Check if we are done\n            if(totalOps == 0) {\n              process.nextTick(function() {\n                if(error) return callback(error);\n                callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, result.connection));\n              });\n            }\n          }\n        }\n\n        // Register the callback\n        callbacks.register(getLastErrorOp.requestId, callbackOp(i));\n        // Write both commands out at the same time\n        pool.write(commands, callbackOp(i));\n      } else {\n        // Write both commands out at the same time\n        pool.write(commands, callback, {immediateRelease:true});\n      }\n    } catch(err) {\n      if(typeof err == 'string') err = new MongoError(err);\n      // Update the number of operations executed\n      totalOps = totalOps - 1;\n      // We have a serialization error, rewrite as a write error to have same behavior as modern\n      // write commands\n      getLastErrors[i] = { ok: 1, errmsg: err.message, code: 14 };\n      // Check if we are done\n      if(totalOps == 0) {\n        callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));\n      }\n    }\n  }\n\n  // Empty w:0 return\n  if(writeConcern\n    && writeConcern.w == 0 && callback) {\n    callback(null, null);\n  }\n}\n\nmodule.exports = WireProtocol;\n"]}