{"version":3,"sources":["3_2_support.js"],"names":[],"mappings":"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","file":"3_2_support-compiled.js","sourcesContent":["\"use strict\";\n\nvar Insert = require('./commands').Insert\n  , Update = require('./commands').Update\n  , Remove = require('./commands').Remove\n  , Query = require('../connection/commands').Query\n  , copy = require('../connection/utils').copy\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , ReadPreference = require('../topologies/read_preference')\n  , f = require('util').format\n  , CommandResult = require('../topologies/command_result')\n  , MongoError = require('../error')\n  , Long = require('bson').Long\n  , getReadPreference = require('./shared').getReadPreference;\n\nvar WireProtocol = function(legacyWireProtocol) {\n  this.legacyWireProtocol = legacyWireProtocol;\n}\n\n//\n// Execute a write operation\nvar executeWrite = function(topology, type, opsField, ns, ops, options, callback) {\n  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split(\".\");\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if(writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = {};\n  if(type == 'insert') opts.checkKeys = true;\n  // Ensure we support serialization of functions\n  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;\n  if(options.ignoreUndefined) opts.ignoreUndefined = options.ignoreUndefined;\n  // Execute command\n  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'insert', 'documents', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'update', 'updates', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'delete', 'deletes', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callbacks, callback) {\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n  // Create getMore command\n  var killcursorCmd = {\n    killCursors: parts.join('.'),\n    cursors: [cursorId]\n  }\n\n  // Build Query object\n  var query = new Query(bson, commandns, killcursorCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, returnFieldSelector: null\n  });\n\n  // Set query flags\n  query.slaveOk = true;\n\n  // Execute the kill cursor command\n  if(pool && pool.isConnected()) {\n    pool.write(query.toBin(), callback);\n  }\n\n  // Kill cursor callback\n  var killCursorCallback = function(err, r) {\n    if(err) {\n      if(typeof callback != 'function') return;\n      return callback(err);\n    }\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      if(typeof callback != 'function') return;\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    if(!Array.isArray(r.documents) || r.documents.length == 0) {\n      if(typeof callback != 'function') return;\n      return callback(new MongoError(f('invalid killCursors result returned for cursor id %s', cursorState.cursorId)));\n    }\n\n    // Return the result\n    if(typeof callback == 'function') {\n      callback(null, r.documents[0]);\n    }\n  }\n\n  // Register a callback\n  callbacks.register(query.requestId, killCursorCallback);\n}\n\nWireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {\n  options = options || {};\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n\n  // Check if we have an maxTimeMS set\n  var maxTimeMS = typeof cursorState.cmd.maxTimeMS == 'number' ? cursorState.cmd.maxTimeMS : 3000;\n\n  // Create getMore command\n  var getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: parts.join('.'),\n    batchSize: Math.abs(batchSize)\n  }\n\n  if(cursorState.cmd.tailable\n    && typeof cursorState.cmd.maxAwaitTimeMS == 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  // Build Query object\n  var query = new Query(bson, commandns, getMoreCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, returnFieldSelector: null\n  });\n\n  // Set query flags\n  query.slaveOk = true;\n\n  // Query callback\n  var queryCallback = function(err, r) {\n    if(err) return callback(err);\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    // Raw, return all the extracted documents\n    if(raw) {\n      cursorState.documents = r.documents;\n      cursorState.cursorId = r.cursorId;\n      return callback(null, r.documents);\n    }\n\n    // We have an error detected\n    if(r.documents[0].ok == 0) {\n      return callback(MongoError.create(r.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    var cursorId = typeof r.documents[0].cursor.id == 'number'\n      ? Long.fromNumber(r.documents[0].cursor.id)\n      : r.documents[0].cursor.id;\n\n    // Set all the values\n    cursorState.documents = r.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    // Return the result\n    callback(null, r.documents[0], r.connection);\n  }\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryCallback.raw = raw;\n  }\n\n  // Add the result field needed\n  queryCallback.documentsReturnedIn = 'nextBatch';\n\n  // Check if we need to promote longs\n  if(typeof cursorState.promoteLongs == 'boolean') {\n    queryCallback.promoteLongs = cursorState.promoteLongs;\n  }\n\n  // Register a callback\n  callbacks.register(query.requestId, queryCallback);\n  // Write out the getMore command\n  connection.write(query.toBin(), queryCallback);\n}\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    // Create the find command\n    var query = executeFindCommand(bson, ns, cmd, cursorState, topology, options)\n    // Mark the cmd as virtual\n    cmd.virtual = false;\n    // Signal the documents are in the firstBatch value\n    query.documentsReturnedIn = 'firstBatch';\n    // Return the query\n    return query;\n  } else if(cursorState.cursorId != null) {\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n// FIND/GETMORE SPEC\n// {\n//     “find”: <string>,\n//     “filter”: { ... },\n//     “sort”: { ... },\n//     “projection”: { ... },\n//     “hint”: { ... },\n//     “skip”: <int>,\n//     “limit”: <int>,\n//     “batchSize”: <int>,\n//     “singleBatch”: <bool>,\n//     “comment”: <string>,\n//     “maxScan”: <int>,\n//     “maxTimeMS”: <int>,\n//     “max”: { ... },\n//     “min”: { ... },\n//     “returnKey”: <bool>,\n//     “showRecordId”: <bool>,\n//     “snapshot”: <bool>,\n//     “tailable”: <bool>,\n//     “oplogReplay”: <bool>,\n//     “noCursorTimeout”: <bool>,\n//     “awaitData”: <bool>,\n//     “partial”: <bool>,\n//     “$readPreference”: { ... }\n// }\n\n//\n// Execute a find command\nvar executeFindCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n  // Command namespace\n  var commandns = f('%s.$cmd', parts.shift());\n\n  // Build actual find command\n  var findCmd = {\n    find: parts.join('.')\n  };\n\n  // I we provided a filter\n  if(cmd.query) findCmd.filter = cmd.query;\n\n  // Sort value\n  var sortValue = cmd.sort;\n\n  // Handle issue of sort being an Array\n  if(Array.isArray(sortValue)) {\n    var sortObject = {};\n\n    if(sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      var sortDirection = sortValue[1];\n      // Translate the sort order text\n      if(sortDirection == 'asc') {\n        sortDirection = 1;\n      } else if(sortDirection == 'desc') {\n        sortDirection = -1;\n      }\n\n      // Set the sort order\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for(var i = 0; i < sortValue.length; i++) {\n        var sortDirection = sortValue[i][1];\n        // Translate the sort order text\n        if(sortDirection == 'asc') {\n          sortDirection = 1;\n        } else if(sortDirection == 'desc') {\n          sortDirection = -1;\n        }\n\n        // Set the sort order\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  };\n\n  // Add sort to command\n  if(cmd.sort) findCmd.sort = sortValue;\n  // Add a projection to the command\n  if(cmd.fields) findCmd.projection = cmd.fields;\n  // Add a hint to the command\n  if(cmd.hint) findCmd.hint = cmd.hint;\n  // Add a skip\n  if(cmd.skip) findCmd.skip = cmd.skip;\n  // Add a limit\n  if(cmd.limit) findCmd.limit = cmd.limit;\n  // Add a batchSize\n  if(typeof cmd.batchSize == 'number') findCmd.batchSize = Math.abs(cmd.batchSize);\n\n  // Check if we wish to have a singleBatch\n  if(cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  // If we have comment set\n  if(cmd.comment) findCmd.comment = cmd.comment;\n\n  // If we have maxScan\n  if(cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n\n  // If we have maxTimeMS set\n  if(cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n\n  // If we have min\n  if(cmd.min) findCmd.min = cmd.min;\n\n  // If we have max\n  if(cmd.max) findCmd.max = cmd.max;\n\n  // If we have returnKey set\n  if(cmd.returnKey) findCmd.returnKey = cmd.returnKey;\n\n  // If we have showDiskLoc set\n  if(cmd.showDiskLoc) findCmd.showRecordId = cmd.showDiskLoc;\n\n  // If we have snapshot set\n  if(cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n\n  // If we have tailable set\n  if(cmd.tailable) findCmd.tailable = cmd.tailable;\n\n  // If we have oplogReplay set\n  if(cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n\n  // If we have noCursorTimeout set\n  if(cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n\n  // If we have awaitData set\n  if(cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if(cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n\n  // If we have partial set\n  if(cmd.partial) findCmd.partial = cmd.partial;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if(cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    }\n  }\n\n  // Did we provide a readConcern\n  if(cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // Set up the serialize and ignoreUndefined fields\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    findCmd = {\n      '$query': findCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, commandns, findCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, returnFieldSelector: null\n    , serializeFunctions: serializeFunctions, ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {}\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    finalCmd = {\n      '$query': finalCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\nmodule.exports = WireProtocol;\n"]}