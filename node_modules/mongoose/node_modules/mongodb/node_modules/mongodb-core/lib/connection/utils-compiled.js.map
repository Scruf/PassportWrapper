{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;;;AAGA,IAAI,cAAc,UAAS,GAAT,EAAc,IAAd,EAAoB,IAApB,EAA0B,MAA1B,EAAkC;AAClD,SAAO,cAAP,CAAsB,GAAtB,EAA2B,KAAK,IAAL,EAAW;AAClC,gBAAW,IAAX;AACA,SAAK,UAAS,KAAT,EAAgB;AACnB,UAAG,OAAO,KAAP,IAAgB,SAAhB,EAA2B,MAAM,IAAI,KAAJ,CAAU,EAAE,uBAAF,EAA2B,KAAK,IAAL,CAArC,CAAN,CAA9B;;AADmB,UAGhB,SAAS,IAAT,EAAe,OAAO,KAAP,IAAgB,IAAhB,CAAlB;;AAHmB,UAKhB,SAAS,KAAT,IAAkB,CAAC,OAAO,KAAP,GAAe,IAAf,CAAD,IAAyB,IAAzB,EAA+B,OAAO,KAAP,IAAgB,IAAhB,CAApD;AACA,WAAK,KAAL,GAAa,KAAb,CANmB;KAAhB;AAQL,SAAK,YAAW;AAAE,aAAO,KAAK,KAAL,CAAT;KAAX;GAVT,EADkD;CAAlC;;;AAgBlB,IAAI,cAAc,UAAS,GAAT,EAAc,QAAd,EAAwB,SAAxB,EAAmC,MAAnC,EAA2C,IAA3C,EAAiD;AACjE,SAAO,cAAP,CAAsB,GAAtB,EAA2B,QAA3B,EAAqC;AACnC,gBAAW,IAAX;AACA,SAAK,YAAW;;AAEd,UAAG,OAAO,SAAP,KAAqB,IAArB,IAA6B,IAAI,QAAJ,IAAgB,CAAC,IAAI,QAAJ,EAAD,EAAiB;AAC/D,YAAI,KAAJ,GAD+D;OAAjE;;;AAFc,UAOX,OAAO,IAAP,IAAe,UAAf,EAA2B,OAAO,KAAK,OAAO,SAAP,CAAL,CAAP,CAA9B;;AAPc,aASP,OAAO,SAAP,CAAP,CATc;KAAX;GAFP,EADiE;CAAjD;;;AAkBlB,IAAI,oBAAoB,UAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,EAA2B;AACjD,SAAO,cAAP,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC/B,gBAAW,IAAX;AACA,SAAK,YAAW;AACd,aAAO,KAAP,CADc;KAAX;GAFP,EADiD;CAA3B;;;AAUxB,IAAI,OAAO,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC9B,SAAO,QAAQ,EAAR,CADuB;AAE9B,OAAI,IAAI,IAAJ,IAAY,IAAhB,EAAsB,KAAK,IAAL,IAAa,KAAK,IAAL,CAAb,CAAtB;AACA,SAAO,IAAP,CAH8B;CAArB;;AAMX,IAAI,eAAe,UAAS,WAAT,EAAsB,OAAtB,EAA+B;AAChD,MAAI,eAAe,EAAf,CAD4C;AAEhD,cAAY,OAAZ,CAAoB,UAAS,CAAT,EAAY;AAC9B,iBAAa,CAAb,IAAkB,QAAQ,CAAR,CAAlB,CAD8B;GAAZ,CAApB,CAFgD;;AAMhD,SAAO,YAAP,CANgD;CAA/B;;;;;AAYnB,IAAI,sBAAsB,UAAS,QAAT,EAAmB;AAC3C,MAAI,SAAS,QAAQ,MAAR,CAD8B;AAE3C,MAAG,UAAU,IAAV,IAAkB,YAAY,IAAZ,EAAkB,OAAO,QAAP,CAAvC;AACA,MAAI,gBAAgB,OAAO,IAAP,CAAY,QAAZ,CAAhB;;;AAHuC,OAMvC,IAAI,IAAJ,IAAY,QAAhB,EAA0B;AACxB,kBAAc,IAAd,IAAsB,SAAS,IAAT,CAAtB,CADwB;GAA1B;;;AAN2C,SAWpC,aAAP,CAX2C;CAAnB;;AAc1B,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,iBAAR,GAA4B,iBAA5B;AACA,QAAQ,IAAR,GAAe,IAAf;AACA,QAAQ,mBAAR,GAA8B,mBAA9B;AACA,QAAQ,YAAR,GAAuB,YAAvB","file":"utils-compiled.js","sourcesContent":["\"use strict\";\n\n// Set property function\nvar setProperty = function(obj, prop, flag, values) {\n  Object.defineProperty(obj, prop.name, {\n      enumerable:true,\n      set: function(value) {\n        if(typeof value != 'boolean') throw new Error(f(\"%s required a boolean\", prop.name));\n        // Flip the bit to 1\n        if(value == true) values.flags |= flag;\n        // Flip the bit to 0 if it's set, otherwise ignore\n        if(value == false && (values.flags & flag) == flag) values.flags ^= flag;\n        prop.value = value;\n      }\n    , get: function() { return prop.value; }\n  });\n}\n\n// Set property function\nvar getProperty = function(obj, propName, fieldName, values, func) {\n  Object.defineProperty(obj, propName, {\n    enumerable:true,\n    get: function() {\n      // Not parsed yet, parse it\n      if(values[fieldName] == null && obj.isParsed && !obj.isParsed()) {\n        obj.parse();\n      }\n\n      // Do we have a post processing function\n      if(typeof func == 'function') return func(values[fieldName]);\n      // Return raw value\n      return values[fieldName];\n    }\n  });\n}\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable:true,\n    get: function() {\n      return value\n    }\n  });\n}\n\n// Shallow copy\nvar copy = function(fObj, tObj) {\n  tObj = tObj || {};\n  for(var name in fObj) tObj[name] = fObj[name];\n  return tObj;\n}\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) return callback;\n  var boundCallback = domain.bind(callback);\n\n  // Copy all fields over\n  for(var name in callback) {\n    boundCallback[name] = callback[name];\n  }\n\n  // Return the bound callback\n  return boundCallback;\n}\n\nexports.setProperty = setProperty;\nexports.getProperty = getProperty;\nexports.getSingleProperty = getSingleProperty;\nexports.copy = copy;\nexports.bindToCurrentDomain = bindToCurrentDomain;\nexports.debugOptions = debugOptions;\n"]}