{"version":3,"sources":["require_optional_tests.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAT;IACF,mBAAmB,QAAQ,KAAR,CAAnB;;AAEF,SAAS,kBAAT,EAA6B,YAAW;AACtC,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,UAAU,iBAAiB,aAAjB,CAAV,CAD+C;AAEnD,aAAO,EAAP,CAAU,OAAV,EAFmD;KAAX,CAA1C,CADuC;;AAMvC,OAAG,4CAAH,EAAiD,YAAW;AAC1D,UAAI;AACF,yBAAiB,IAAjB,EADE;OAAJ,CAEE,OAAM,CAAN,EAAS;AACT,eAAO,KAAP,CAAa,2BAAb,EAA0C,EAAE,IAAF,CAA1C,CADS;AAET,eAFS;OAAT;;AAKF,aAAO,EAAP,CAAU,KAAV,EAR0D;KAAX,CAAjD,CANuC;;AAiBvC,OAAG,4CAAH,EAAiD,YAAW;AAC1D,aAAO,KAAP,CAAa,SAAb,EAAwB,iBAAiB,cAAjB,CAAxB,EAD0D;KAAX,CAAjD,CAjBuC;GAAX,CAA9B,CADsC;;AAuBtC,WAAS,8BAAT,EAAyC,YAAW;AAClD,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,OAAO,iBAAiB,uBAAjB,CAAP,CAD+C;AAEnD,aAAO,EAAP,CAAU,IAAV,EAFmD;KAAX,CAA1C,CADkD;GAAX,CAAzC,CAvBsC;;AA8BtC,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,oCAAH,EAAyC,YAAW;AAClD,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,IAAxB,CAApB,EADkD;AAElD,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,aAAxB,CAAnB,EAFkD;AAGlD,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,uBAAxB,CAAnB,EAHkD;AAIlD,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,cAAxB,CAApB,EAJkD;KAAX,CAAzC,CADuC;GAAX,CAA9B,CA9BsC;CAAX,CAA7B","file":"require_optional_tests-compiled.js","sourcesContent":["var assert = require('assert'),\n  require_optional = require('../');\n\ndescribe('Require Optional', function() {\n  describe('top level require', function() {\n    it('should correctly require co library', function() {\n      var promise = require_optional('es6-promise');\n      assert.ok(promise);\n    });\n\n    it('should fail to require es6-promise library', function() {\n      try {\n        require_optional('co');\n      } catch(e) {\n        assert.equal('OPTIONAL_MODULE_NOT_FOUND', e.code);\n        return;\n      }\n\n      assert.ok(false);\n    });\n\n    it('should ignore optional library not defined', function() {\n      assert.equal(undefined, require_optional('es6-promise2'));\n    });\n  });\n\n  describe('internal module file require', function() {\n    it('should correctly require co library', function() {\n      var Long = require_optional('bson/lib/bson/long.js');\n      assert.ok(Long);\n    });\n  });\n\n  describe('top level resolve', function() {\n    it('should correctly use exists method', function() {\n      assert.equal(false, require_optional.exists('co'));\n      assert.equal(true, require_optional.exists('es6-promise'));\n      assert.equal(true, require_optional.exists('bson/lib/bson/long.js'));\n      assert.equal(false, require_optional.exists('es6-promise2'));\n    });\n  });\n});\n"]}