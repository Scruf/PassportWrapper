{"version":3,"sources":["sliced.js"],"names":[],"mappings":";;;;;;;;;;AAUA,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC;AAChD,MAAI,MAAM,EAAN,CAD4C;AAEhD,MAAI,MAAM,KAAK,MAAL,CAFsC;;AAIhD,MAAI,MAAM,GAAN,EAAW,OAAO,GAAP,CAAf;;AAEA,MAAI,QAAQ,QAAQ,CAAR,GACR,KAAK,GAAL,CAAS,CAAT,EAAY,QAAQ,GAAR,CADJ,GAER,SAAS,CAAT,CAR4C;;AAUhD,MAAI,aAAa,SAAb,EAAwB;AAC1B,UAAM,WAAW,CAAX,GACF,WAAW,GAAX,GACA,QAFE,CADoB;GAA5B;;AAMA,SAAO,QAAQ,KAAR,EAAe;AACpB,QAAI,MAAM,KAAN,CAAJ,GAAmB,KAAK,GAAL,CAAnB,CADoB;GAAtB;;AAIA,SAAO,GAAP,CApBgD;CAAjC","file":"sliced-compiled.js","sourcesContent":["\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n"]}