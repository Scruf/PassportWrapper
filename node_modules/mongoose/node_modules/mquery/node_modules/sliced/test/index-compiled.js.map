{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar sliced = require('../')\nvar assert = require('assert')\n\ndescribe('sliced', function(){\n  it('exports a function', function(){\n    assert.equal('function', typeof sliced);\n  })\n  describe('with 1 arg', function(){\n    it('returns an array of the arg', function(){\n      var o = [3, \"4\", {}];\n      var r = sliced(o);\n      assert.equal(3, r.length);\n      assert.equal(o[0], r[0]);\n      assert.equal(o[1], r[1]);\n      assert.equal(o[1], r[1]);\n    })\n  })\n  describe('with 2 args', function(){\n    it('returns an array of the arg starting at the 2nd arg', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, 2);\n      assert.equal(2, r.length);\n      assert.equal(o[2], r[0]);\n      assert.equal(o[3], r[1]);\n    })\n  })\n  describe('with 3 args', function(){\n    it('returns an array of the arg from the 2nd to the 3rd arg', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, 1, 2);\n      assert.equal(1, r.length);\n      assert.equal(o[1], r[0]);\n    })\n  })\n  describe('with negative start and no end', function(){\n    it('begins at an offset from the end and includes all following elements', function(){\n      var o = [3, \"4\", 5, null];\n      var r = sliced(o, -2);\n      assert.equal(2, r.length);\n      assert.equal(o[2], r[0]);\n      assert.equal(o[3], r[1]);\n\n      var r = sliced(o, -12);\n      assert.equal(4, r.length);\n      assert.equal(o[0], r[0]);\n      assert.equal(o[1], r[1]);\n    })\n  })\n  describe('with negative start and positive end', function(){\n    it('begins at an offset from the end and includes `end` elements', function(){\n      var o = [3, \"4\", {x:1}, null];\n\n      var r = sliced(o, -2, 1);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -2, 2);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -2, 3);\n      assert.equal(1, r.length);\n      assert.equal(o[2], r[0]);\n    })\n  })\n  describe('with negative start and negative end', function(){\n    it('begins at `start` offset from the end and includes all elements up to `end` offset from the end', function(){\n      var o = [3, \"4\", {x:1}, null];\n      var r = sliced(o, -3, -1);\n      assert.equal(2, r.length);\n      assert.equal(o[1], r[0]);\n      assert.equal(o[2], r[1]);\n\n      var r = sliced(o, -3, -3);\n      assert.equal(0, r.length);\n\n      var r = sliced(o, -3, -4);\n      assert.equal(0, r.length);\n    })\n  })\n})\n"]}