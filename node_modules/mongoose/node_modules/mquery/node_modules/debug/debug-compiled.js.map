{"version":3,"sources":["debug.js"],"names":[],"mappings":"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","file":"debug-compiled.js","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"]}