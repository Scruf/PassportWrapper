{"version":3,"sources":["race.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GAAiB,UACb,OADa,EACJ,QADI,EACM,mBADN,EAC2B,YAD3B,EACyC;AAC1D,QAAI,UAAU,QAAQ,WAAR,EAAqB,OAArB,CAD4C;;AAG1D,QAAI,YAAY,UAAU,OAAV,EAAmB;AAC/B,eAAO,QAAQ,IAAR,CAAa,UAAS,KAAT,EAAgB;AAChC,mBAAO,KAAK,KAAL,EAAY,OAAZ,CAAP,CADgC;SAAhB,CAApB,CAD+B;KAAnB,CAH0C;;AAS1D,aAAS,IAAT,CAAc,QAAd,EAAwB,MAAxB,EAAgC;AAC5B,YAAI,eAAe,oBAAoB,QAApB,CAAf,CADwB;;AAG5B,YAAI,wBAAwB,OAAxB,EAAiC;AACjC,mBAAO,UAAU,YAAV,CAAP,CADiC;SAArC,MAEO,IAAI,CAAC,QAAQ,QAAR,CAAD,EAAoB;AAC3B,mBAAO,aAAa,2FAAb,CAAP,CAD2B;SAAxB;;AAIP,YAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAN,CATwB;AAU5B,YAAI,WAAW,SAAX,EAAsB;AACtB,gBAAI,cAAJ,CAAmB,MAAnB,EAA2B,IAAI,CAAJ,CAA3B,CADsB;SAA1B;AAGA,YAAI,UAAU,IAAI,QAAJ,CAbc;AAc5B,YAAI,SAAS,IAAI,OAAJ,CAde;AAe5B,aAAK,IAAI,IAAI,CAAJ,EAAO,MAAM,SAAS,MAAT,EAAiB,IAAI,GAAJ,EAAS,EAAE,CAAF,EAAK;AACjD,gBAAI,MAAM,SAAS,CAAT,CAAN,CAD6C;;AAGjD,gBAAI,QAAQ,SAAR,IAAqB,EAAE,KAAK,QAAL,CAAF,EAAkB;AACvC,yBADuC;aAA3C;;AAIA,oBAAQ,IAAR,CAAa,GAAb,EAAkB,KAAlB,CAAwB,OAAxB,EAAiC,MAAjC,EAAyC,SAAzC,EAAoD,GAApD,EAAyD,IAAzD,EAPiD;SAArD;AASA,eAAO,GAAP,CAxB4B;KAAhC;;AA2BA,YAAQ,IAAR,GAAe,UAAU,QAAV,EAAoB;AAC/B,eAAO,KAAK,QAAL,EAAe,SAAf,CAAP,CAD+B;KAApB,CApC2C;;AAwC1D,YAAQ,SAAR,CAAkB,IAAlB,GAAyB,YAAY;AACjC,eAAO,KAAK,IAAL,EAAW,SAAX,CAAP,CADiC;KAAZ,CAxCiC;CADzC","file":"race-compiled.js","sourcesContent":["\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar isArray = require(\"./util.js\").isArray;\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else if (!isArray(promises)) {\n        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 4 | 1);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n"]}