{"version":3,"sources":["mquery.js"],"names":[],"mappings":"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","file":"mquery-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\n\nvar slice = require('sliced')\nvar assert = require('assert')\nvar util = require('util')\nvar utils = require('./utils')\nvar debug = require('debug')('mquery');\n\n/**\n * Query constructor used for building queries.\n *\n * ####Example:\n *\n *     var query = new Query({ name: 'mquery' });\n *     query.setOptions({ collection: moduleCollection })\n *     query.where('age').gte(21).exec(callback);\n *\n * @param {Object} [criteria]\n * @param {Object} [options]\n * @api public\n */\n\nfunction Query (criteria, options) {\n  if (!(this instanceof Query))\n    return new Query(criteria, options);\n\n  var proto = this.constructor.prototype;\n\n  this.op = proto.op || undefined;\n\n  this.options = {};\n  this.setOptions(proto.options);\n\n  this._conditions = proto._conditions\n    ? utils.clone(proto._conditions)\n    : {};\n\n  this._fields = proto._fields\n    ? utils.clone(proto._fields)\n    : undefined;\n\n  this._update = proto._update\n    ? utils.clone(proto._update)\n    : undefined;\n\n  this._path = proto._path || undefined;\n  this._distinct = proto._distinct || undefined;\n  this._collection = proto._collection || undefined;\n  this._traceFunction = proto._traceFunction || undefined;\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (criteria) {\n    if (criteria.find && criteria.remove && criteria.update) {\n      // quack quack!\n      this.collection(criteria);\n    } else {\n      this.find(criteria);\n    }\n  }\n}\n\n/**\n * This is a parameter that the user can set which determines if mquery\n * uses $within or $geoWithin for queries. It defaults to true which\n * means $geoWithin will be used. If using MongoDB < 2.4 you should\n * set this to false.\n *\n * @api public\n * @property use$geoWithin\n */\n\nvar $withinCmd = '$geoWithin';\nObject.defineProperty(Query, 'use$geoWithin', {\n    get: function ( ) { return $withinCmd == '$geoWithin' }\n  , set: function (v) {\n      if (true === v) {\n        // mongodb >= 2.4\n        $withinCmd = '$geoWithin';\n      } else {\n        $withinCmd = '$within';\n      }\n    }\n});\n\n/**\n * Converts this query to a constructor function with all arguments and options retained.\n *\n * ####Example\n *\n *     // Create a query that will read documents with a \"video\" category from\n *     // `aCollection` on the primary node in the replica-set unless it is down,\n *     // in which case we'll read from a secondary node.\n *     var query = mquery({ category: 'video' })\n *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });\n *\n *     // create a constructor based off these settings\n *     var Video = query.toConstructor();\n *\n *     // Video is now a subclass of mquery() and works the same way but with the\n *     // default query parameters and options set.\n *\n *     // run a query with the previous settings but filter for movies with names\n *     // that start with \"Life\".\n *     Video().where({ name: /^Life/ }).exec(cb);\n *\n * @return {Query} new Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor () {\n  function CustomQuery (criteria, options) {\n    if (!(this instanceof CustomQuery))\n      return new CustomQuery(criteria, options);\n    Query.call(this, criteria, options);\n  }\n\n  utils.inherits(CustomQuery, Query);\n\n  // set inherited defaults\n  var p = CustomQuery.prototype;\n\n  p.options = {};\n  p.setOptions(this.options);\n\n  p.op = this.op;\n  p._conditions = utils.clone(this._conditions);\n  p._fields = utils.clone(this._fields);\n  p._update = utils.clone(this._update);\n  p._path = this._path;\n  p._distinct = this._distinct;\n  p._collection = this._collection;\n  p._traceFunction = this._traceFunction;\n\n  return CustomQuery;\n}\n\n/**\n * Sets query options.\n *\n * ####Options:\n *\n * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *\n * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *\n * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *\n * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *\n * - [maxScan](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan) *\n * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *\n * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *\n * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *\n * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *\n * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *\n * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *\n * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)\n * - collection the collection to query against\n *\n * _* denotes a query helper method is also available_\n *\n * @param {Object} options\n * @api public\n */\n\nQuery.prototype.setOptions = function (options) {\n  if (!(options && utils.isObject(options)))\n    return this;\n\n  // set arbitrary options\n  var methods = utils.keys(options)\n    , method\n\n  for (var i = 0; i < methods.length; ++i) {\n    method = methods[i];\n\n    // use methods if exist (safer option manipulation)\n    if ('function' == typeof this[method]) {\n      var args = utils.isArray(options[method])\n        ? options[method]\n        : [options[method]];\n      this[method].apply(this, args)\n    } else {\n      this.options[method] = options[method];\n    }\n  }\n\n  return this;\n}\n\n/**\n * Sets this Querys collection.\n *\n * @param {Collection} coll\n * @return {Query} this\n */\n\nQuery.prototype.collection = function collection (coll) {\n  this._collection = new Query.Collection(coll);\n\n  return this;\n}\n\n/**\n * Specifies a `$where` condition\n *\n * Use `$where` when you need to select documents using a JavaScript expression.\n *\n * ####Example\n *\n *     query.$where('this.comments.length > 10 || this.name.length > 5')\n *\n *     query.$where(function () {\n *       return this.comments.length > 10 || this.name.length > 5;\n *     })\n *\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @method $where\n * @api public\n */\n\nQuery.prototype.$where = function (js) {\n  this._conditions.$where = js;\n  return this;\n}\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * ####Example\n *\n *     // instead of writing:\n *     User.find({age: {$gte: 21, $lte: 65}}, callback);\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^vonderful/i)\n *     .where('friends').slice(10)\n *     .exec(callback)\n *\n * @param {String} [path]\n * @param {Object} [val]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.where = function () {\n  if (!arguments.length) return this;\n  if (!this.op) this.op = 'find';\n\n  var type = typeof arguments[0];\n\n  if ('string' == type) {\n    this._path = arguments[0];\n\n    if (2 === arguments.length) {\n      this._conditions[this._path] = arguments[1];\n    }\n\n    return this;\n  }\n\n  if ('object' == type && !Array.isArray(arguments[0])) {\n    return this.merge(arguments[0]);\n  }\n\n  throw new TypeError('path must be a string or object');\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * ####Example\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.equals = function equals (val) {\n  this._ensurePath('equals');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n * This is alias of `equals`\n *\n * ####Example\n *\n *     User.where('age').eq(49);\n *\n *     // is the same as\n *\n *     User.shere('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.eq = function eq (val) {\n  this._ensurePath('eq');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * ####Example\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.or = function or (array) {\n  var or = this._conditions.$or || (this._conditions.$or = []);\n  if (!utils.isArray(array)) array = [array];\n  or.push.apply(or, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * ####Example\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.nor = function nor (array) {\n  var nor = this._conditions.$nor || (this._conditions.$nor = []);\n  if (!utils.isArray(array)) array = [array];\n  nor.push.apply(nor, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * ####Example\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.and = function and (array) {\n  var and = this._conditions.$and || (this._conditions.$and = []);\n  if (!Array.isArray(array)) array = [array];\n  and.push.apply(and, array);\n  return this;\n}\n\n/**\n * Specifies a $gt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * ####Example\n *\n *     Thing.find().where('age').gt(21)\n *\n *     // or\n *     Thing.find().gt('age', 21)\n *\n * @method gt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $gte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $ne query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method ne\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $in query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method in\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $nin query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method nin\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $all query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method all\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $size query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method size\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $regex query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method regex\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $maxDistance query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method maxDistance\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/*!\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\n\n'gt gte lt lte ne in nin all regex size maxDistance'.split(' ').forEach(function ($conditional) {\n  Query.prototype[$conditional] = function () {\n    var path, val;\n\n    if (1 === arguments.length) {\n      this._ensurePath($conditional);\n      val = arguments[0];\n      path = this._path;\n    } else {\n      val = arguments[1];\n      path = arguments[0];\n    }\n\n    var conds = this._conditions[path] || (this._conditions[path] = {});\n    conds['$' + $conditional] = val;\n    return this;\n  };\n})\n\n/**\n * Specifies a `$mod` condition\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.mod = function () {\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('mod')\n    val = arguments[0];\n    path = this._path;\n  } else if (2 === arguments.length && !utils.isArray(arguments[1])) {\n    this._ensurePath('mod')\n    val = slice(arguments);\n    path = this._path;\n  } else if (3 === arguments.length) {\n    val = slice(arguments, 1);\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n}\n\n/**\n * Specifies an `$exists` condition\n *\n * ####Example\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.exists = function () {\n  var path, val;\n\n  if (0 === arguments.length) {\n    this._ensurePath('exists');\n    path = this._path;\n    val = true;\n  } else if (1 === arguments.length) {\n    if ('boolean' === typeof arguments[0]) {\n      this._ensurePath('exists');\n      path = this._path;\n      val = arguments[0];\n    } else {\n      path = arguments[0];\n      val = true;\n    }\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$exists = val;\n  return this;\n}\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * ####Example\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @param {String|Object|Function} path\n * @param {Object|Function} criteria\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.elemMatch = function () {\n  if (null == arguments[0])\n    throw new TypeError(\"Invalid argument\");\n\n  var fn, path, criteria;\n\n  if ('function' === typeof arguments[0]) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    fn = arguments[0];\n  } else if (utils.isObject(arguments[0])) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    criteria = arguments[0];\n  } else if ('function' === typeof arguments[1]) {\n    path = arguments[0];\n    fn = arguments[1];\n  } else if (arguments[1] && utils.isObject(arguments[1])) {\n    path = arguments[0];\n    criteria = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (fn) {\n    criteria = new Query;\n    fn(criteria);\n    criteria = criteria._conditions;\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$elemMatch = criteria;\n  return this;\n}\n\n// Spatial queries\n\n/**\n * Sugar for geo-spatial queries.\n *\n * ####Example\n *\n *     query.within().box()\n *     query.within().circle()\n *     query.within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * ####NOTE:\n *\n * Must be used after `where()`.\n *\n * @memberOf Query\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.within = function within () {\n  // opinionated, must be used after where\n  this._ensurePath('within');\n  this._geoComparison = $withinCmd;\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  if (2 === arguments.length) {\n    return this.box.apply(this, arguments);\n  } else if (2 < arguments.length) {\n    return this.polygon.apply(this, arguments);\n  }\n\n  var area = arguments[0];\n\n  if (!area)\n    throw new TypeError('Invalid argument');\n\n  if (area.center)\n    return this.circle(area);\n\n  if (area.box)\n    return this.box.apply(this, area.box);\n\n  if (area.polygon)\n    return this.polygon.apply(this, area.polygon);\n\n  if (area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a $box condition\n *\n * ####Example\n *\n *     var lowerLeft = [40.73083, -73.99756]\n *     var upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box('loc', lowerLeft, upperRight )\n *\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see Query#within #query_Query-within\n * @param {String} path\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.box = function () {\n  var path, box;\n\n  if (3 === arguments.length) {\n    // box('loc', [], [])\n    path = arguments[0];\n    box = [arguments[1], arguments[2]];\n  } else if (2 === arguments.length) {\n    // box([], [])\n    this._ensurePath('box');\n    path = this._path;\n    box = [arguments[0], arguments[1]];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$box': box  };\n  return this;\n}\n\n/**\n * Specifies a $polygon condition\n *\n * ####Example\n *\n *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])\n *     query.polygon('loc', [10,20], [13, 25], [7,15])\n *\n * @param {String|Array} [path]\n * @param {Array|Object} [val]\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.polygon = function () {\n  var val, path;\n\n  if ('string' == typeof arguments[0]) {\n    // polygon('loc', [],[],[])\n    path = arguments[0];\n    val = slice(arguments, 1);\n  } else {\n    // polygon([],[],[])\n    this._ensurePath('polygon');\n    path = this._path;\n    val = slice(arguments);\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$polygon': val };\n  return this;\n}\n\n/**\n * Specifies a $center or $centerSphere condition.\n *\n * ####Example\n *\n *     var area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n *     // for spherical calculations\n *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.circle = function () {\n  var path, val;\n\n  if (1 === arguments.length) {\n    this._ensurePath('circle');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!('radius' in val && val.center))\n    throw new Error('center and radius are required');\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$centerSphere'\n    : '$center';\n\n  var wKey = this._geoComparison || $withinCmd;\n  conds[wKey] = {};\n  conds[wKey][type] = [val.center, val.radius];\n\n  if ('unique' in val)\n    conds[wKey].$uniqueDocs = !! val.unique;\n\n  return this;\n}\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * ####Example\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *     query.near({ center: { type: 'Point', coordinates: [..] }})\n *     query.near().geometry({ type: 'Point', coordinates: [..] })\n *\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.near = function near () {\n  var path, val;\n\n  this._geoComparison = '$near';\n\n  if (0 === arguments.length) {\n    return this;\n  } else if (1 === arguments.length) {\n    this._ensurePath('near');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!val.center) {\n    throw new Error('center is required');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$nearSphere'\n    : '$near';\n\n  // center could be a GeoJSON object or an Array\n  if (Array.isArray(val.center)) {\n    conds[type] = val.center;\n\n    var radius = 'maxDistance' in val\n      ? val.maxDistance\n      : null;\n\n    if (null != radius) {\n      conds.$maxDistance = radius;\n    }\n  } else {\n    // GeoJSON?\n    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {\n      throw new Error(util.format(\"Invalid GeoJSON specified for %s\", type));\n    }\n    conds[type] = { $geometry : val.center };\n\n    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere\n    if ('maxDistance' in val) {\n      conds[type]['$maxDistance'] = val.maxDistance;\n    }\n  }\n\n  return this;\n}\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * ####Example\n *\n *     query.where('path').intersects().geometry({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n *     query.where('path').intersects({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n * @param {Object} [arg]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.intersects = function intersects () {\n  // opinionated, must be used after where\n  this._ensurePath('intersects');\n\n  this._geoComparison = '$geoIntersects';\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  var area = arguments[0];\n\n  if (null != area && area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a `$geometry` condition\n *\n * ####Example\n *\n *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     var polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     var polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * ####NOTE:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * The most recent path passed to `where()` is used.\n *\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/\n * @api public\n */\n\nQuery.prototype.geometry = function geometry () {\n  if (!('$within' == this._geoComparison ||\n        '$geoWithin' == this._geoComparison ||\n        '$near' == this._geoComparison ||\n        '$geoIntersects' == this._geoComparison)) {\n    throw new Error('geometry() must come after `within()`, `intersects()`, or `near()');\n  }\n\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('geometry');\n    path = this._path;\n    val = arguments[0];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!(val.type && Array.isArray(val.coordinates))) {\n    throw new TypeError('Invalid argument');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison] = { $geometry: val };\n\n  return this;\n}\n\n// end spatial\n\n/**\n * Specifies which document fields to include or exclude\n *\n * ####String syntax\n *\n * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n *\n * ####Example\n *\n *     // include a and b, exclude c\n *     query.select('a b -c');\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({a: 1, b: 1, c: 0});\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String} arg\n * @return {Query} this\n * @see SchemaType\n * @api public\n */\n\nQuery.prototype.select = function select () {\n  var arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error(\"Invalid select: select only takes 1 argument\");\n  }\n\n  this._validate('select');\n\n  var fields = this._fields || (this._fields = {});\n  var type = typeof arg;\n\n  if (('string' == type || utils.isArgumentsObject(arg)) &&\n    'number' == typeof arg.length) {\n    if ('string' == type)\n      arg = arg.split(/\\s+/);\n\n    for (var i = 0, len = arg.length; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    }\n\n    return this;\n  }\n\n  if (utils.isObject(arg) && !Array.isArray(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      fields[keys[i]] = arg[keys[i]];\n    }\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n}\n\n/**\n * Specifies a $slice condition for a `path`\n *\n * ####Example\n *\n *     query.slice('comments', 5)\n *     query.slice('comments', -5)\n *     query.slice('comments', [10, 5])\n *     query.where('comments').slice(5)\n *     query.where('comments').slice([-10, 5])\n *\n * @param {String} [path]\n * @param {Number} val number/range of elements to slice\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements\n * @api public\n */\n\nQuery.prototype.slice = function () {\n  if (0 === arguments.length)\n    return this;\n\n  this._validate('slice');\n\n  var path, val;\n\n  if (1 === arguments.length) {\n    var arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      var keys = Object.keys(arg);\n      var numKeys = keys.length;\n      for (var i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = slice(arguments);\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (3 === arguments.length) {\n    path = arguments[0];\n    val = slice(arguments, 1);\n  }\n\n  var myFields = this._fields || (this._fields = {});\n  myFields[path] = { '$slice': val };\n  return this;\n}\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Example\n *\n *     // these are equivalent\n *     query.sort({ field: 'asc', test: -1 });\n *     query.sort('field -test');\n *     query.sort([['field', 1], ['test', -1]]);\n *\n * ####Note\n *\n *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver >= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15).\n *  - Cannot be used with `distinct()`\n *\n * @param {Object|String|Array} arg\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.sort = function (arg) {\n  if (!arg) return this;\n  var len;\n\n  this._validate('sort');\n\n  var type = typeof arg;\n\n  // .sort([['field', 1], ['test', -1]])\n  if (Array.isArray(arg)) {\n    len = arg.length;\n    for (var i = 0; i < arg.length; ++i) {\n      _pushArr(this.options, arg[i][0], arg[i][1]);\n    }\n    return this;\n  }\n\n  // .sort('field -test')\n  if (1 === arguments.length && 'string' == type) {\n    arg = arg.split(/\\s+/);\n    len = arg.length;\n    for (var i = 0; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      push(this.options, field, ascend);\n    }\n\n    return this;\n  }\n\n  // .sort({ field: 1, test: -1 })\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      var field = keys[i];\n      push(this.options, field, arg[field]);\n    }\n\n    return this;\n  }\n\n  throw new TypeError('Invalid sort() argument. Must be a string, object, or array.');\n}\n\n/*!\n * @ignore\n */\n\nfunction push (opts, field, value) {\n  if (Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n\n  if (value && value.$meta) {\n    var s = opts.sort || (opts.sort = {});\n    s[field] = { $meta : value.$meta };\n    return;\n  }\n\n  var val = String(value || 1).toLowerCase();\n  if (!/^(?:ascending|asc|descending|desc|1|-1)$/.test(val)) {\n    if (utils.isArray(value)) value = '['+value+']';\n    throw new TypeError('Invalid sort value: {' + field + ': ' + value + ' }');\n  }\n  // store `sort` in a sane format\n  var s = opts.sort || (opts.sort = {});\n  var valueStr = value.toString()\n                  .replace(\"asc\", \"1\")\n                  .replace(\"ascending\", \"1\")\n                  .replace(\"desc\", \"-1\")\n                  .replace(\"descending\", \"-1\");\n  s[field] = parseInt(valueStr, 10);\n}\n\nfunction _pushArr (opts, field, value) {\n  opts.sort = opts.sort || [];\n  if (!Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n  var valueStr = value.toString()\n    .replace(\"asc\", \"1\")\n    .replace(\"ascending\", \"1\")\n    .replace(\"desc\", \"-1\")\n    .replace(\"descending\", \"-1\");\n  opts.sort.push([field, value]);\n}\n\n/**\n * Specifies the limit option.\n *\n * ####Example\n *\n *     query.limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the skip option.\n *\n * ####Example\n *\n *     query.skip(100).limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the maxScan option.\n *\n * ####Example\n *\n *     query.maxScan(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method maxScan\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan\n * @api public\n */\n/**\n * Specifies the batchSize option.\n *\n * ####Example\n *\n *     query.batchSize(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the `comment` option.\n *\n * ####Example\n *\n *     query.comment('login query')\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment\n * @api public\n */\n\n/*!\n * limit, skip, maxScan, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\n\n;['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) {\n  Query.prototype[method] = function (v) {\n    this._validate(method);\n    this.options[method] = v;\n    return this;\n  };\n})\n\n/**\n * Specifies the maxTimeMS option.\n *\n * ####Example\n *\n *     query.maxTime(100)\n *\n * @method maxTime\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS\n * @api public\n */\n\nQuery.prototype.maxTime = function (v) {\n  this._validate('maxTime');\n  this.options.maxTimeMS = v;\n  return this;\n};\n\n/**\n * Specifies this query as a `snapshot` query.\n *\n * ####Example\n *\n *     mquery().snapshot() // true\n *     mquery().snapshot(true)\n *     mquery().snapshot(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.snapshot = function () {\n  this._validate('snapshot');\n\n  this.options.snapshot = arguments.length\n    ? !! arguments[0]\n    : true\n\n  return this;\n}\n\n/**\n * Sets query hints.\n *\n * ####Example\n *\n *     query.hint({ indexA: 1, indexB: -1})\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object} val a hint object\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint\n * @api public\n */\n\nQuery.prototype.hint = function () {\n  if (0 === arguments.length) return this;\n\n  this._validate('hint');\n\n  var arg = arguments[0];\n  if (utils.isObject(arg)) {\n    var hint = this.options.hint || (this.options.hint = {});\n\n    // must keep object keys in order so don't use Object.keys()\n    for (var k in arg) {\n      hint[k] = arg[k];\n    }\n\n    return this;\n  }\n\n  throw new TypeError('Invalid hint. ' + arg);\n}\n\n/**\n * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences.\n *\n * ####Example:\n *\n *     query.slaveOk() // true\n *     query.slaveOk(true)\n *     query.slaveOk(false)\n *\n * @deprecated use read() preferences instead if on mongodb >= 2.2\n * @param {Boolean} v defaults to true\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see read()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.slaveOk = function (v) {\n  this.options.slaveOk = arguments.length ? !!v : true;\n  return this;\n}\n\n/**\n * Sets the readPreference option for the query.\n *\n * ####Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // you can also use mongodb.ReadPreference class to also specify tags\n *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))\n *\n * ####Preferences:\n *\n *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n *     secondary            Read from secondary if available, otherwise error.\n *     primaryPreferred     Read from primary if available, otherwise a secondary.\n *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n *\n * Aliases\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = function (pref) {\n  if (arguments.length > 1 && !Query.prototype.read.deprecationWarningIssued) {\n    console.error(\"Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead.\");\n    Query.prototype.read.deprecationWarningIssued = true;\n  }\n  this.options.readPreference = utils.readPref(pref);\n  return this;\n}\n\n/**\n * Sets tailable option.\n *\n * ####Example\n *\n *     query.tailable() <== true\n *     query.tailable(true)\n *     query.tailable(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} v defaults to true\n * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors\n * @api public\n */\n\nQuery.prototype.tailable = function () {\n  this._validate('tailable');\n\n  this.options.tailable = arguments.length\n    ? !! arguments[0]\n    : true;\n\n  return this;\n}\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function (source) {\n  if (!source)\n    return this;\n\n  if (!Query.canMerge(source))\n    throw new TypeError('Invalid argument. Expected instanceof mquery or plain object');\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      utils.merge(this._conditions, source._conditions);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options);\n    }\n\n    if (source._update) {\n      this._update || (this._update = {});\n      utils.mergeClone(this._update, source._update);\n    }\n\n    if (source._distinct) {\n      this._distinct = source._distinct;\n    }\n\n    return this;\n  }\n\n  // plain object\n  utils.merge(this._conditions, source);\n\n  return this;\n}\n\n/**\n * Finds documents.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.find()\n *     query.find(callback)\n *     query.find({ name: 'Burning Lights' }, callback)\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function (criteria, callback) {\n  this.op = 'find';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('find', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('find', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.find(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Returns the query cursor\n *\n * ####Examples\n *\n *     query.find().cursor();\n *     query.cursor({ name: 'Burning Lights' });\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Object} cursor\n * @api public\n */\n\nQuery.prototype.cursor = function cursor (criteria) {\n  if (this.op) {\n    if (this.op !== 'find') {\n      throw new TypeError(\".cursor only support .find method\");\n    }\n  } else {\n    this.find(criteria);\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('findCursor', this._collection.collectionName, conds, options);\n  return this._collection.findCursor(conds, options);\n}\n\n/**\n * Executes the query as a findOne() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.findOne().where('name', /^Burning/);\n *\n *     query.findOne({ name: /^Burning/ })\n *\n *     query.findOne({ name: /^Burning/ }, callback); // executes\n *\n *     query.findOne(function (err, doc) {\n *       if (err) return handleError(err);\n *       if (doc) {\n *         // doc may be null if no document matched\n *\n *       }\n *     });\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOne = function (criteria, callback) {\n  this.op = 'findOne';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec();\n\n  debug('findOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('findOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.findOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Exectues the query as a count() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.count().where('color', 'black').exec(callback);\n *\n *     query.count({ color: 'black' }).count(callback)\n *\n *     query.count({ color: 'black' }, callback)\n *\n *     query.where('color', 'black').count(function (err, count) {\n *       if (err) return handleError(err);\n *       console.log('there are %d kittens', count);\n *     })\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count\n * @api public\n */\n\nQuery.prototype.count = function (criteria, callback) {\n  this.op = 'count';\n  this._validate();\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('count', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('count', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.count(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Declares or executes a distinct() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     distinct(criteria, field, fn)\n *     distinct(criteria, field)\n *     distinct(field, fn)\n *     distinct(field)\n *     distinct(fn)\n *     distinct()\n *\n * @param {Object|Query} [criteria]\n * @param {String} [field]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct\n * @api public\n */\n\nQuery.prototype.distinct = function (criteria, field, callback) {\n  this.op = 'distinct';\n  this._validate();\n\n  if (!callback) {\n    switch (typeof field) {\n      case 'function':\n        callback = field;\n        if ('string' == typeof criteria) {\n          field = criteria;\n          criteria = undefined;\n        }\n        break;\n      case 'undefined':\n      case 'string':\n        break;\n      default:\n        throw new TypeError('Invalid `field` argument. Must be string or function')\n        break;\n    }\n\n    switch (typeof criteria) {\n      case 'function':\n        callback = criteria;\n        criteria = field = undefined;\n        break;\n      case 'string':\n        field = criteria;\n        criteria = undefined;\n        break;\n    }\n  }\n\n  if ('string' == typeof field) {\n    this._distinct = field;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) {\n    return this;\n  }\n\n  if (!this._distinct) {\n    throw new Error('No value for `distinct` has been declared');\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('distinct', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('distinct', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.distinct(this._distinct, conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as an update() operation.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     mquery({ _id: id }).update({ title: 'words' }, ...)\n *\n * becomes\n *\n *     collection.update({ _id: id }, { $set: { title: 'words' }}, ...)\n *\n * ####Note\n *\n * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection.\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call update() and then execute it by using the `exec()` method.\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).update(); // not executed\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).exec(); // executed as unsafe\n *\n *     // keys that are not $atomic ops become $set.\n *     // this executes the same command as the previous example.\n *     q.update({ name: 'bob' }).where({ _id: id }).exec();\n *\n *     var q = mquery(collection).update(); // not executed\n *\n *     // overwriting with empty docs\n *     var q.where({ _id: id }).setOptions({ overwrite: true })\n *     q.update({ }, callback); // executes\n *\n *     // multi update with overwrite to empty doc\n *     var q = mquery(collection).where({ _id: id });\n *     q.setOptions({ multi: true, overwrite: true })\n *     q.update({ });\n *     q.update(callback); // executed\n *\n *     // multi updates\n *     mquery()\n *       .collection(coll)\n *       .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)\n *     // more multi updates\n *     mquery({ })\n *       .collection(coll)\n *       .setOptions({ multi: true })\n *       .update({ $set: { arr: [] }}, callback)\n *\n *     // single update by default\n *     mquery({ email: 'address@example.com' })\n *      .collection(coll)\n *      .update({ $inc: { counter: 1 }}, callback)\n *\n *     // summary\n *     update(criteria, doc, opts, cb) // executes\n *     update(criteria, doc, opts)\n *     update(criteria, doc, cb) // executes\n *     update(criteria, doc)\n *     update(doc, cb) // executes\n *     update(doc)\n *     update(cb) // executes\n *     update(true) // executes (unsafe write)\n *     update()\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.update = function update (criteria, doc, options, callback) {\n  this.op = 'update';\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  if (utils.isObject(options)) {\n    // { overwrite: true }\n    this.setOptions(options);\n  }\n\n  // we are done if we don't have callback and they are\n  // not forcing an unsafe write.\n  if (!(force || callback))\n    return this;\n\n  if (!this._update ||\n      !this.options.overwrite && 0 === utils.keys(this._update).length) {\n    callback && utils.soon(callback.bind(null, null, 0));\n    return this;\n  }\n\n  options = this._optionsForExec();\n  if (!callback) options.safe = false;\n\n  var criteria = this._conditions;\n  doc = this._updateForExec();\n\n  debug('update', this._collection.collectionName, criteria, doc, options);\n  callback = this._wrapCallback('update', callback, {\n    conditions: criteria\n  , doc: doc\n  , options: options\n  });\n\n  this._collection.update(criteria, doc, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a remove() operation.\n *\n * ####Example\n *\n *     mquery(collection).remove({ artist: 'Anne Murray' }, callback)\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call remove() and then execute it by using the `exec()` method.\n *\n *     // not executed\n *     var query = mquery(collection).remove({ name: 'Anne Murray' })\n *\n *     // executed\n *     mquery(collection).remove({ name: 'Anne Murray' }, callback)\n *     mquery(collection).remove({ name: 'Anne Murray' }).remove(callback)\n *\n *     // executed without a callback (unsafe write)\n *     query.exec()\n *\n *     // summary\n *     query.remove(conds, fn); // executes\n *     query.remove(conds)\n *     query.remove(fn) // executes\n *     query.remove()\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.remove = function (criteria, callback) {\n  this.op = 'remove';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n\n  var conds = this._conditions;\n\n  debug('remove', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('remove', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.remove(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     query.findOneAndUpdate(conditions, update, options, callback) // executes\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     query.findOneAndUpdate(conditions, update, callback) // executes\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     query.findOneAndUpdate(update, callback)             // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     query.findOneAndUpdate(callback)                     // executes\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @param {Object|Query} [query]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function (criteria, doc, options, callback) {\n  this.op = 'findOneAndUpdate';\n  this._validate();\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = {};\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      options = undefined;\n      break;\n    case 1:\n      if ('function' == typeof criteria) {\n        callback = criteria;\n        criteria = options = doc = undefined;\n      } else {\n        doc = criteria;\n        criteria = options = undefined;\n      }\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n  return this._findAndModify('update', callback);\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     A.where().findOneAndRemove(conditions, options, callback) // executes\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     A.where().findOneAndRemove(conditions, callback) // executes\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     A.where().findOneAndRemove(callback)   // executes\n *     A.where().findOneAndRemove()           // returns Query\n *\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = function (conditions, options, callback) {\n  this.op = 'findOneAndRemove';\n  this._validate();\n\n  if ('function' == typeof options) {\n    callback = options;\n    options = undefined;\n  } else if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = undefined;\n  }\n\n  // apply conditions\n  if (Query.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  // apply options\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n\n  return this._findAndModify('remove', callback);\n}\n\n/**\n * _findAndModify\n *\n * @param {String} type - either \"remove\" or \"update\"\n * @param {Function} callback\n * @api private\n */\n\nQuery.prototype._findAndModify = function (type, callback) {\n  assert.equal('function', typeof callback);\n\n  var opts = this._optionsForExec()\n    , self = this\n    , fields\n    , sort\n    , doc\n\n  if ('remove' == type) {\n    opts.remove = true;\n  } else {\n    if (!('new' in opts)) opts.new = true;\n    if (!('upsert' in opts)) opts.upsert = false;\n\n    doc = this._updateForExec()\n    if (!doc) {\n      if (opts.upsert) {\n        // still need to do the upsert to empty doc\n        doc = { $set: {} };\n      } else {\n        return this.findOne(callback);\n      }\n    }\n  }\n\n  var fields = this._fieldsForExec();\n  if (fields) {\n    opts.fields = fields;\n  }\n\n  var conds = this._conditions;\n\n  debug('findAndModify', this._collection.collectionName, conds, doc, opts);\n  callback = this._wrapCallback('findAndModify', callback, {\n    conditions: conds\n  , doc: doc\n  , options: opts\n  });\n\n  this._collection\n  .findAndModify(conds, doc, opts, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Wrap callback to add tracing\n *\n * @param {Function} callback\n * @param {Object} [queryInfo]\n * @api private\n */\nQuery.prototype._wrapCallback = function (method, callback, queryInfo) {\n  var traceFunction = this._traceFunction || Query.traceFunction;\n\n  if (traceFunction) {\n    queryInfo.collectionName = this._collection.collectionName;\n\n    var traceCallback = traceFunction &&\n      traceFunction.call(null, method, queryInfo, this);\n\n    var startTime = new Date().getTime();\n\n    return function wrapperCallback (err, result) {\n      if (traceCallback) {\n        var millis = new Date().getTime() - startTime;\n        traceCallback.call(null, err, result, millis);\n      }\n\n      if (callback) {\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  return callback;\n}\n\n/**\n * Add trace function that gets called when the query is executed.\n * The function will be called with (method, queryInfo, query) and\n * should return a callback function which will be called\n * with (err, result, millis) when the query is complete.\n *\n * queryInfo is an object containing: {\n *   collectionName: <name of the collection>,\n *   conditions: <query criteria>,\n *   options: <comment, fields, readPreference, etc>,\n *   doc: [document to update, if applicable]\n * }\n *\n * NOTE: Does not trace stream queries.\n *\n * @param {Function} traceFunction\n * @return {Query} this\n * @api public\n */\nQuery.prototype.setTraceFunction = function (traceFunction) {\n  this._traceFunction = traceFunction;\n  return this;\n}\n\n/**\n * Executes the query\n *\n * ####Examples\n *\n *     query.exec();\n *     query.exec(callback);\n *     query.exec('update');\n *     query.exec('find', callback);\n *\n * @param {String|Function} [operation]\n * @param {Function} [callback]\n * @api public\n */\n\nQuery.prototype.exec = function exec (op, callback) {\n  switch (typeof op) {\n    case 'function':\n      callback = op;\n      op = null;\n      break;\n    case 'string':\n      this.op = op;\n      break;\n  }\n\n  assert.ok(this.op, \"Missing query type: (find, update, etc)\");\n\n  if ('update' == this.op || 'remove' == this.op) {\n    callback || (callback = true);\n  }\n\n  var self = this;\n\n  if ('function' == typeof callback) {\n    this[this.op](callback);\n  } else {\n    return new Query.Promise(function(success, error) {\n      self[self.op](function(err, val) {\n        if (err) error(err);\n        else success(val);\n        self = success = error = null;\n      });\n    });\n  }\n}\n\n/**\n * Returns a thunk which when called runs this.exec()\n *\n * The thunk receives a callback function which will be\n * passed to `this.exec()`\n *\n * @return {Function}\n * @api public\n */\n\nQuery.prototype.thunk = function() {\n  var self = this;\n  return function(cb) {\n    self.exec(cb);\n  }\n}\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = function(resolve, reject) {\n  var self = this;\n  var promise = new Query.Promise(function(success, error) {\n    self.exec(function(err, val) {\n      if (err) error(err);\n      else success(val);\n      self = success = error = null;\n    });\n  });\n  return promise.then(resolve, reject);\n}\n\n/**\n * Returns a stream for the given find query.\n *\n * @throws Error if operation is not a find\n * @returns {Stream} Node 0.8 style\n */\n\nQuery.prototype.stream = function(streamOptions) {\n  if ('find' != this.op)\n    throw new Error('stream() is only available for find');\n\n  var conds = this._conditions;\n\n  var options = this._optionsForExec()\n  options.fields = this._fieldsForExec()\n\n  debug('stream', this._collection.collectionName, conds, options, streamOptions);\n\n  return this._collection.findStream(conds, options, streamOptions);\n}\n\n/**\n * Determines if field selection has been made.\n *\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selected = function selected () {\n  return !! (this._fields && Object.keys(this._fields).length > 0);\n}\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively() // false\n *     query.select('name')\n *     query.selectedInclusively() // true\n *     query.selectedExlusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return false;\n    if (this._fields[key] &&\n        typeof this._fields[key] === 'object' &&\n        this._fields[key].$meta) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExlusively() // false\n *     query.select('-name')\n *     query.selectedExlusively() // true\n *     query.selectedInclusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return true;\n  }\n\n  return false;\n}\n\n/**\n * Merges `doc` with the current update object.\n *\n * @param {Object} doc\n */\n\nQuery.prototype._mergeUpdate = function (doc) {\n  if (!this._update) this._update = {};\n  if (doc instanceof Query) {\n    if (doc._update) {\n      utils.mergeClone(this._update, doc._update);\n    }\n  } else {\n    utils.mergeClone(this._update, doc);\n  }\n}\n\n/**\n * Returns default options.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._optionsForExec = function () {\n  var options = utils.clone(this.options, { retainKeyOrder: true });\n  return options;\n}\n\n/**\n * Returns fields selection for this query.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._fieldsForExec = function () {\n  return utils.clone(this._fields, { retainKeyOrder: true });\n}\n\n/**\n * Return an update document with corrected $set operations.\n *\n * @api private\n */\n\nQuery.prototype._updateForExec = function () {\n  var update = utils.clone(this._update, { retainKeyOrder: true })\n    , ops = utils.keys(update)\n    , i = ops.length\n    , ret = {}\n    , hasKeys\n    , val\n\n  while (i--) {\n    var op = ops[i];\n\n    if (this.options.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  this._compiledUpdate = ret;\n  return ret;\n}\n\n/**\n * Make sure _path is set.\n *\n * @parmam {String} method\n */\n\nQuery.prototype._ensurePath = function (method) {\n  if (!this._path) {\n    var msg = method + '() must be used after where() '\n                     + 'when called with these arguments'\n    throw new Error(msg);\n  }\n}\n\n/*!\n * Permissions\n */\n\nQuery.permissions = require('./permissions');\n\nQuery._isPermitted = function (a, b) {\n  var denied = Query.permissions[b];\n  if (!denied) return true;\n  return true !== denied[a];\n}\n\nQuery.prototype._validate = function (action) {\n  var fail;\n  var validator;\n\n  if (undefined === action) {\n\n    validator = Query.permissions[this.op];\n    if ('function' != typeof validator) return true;\n\n    fail = validator(this);\n\n  } else if (!Query._isPermitted(action, this.op)) {\n    fail = action;\n  }\n\n  if (fail) {\n    throw new Error(fail + ' cannot be used with ' + this.op);\n  }\n}\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @param {Object} conds\n * @return {Boolean}\n */\n\nQuery.canMerge = function (conds) {\n  return conds instanceof Query || utils.isObject(conds);\n}\n\n/**\n * Set a trace function that will get called whenever a\n * query is executed.\n *\n * See `setTraceFunction()` for details.\n *\n * @param {Object} conds\n * @return {Boolean}\n */\nQuery.setGlobalTraceFunction = function (traceFunction) {\n  Query.traceFunction = traceFunction;\n}\n\n/*!\n * Exports.\n */\n\nQuery.utils = utils;\nQuery.env = require('./env')\nQuery.Collection = require('./collection');\nQuery.BaseCollection = require('./collection/collection');\nQuery.Promise = require('bluebird');\nmodule.exports = exports = Query;\n\n// TODO\n// test utils\n"]}