{"version":3,"sources":["collection.js"],"names":[],"mappings":"AAAA;;;;;;AAMA,IAAI,UAAU,CACV,MADU,EAEV,SAFU,EAGV,QAHU,EAIV,QAJU,EAKV,OALU,EAMV,UANU,EAOV,eAPU,EAQV,WARU,EASV,YATU,CAAV;;;;;;AAgBJ,SAAS,UAAT,GAAuB,EAAvB;;AAEA,KAAK,IAAI,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAAR,EAAgB,IAAI,GAAJ,EAAS,EAAE,CAAF,EAAK;AAClD,MAAI,SAAS,QAAQ,CAAR,CAAT,CAD8C;AAElD,aAAW,SAAX,CAAqB,MAArB,IAA+B,eAAe,MAAf,CAA/B,CAFkD;CAApD;;AAKA,OAAO,OAAP,GAAiB,UAAU,UAAV;AACjB,WAAW,OAAX,GAAqB,OAArB;;;;;;AAMA,SAAS,cAAT,CAAyB,MAAzB,EAAiC;AAC/B,SAAO,YAAY;AACjB,UAAM,IAAI,KAAJ,CAAU,gBAAgB,MAAhB,GAAyB,kBAAzB,CAAhB,CADiB;GAAZ,CADwB;CAAjC","file":"collection-compiled.js","sourcesContent":["'use strict';\n\n/**\n * methods a collection must implement\n */\n\nvar methods = [\n    'find'\n  , 'findOne'\n  , 'update'\n  , 'remove'\n  , 'count'\n  , 'distinct'\n  , 'findAndModify'\n  , 'aggregate'\n  , 'findStream'\n];\n\n/**\n * Collection base class from which implementations inherit\n */\n\nfunction Collection () {}\n\nfor (var i = 0, len = methods.length; i < len; ++i) {\n  var method = methods[i];\n  Collection.prototype[method] = notImplemented(method);\n}\n\nmodule.exports = exports = Collection;\nCollection.methods = methods;\n\n/**\n * creates a function which throws an implementation error\n */\n\nfunction notImplemented (method) {\n  return function () {\n    throw new Error('collection.' + method + ' not implemented');\n  }\n}\n\n"]}