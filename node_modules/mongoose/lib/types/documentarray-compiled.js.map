{"version":3,"sources":["documentarray.js"],"names":[],"mappings":";;;;AAIA,IAAI,gBAAgB,QAAQ,SAAR,CAAhB;IACA,WAAW,QAAQ,YAAR,CAAX;IACA,iBAAiB,QAAQ,oBAAR,CAAjB;IACA,QAAQ,QAAQ,UAAR,CAAR;IACA,WAAW,QAAQ,aAAR,CAAX;;;;;;;;;;;;;;AAcJ,SAAS,qBAAT,CAA+B,MAA/B,EAAuC,IAAvC,EAA6C,GAA7C,EAAkD;AAChD,MAAI,MAAM,GAAG,MAAH,CAAU,MAAV,CAAN,CAD4C;AAEhD,MAAI,QAAQ;AACV,qBAAiB,IAAjB;AACA,6BAAyB,IAAzB;AACA,gBAAY,EAAZ;AACA,WAAO,IAAP;AACA,cAAU,EAAV;AACA,aAAS,KAAK,CAAL;AACT,eAAW,KAAK,CAAL;GAPT,CAF4C;AAWhD,MAAI,MAAM,EAAN;;;;AAX4C,MAe5C,SAAS,OAAO,IAAP,CAAY,cAAc,KAAd,CAArB,CAf4C;AAgBhD,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAO,MAAP,EAAe,EAAE,CAAF,EAAK;AACtC,QAAI,OAAO,CAAP,CAAJ,IAAiB,EAAC,YAAY,KAAZ,EAAmB,cAAc,IAAd,EAAoB,UAAU,IAAV,EAAgB,OAAO,cAAc,KAAd,CAAoB,OAAO,CAAP,CAApB,CAAP,EAAzE,CADsC;GAAxC;;AAIA,MAAI,UAAU,OAAO,IAAP,CAAY,sBAAsB,KAAtB,CAAtB,CApB4C;AAqBhD,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,EAAgB,EAAE,CAAF,EAAK;AACvC,QAAI,QAAQ,CAAR,CAAJ,IAAkB,EAAC,YAAY,KAAZ,EAAmB,cAAc,IAAd,EAAoB,UAAU,IAAV,EAAgB,OAAO,sBAAsB,KAAtB,CAA4B,QAAQ,CAAR,CAA5B,CAAP,EAA1E,CADuC;GAAzC;;AAIA,MAAI,QAAQ,OAAO,IAAP,CAAY,KAAZ,CAAR,CAzB4C;AA0BhD,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAN,EAAc,EAAE,CAAF,EAAK;AACrC,QAAI,MAAM,CAAN,CAAJ,IAAgB,EAAC,YAAY,KAAZ,EAAmB,cAAc,IAAd,EAAoB,UAAU,IAAV,EAAgB,OAAO,MAAM,MAAM,CAAN,CAAN,CAAP,EAAxE,CADqC;GAAvC;;AAIA,SAAO,gBAAP,CAAwB,GAAxB,EAA6B,GAA7B;;;;;;AA9BgD,MAoC5C,OAAO,eAAe,QAAf,EAAyB;AAClC,QAAI,OAAJ,GAAc,GAAd,CADkC;AAElC,QAAI,OAAJ,GAAc,IAAI,MAAJ,CAAW,IAAX,CAAgB,IAAhB,CAAd,CAFkC;AAGlC,QAAI,SAAJ,GAAgB;AACd,aAAO,IAAI,MAAJ,CAAW,OAAX,CAAP;AACA,YAAM,IAAI,MAAJ,CAAW,MAAX,CAAN;KAFF,CAHkC;;AAQlC,QAAI,EAAJ,CAAO,MAAP,EAAe,IAAI,SAAJ,CAAc,IAAd,CAAf,CARkC;AASlC,QAAI,EAAJ,CAAO,OAAP,EAAgB,IAAI,SAAJ,CAAc,KAAd,CAAhB,CATkC;GAApC;;AAYA,SAAO,GAAP,CAhDgD;CAAlD;;;;;;AAuDA,sBAAsB,KAAtB,GAA8B;;;;;;;;;;AAU5B,SAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC5B,QAAI,iBAAiB,KAAK,OAAL,CAAa,iBAAb,EAAgC;AACnD,UAAI,EAAE,MAAM,QAAN,IAAkB,MAAM,aAAN,CAApB,EAA0C;;AAE5C,cAAM,QAAN,GAAiB,KAAK,OAAL,CAF2B;AAG5C,cAAM,aAAN,GAAsB,IAAtB,CAH4C;OAA9C;AAKA,YAAM,OAAN,GAAgB,KAAhB,CANmD;AAOnD,aAAO,KAAP,CAPmD;KAArD;;;;;AAD4B,QAcxB,OAAO,QAAP,CAAgB,KAAhB,KACA,iBAAiB,QAAjB,IAA6B,CAAC,MAAM,QAAN,CAAe,KAAf,CAAD,EAAwB;AACvD,cAAQ,EAAC,KAAK,KAAL,EAAT,CADuD;KADzD;AAIA,WAAO,IAAI,KAAK,OAAL,CAAa,iBAAb,CAA+B,KAAnC,EAA0C,IAA1C,EAAgD,SAAhD,EAA2D,SAA3D,EAAsE,KAAtE,CAAP,CAlB4B;GAAvB;;;;;;;;;;;;;;;;;AAoCP,MAAI,UAAS,EAAT,EAAa;AACf,QAAI,MAAJ,EACI,GADJ,EAEI,GAFJ,CADe;;AAKf,QAAI;AACF,UAAI,UAAU,eAAe,SAAf,CAAyB,IAAzB,CAA8B,IAA9B,CAAmC,EAAnC,EAAuC,EAAvC,CAAV,CADF;AAEF,UAAI,OAAJ,EAAa;AACX,iBAAS,OAAO,OAAP,CAAT,CADW;OAAb;KAFF,CAKE,OAAO,CAAP,EAAU;AACV,eAAS,IAAT,CADU;KAAV;;AAIF,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,IAAI,CAAJ,EAAO,GAAxC,EAA6C;AAC3C,YAAM,KAAK,CAAL,EAAQ,GAAR,CAAY,KAAZ,CAAN,CAD2C;;AAG3C,UAAI,QAAQ,IAAR,IAAgB,OAAO,GAAP,KAAe,WAAf,EAA4B;AAC9C,iBAD8C;OAAhD,MAEO,IAAI,eAAe,QAAf,EAAyB;AAClC,gBAAQ,MAAM,OAAO,EAAP,CAAN,CAAR,CADkC;AAElC,YAAI,OAAO,IAAI,GAAJ,EAAS;AAClB,iBAAO,KAAK,CAAL,CAAP,CADkB;SAApB;OAFK,MAKA,IAAI,EAAE,cAAc,QAAd,CAAF,IAA6B,EAAE,eAAe,QAAf,CAAF,EAA4B;AAClE,YAAI,MAAM,SAAN,CAAgB,EAAhB,EAAoB,GAApB,CAAJ,EAA8B;AAC5B,iBAAO,KAAK,CAAL,CAAP,CAD4B;SAA9B;OADK,MAIA,IAAI,UAAU,GAAV,EAAe;AACxB,eAAO,KAAK,CAAL,CAAP,CADwB;OAAnB;KAdT;;AAmBA,WAAO,IAAP,CAjCe;GAAb;;;;;;;;;;;;;;;;AAkDJ,YAAU,UAAS,OAAT,EAAkB;AAC1B,WAAO,KAAK,GAAL,CAAS,UAAS,GAAT,EAAc;AAC5B,aAAO,OAAO,IAAI,QAAJ,CAAa,OAAb,CAAP,IAAgC,IAAhC,CADqB;KAAd,CAAhB,CAD0B;GAAlB;;;;;;;;;;AAcV,WAAS,YAAW;AAClB,WAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAA3B,CAAP,CADkB;GAAX;;;;;;;;;;;;;AAeT,UAAQ,UAAS,GAAT,EAAc;AACpB,WAAO,IAAI,KAAK,OAAL,CAAa,iBAAb,CAA+B,GAAnC,CAAP,CADoB;GAAd;;;;;;;;;;;;AAcR,UAAQ,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AAC7B,QAAI,QAAQ,IAAR,CADyB;AAE7B,WAAO,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AAC1B,UAAI,IAAI,MAAM,MAAN,CADkB;AAE1B,aAAO,GAAP,EAAY;AACV,YAAI,CAAC,MAAM,CAAN,CAAD,EAAW;AACb,mBADa;SAAf;AAGA,gBAAQ,KAAR;;AAEE,eAAK,MAAL;AACE,kBAAM,MAAM,CAAN,CAAN,CADF;AAEE,kBAFF;AAFF;;AAOI,kBAFF;AALF,SAJU;AAaV,cAAM,CAAN,EAAS,IAAT,CAAc,KAAd,EAAqB,GAArB,EAbU;OAAZ;KAFK,CAFsB;GAAvB;;CA3IV;;;;;;AAuKA,OAAO,OAAP,GAAiB,qBAAjB","file":"documentarray-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseArray = require('./array'),\n    ObjectId = require('./objectid'),\n    ObjectIdSchema = require('../schema/objectid'),\n    utils = require('../utils'),\n    Document = require('../document');\n\n/**\n * DocumentArray constructor\n *\n * @param {Array} values\n * @param {String} path the path to this array\n * @param {Document} doc parent document\n * @api private\n * @return {MongooseDocumentArray}\n * @inherits MongooseArray\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseDocumentArray(values, path, doc) {\n  var arr = [].concat(values);\n  var props = {\n    isMongooseArray: true,\n    isMongooseDocumentArray: true,\n    validators: [],\n    _path: path,\n    _atomics: {},\n    _schema: void 0,\n    _handlers: void 0\n  };\n  var tmp = {};\n\n  // Values always have to be passed to the constructor to initialize, since\n  // otherwise MongooseArray#push will mark the array as modified to the parent.\n  var keysMA = Object.keys(MongooseArray.mixin);\n  for (var j = 0; j < keysMA.length; ++j) {\n    tmp[keysMA[j]] = {enumerable: false, configurable: true, writable: true, value: MongooseArray.mixin[keysMA[j]]};\n  }\n\n  var keysMDA = Object.keys(MongooseDocumentArray.mixin);\n  for (var i = 0; i < keysMDA.length; ++i) {\n    tmp[keysMDA[i]] = {enumerable: false, configurable: true, writable: true, value: MongooseDocumentArray.mixin[keysMDA[i]]};\n  }\n\n  var keysP = Object.keys(props);\n  for (var k = 0; k < keysP.length; ++k) {\n    tmp[keysP[k]] = {enumerable: false, configurable: true, writable: true, value: props[keysP[k]]};\n  }\n\n  Object.defineProperties(arr, tmp);\n\n  // Because doc comes from the context of another function, doc === global\n  // can happen if there was a null somewhere up the chain (see #3020 && #3034)\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\n  // to make more proof against unusual node environments\n  if (doc && doc instanceof Document) {\n    arr._parent = doc;\n    arr._schema = doc.schema.path(path);\n    arr._handlers = {\n      isNew: arr.notify('isNew'),\n      save: arr.notify('save')\n    };\n\n    doc.on('save', arr._handlers.save);\n    doc.on('isNew', arr._handlers.isNew);\n  }\n\n  return arr;\n}\n\n/*!\n * Inherits from MongooseArray\n */\n// MongooseDocumentArray.mixin = Object.create( MongooseArray.mixin );\nMongooseDocumentArray.mixin = {\n\n  /**\n   * Overrides MongooseArray#cast\n   *\n   * @method _cast\n   * @api private\n   * @receiver MongooseDocumentArray\n   */\n\n  _cast: function(value, index) {\n    if (value instanceof this._schema.casterConstructor) {\n      if (!(value.__parent && value.__parentArray)) {\n        // value may have been created using array.create()\n        value.__parent = this._parent;\n        value.__parentArray = this;\n      }\n      value.__index = index;\n      return value;\n    }\n\n    // handle cast('string') or cast(ObjectId) etc.\n    // only objects are permitted so we can safely assume that\n    // non-objects are to be interpreted as _id\n    if (Buffer.isBuffer(value) ||\n        value instanceof ObjectId || !utils.isObject(value)) {\n      value = {_id: value};\n    }\n    return new this._schema.casterConstructor(value, this, undefined, undefined, index);\n  },\n\n  /**\n   * Searches array items for the first document with a matching _id.\n   *\n   * ####Example:\n   *\n   *     var embeddedDoc = m.array.id(some_id);\n   *\n   * @return {EmbeddedDocument|null} the subdocument or null if not found.\n   * @param {ObjectId|String|Number|Buffer} id\n   * @TODO cast to the _id based on schema for proper comparison\n   * @method id\n   * @api public\n   * @receiver MongooseDocumentArray\n   */\n\n  id: function(id) {\n    var casted,\n        sid,\n        _id;\n\n    try {\n      var casted_ = ObjectIdSchema.prototype.cast.call({}, id);\n      if (casted_) {\n        casted = String(casted_);\n      }\n    } catch (e) {\n      casted = null;\n    }\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      _id = this[i].get('_id');\n\n      if (_id === null || typeof _id === 'undefined') {\n        continue;\n      } else if (_id instanceof Document) {\n        sid || (sid = String(id));\n        if (sid == _id._id) {\n          return this[i];\n        }\n      } else if (!(id instanceof ObjectId) && !(_id instanceof ObjectId)) {\n        if (utils.deepEqual(id, _id)) {\n          return this[i];\n        }\n      } else if (casted == _id) {\n        return this[i];\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Returns a native js Array of plain js objects\n   *\n   * ####NOTE:\n   *\n   * _Each sub-document is converted to a plain object by calling its `#toObject` method._\n   *\n   * @param {Object} [options] optional options to pass to each documents `toObject` method call during conversion\n   * @return {Array}\n   * @method toObject\n   * @api public\n   * @receiver MongooseDocumentArray\n   */\n\n  toObject: function(options) {\n    return this.map(function(doc) {\n      return doc && doc.toObject(options) || null;\n    });\n  },\n\n  /**\n   * Helper for console.log\n   *\n   * @method inspect\n   * @api public\n   * @receiver MongooseDocumentArray\n   */\n\n  inspect: function() {\n    return Array.prototype.slice.call(this);\n  },\n\n  /**\n   * Creates a subdocument casted to this schema.\n   *\n   * This is the same subdocument constructor used for casting.\n   *\n   * @param {Object} obj the value to cast to this arrays SubDocument schema\n   * @method create\n   * @api public\n   * @receiver MongooseDocumentArray\n   */\n\n  create: function(obj) {\n    return new this._schema.casterConstructor(obj);\n  },\n\n  /**\n   * Creates a fn that notifies all child docs of `event`.\n   *\n   * @param {String} event\n   * @return {Function}\n   * @method notify\n   * @api private\n   * @receiver MongooseDocumentArray\n   */\n\n  notify: function notify(event) {\n    var _this = this;\n    return function notify(val) {\n      var i = _this.length;\n      while (i--) {\n        if (!_this[i]) {\n          continue;\n        }\n        switch (event) {\n          // only swap for save event for now, we may change this to all event types later\n          case 'save':\n            val = _this[i];\n            break;\n          default:\n            // NO-OP\n            break;\n        }\n        _this[i].emit(event, val);\n      }\n    };\n  }\n\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = MongooseDocumentArray;\n"]}