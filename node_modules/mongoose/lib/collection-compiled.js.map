{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar STATES = require('./connectionstate');\n\n/**\n * Abstract Collection constructor\n *\n * This is the base class that drivers inherit from and implement.\n *\n * @param {String} name name of the collection\n * @param {Connection} conn A MongooseConnection instance\n * @param {Object} opts optional collection options\n * @api public\n */\n\nfunction Collection(name, conn, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  if (opts.capped === void 0) {\n    opts.capped = {};\n  }\n\n  opts.bufferCommands = undefined === opts.bufferCommands\n      ? true\n      : opts.bufferCommands;\n\n  if (typeof opts.capped === 'number') {\n    opts.capped = {size: opts.capped};\n  }\n\n  this.opts = opts;\n  this.name = name;\n  this.collectionName = name;\n  this.conn = conn;\n  this.queue = [];\n  this.buffer = this.opts.bufferCommands;\n  this.emitter = new EventEmitter();\n\n  if (STATES.connected === this.conn.readyState) {\n    this.onOpen();\n  }\n}\n\n/**\n * The collection name\n *\n * @api public\n * @property name\n */\n\nCollection.prototype.name;\n\n/**\n * The collection name\n *\n * @api public\n * @property collectionName\n */\n\nCollection.prototype.collectionName;\n\n/**\n * The Connection instance\n *\n * @api public\n * @property conn\n */\n\nCollection.prototype.conn;\n\n/**\n * Called when the database connects\n *\n * @api private\n */\n\nCollection.prototype.onOpen = function() {\n  this.buffer = false;\n  this.doQueue();\n};\n\n/**\n * Called when the database disconnects\n *\n * @api private\n */\n\nCollection.prototype.onClose = function() {\n  if (this.opts.bufferCommands) {\n    this.buffer = true;\n  }\n};\n\n/**\n * Queues a method for later execution when its\n * database connection opens.\n *\n * @param {String} name name of the method to queue\n * @param {Array} args arguments to pass to the method when executed\n * @api private\n */\n\nCollection.prototype.addQueue = function(name, args) {\n  this.queue.push([name, args]);\n  return this;\n};\n\n/**\n * Executes all queued methods and clears the queue.\n *\n * @api private\n */\n\nCollection.prototype.doQueue = function() {\n  for (var i = 0, l = this.queue.length; i < l; i++) {\n    this[this.queue[i][0]].apply(this, this.queue[i][1]);\n  }\n  this.queue = [];\n  var _this = this;\n  process.nextTick(function() {\n    _this.emitter.emit('queue');\n  });\n  return this;\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.ensureIndex = function() {\n  throw new Error('Collection#ensureIndex unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findAndModify = function() {\n  throw new Error('Collection#findAndModify unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.findOne = function() {\n  throw new Error('Collection#findOne unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.find = function() {\n  throw new Error('Collection#find unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.insert = function() {\n  throw new Error('Collection#insert unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.save = function() {\n  throw new Error('Collection#save unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.update = function() {\n  throw new Error('Collection#update unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.getIndexes = function() {\n  throw new Error('Collection#getIndexes unimplemented by driver');\n};\n\n/**\n * Abstract method that drivers must implement.\n */\n\nCollection.prototype.mapReduce = function() {\n  throw new Error('Collection#mapReduce unimplemented by driver');\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Collection;\n"]}