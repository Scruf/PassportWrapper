{"version":3,"sources":["schema.js"],"names":[],"mappings":"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","file":"schema-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar readPref = require('./drivers').ReadPreference;\nvar EventEmitter = require('events').EventEmitter;\nvar VirtualType = require('./virtualtype');\nvar utils = require('./utils');\nvar MongooseTypes;\nvar Kareem = require('kareem');\nvar async = require('async');\n\nvar IS_QUERY_HOOK = {\n  count: true,\n  find: true,\n  findOne: true,\n  findOneAndUpdate: true,\n  findOneAndRemove: true,\n  update: true\n};\n\n/**\n * Schema constructor.\n *\n * ####Example:\n *\n *     var child = new Schema({ name: String });\n *     var schema = new Schema({ name: String, age: Number, children: [child] });\n *     var Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * ####Options:\n *\n * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true\n * - [capped](/docs/guide.html#capped): bool - defaults to false\n * - [collection](/docs/guide.html#collection): string - no default\n * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false.\n * - [id](/docs/guide.html#id): bool - defaults to true\n * - [_id](/docs/guide.html#_id): bool - defaults to true\n * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true\n * - [read](/docs/guide.html#read): string\n * - [safe](/docs/guide.html#safe): bool - defaults to true.\n * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`\n * - [strict](/docs/guide.html#strict): bool - defaults to true\n * - [toJSON](/docs/guide.html#toJSON) - object - no default\n * - [toObject](/docs/guide.html#toObject) - object - no default\n * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'\n * - [useNestedStrict](/docs/guide.html#useNestedStrict) - boolean - defaults to false\n * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [versionKey](/docs/guide.html#versionKey): string - defaults to \"__v\"\n *\n * ####Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object} definition\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema(obj, options) {\n  if (!(this instanceof Schema)) {\n    return new Schema(obj, options);\n  }\n\n  this.paths = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.singleNestedPaths = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = {};\n  this.statics = {};\n  this.tree = {};\n  this._requiredpaths = undefined;\n  this.discriminatorMapping = undefined;\n  this._indexedpaths = undefined;\n\n  this.s = {\n    hooks: new Kareem(),\n    queryHooks: IS_QUERY_HOOK\n  };\n\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (obj) {\n    this.add(obj);\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  var auto_id = !this.paths['_id'] &&\n      (!this.options.noId && this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    obj = {_id: {auto: true}};\n    obj._id[this.options.typeKey] = Schema.ObjectId;\n    this.add(obj);\n  }\n\n  // ensure the documents receive an id getter unless disabled\n  var autoid = !this.paths['id'] &&\n      (!this.options.noVirtualId && this.options.id);\n  if (autoid) {\n    this.virtual('id').get(idGetter);\n  }\n\n  for (var i = 0; i < this._defaultMiddleware.length; ++i) {\n    var m = this._defaultMiddleware[i];\n    this[m.kind](m.hook, !!m.isAsync, m.fn);\n  }\n\n  if (this.options.timestamps) {\n    this.setupTimestamp(this.options.timestamps);\n  }\n}\n\n/*!\n * Returns this documents _id cast to a string.\n */\n\nfunction idGetter() {\n  if (this.$__._id) {\n    return this.$__._id;\n  }\n\n  this.$__._id = this._id == null\n      ? null\n      : String(this._id);\n  return this.$__._id;\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create(EventEmitter.prototype);\nSchema.prototype.constructor = Schema;\nSchema.prototype.instanceOfSchema = true;\n\n/**\n * Default middleware attached to a schema. Cannot be changed.\n *\n * This field is used to make sure discriminators don't get multiple copies of\n * built-in middleware. Declared as a constant because changing this at runtime\n * may lead to instability with Model.prototype.discriminator().\n *\n * @api private\n * @property _defaultMiddleware\n */\nObject.defineProperty(Schema.prototype, '_defaultMiddleware', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: [{\n    kind: 'pre',\n    hook: 'save',\n    fn: function(next, options) {\n      // Nested docs have their own presave\n      if (this.ownerDocument) {\n        return next();\n      }\n\n      var hasValidateBeforeSaveOption = options &&\n          (typeof options === 'object') &&\n          ('validateBeforeSave' in options);\n\n      var shouldValidate;\n      if (hasValidateBeforeSaveOption) {\n        shouldValidate = !!options.validateBeforeSave;\n      } else {\n        shouldValidate = this.schema.options.validateBeforeSave;\n      }\n\n      // Validate\n      if (shouldValidate) {\n        // HACK: use $__original_validate to avoid promises so bluebird doesn't\n        // complain\n        if (this.$__original_validate) {\n          this.$__original_validate({__noPromise: true}, function(error) {\n            next(error);\n          });\n        } else {\n          this.validate({__noPromise: true}, function(error) {\n            next(error);\n          });\n        }\n      } else {\n        next();\n      }\n    }\n  }, {\n    kind: 'pre',\n    hook: 'save',\n    isAsync: true,\n    fn: function(next, done) {\n      var subdocs = this.$__getAllSubdocs();\n\n      if (!subdocs.length || this.$__preSavingFromParent) {\n        done();\n        next();\n        return;\n      }\n\n      async.each(subdocs, function(subdoc, cb) {\n        subdoc.$__preSavingFromParent = true;\n        subdoc.save(function(err) {\n          cb(err);\n        });\n      }, function(error) {\n        for (var i = 0; i < subdocs.length; ++i) {\n          delete subdocs[i].$__preSavingFromParent;\n        }\n        if (error) {\n          done(error);\n          return;\n        }\n        next();\n        done();\n      });\n    }\n  }]\n});\n\n/**\n * Schema as flat paths\n *\n * ####Example:\n *     {\n *         '_id'        : SchemaType,\n *       , 'nested.key' : SchemaType,\n *     }\n *\n * @api private\n * @property paths\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * ####Example:\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nSchema.prototype.defaultOptions = function(options) {\n  if (options && options.safe === false) {\n    options.safe = {w: 0};\n  }\n\n  if (options && options.safe && options.safe.w === 0) {\n    // if you turn off safe writes, then versioning goes off as well\n    options.versionKey = false;\n  }\n\n  options = utils.options({\n    strict: true,\n    bufferCommands: true,\n    capped: false, // { size, max, autoIndexId }\n    versionKey: '__v',\n    discriminatorKey: '__t',\n    minimize: true,\n    autoIndex: null,\n    shardKey: null,\n    read: null,\n    validateBeforeSave: true,\n    // the following are only applied at construction time\n    noId: false, // deprecated, use { _id: false }\n    _id: true,\n    noVirtualId: false, // deprecated, use { id: false }\n    id: true,\n    typeKey: 'type'\n  }, options);\n\n  if (options.read) {\n    options.read = readPref(options.read);\n  }\n\n  return options;\n};\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * ####Example:\n *\n *     var ToySchema = new Schema;\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n * @param {Object} obj\n * @param {String} prefix\n * @api public\n */\n\nSchema.prototype.add = function add(obj, prefix) {\n  prefix = prefix || '';\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (obj[key] == null) {\n      throw new TypeError('Invalid value for schema path `' + prefix + key + '`');\n    }\n\n    if (Array.isArray(obj[key]) && obj[key].length === 1 && obj[key][0] == null) {\n      throw new TypeError('Invalid value for schema Array path `' + prefix + key + '`');\n    }\n\n    if (utils.isObject(obj[key]) &&\n        (!obj[key].constructor || utils.getFunctionName(obj[key].constructor) === 'Object') &&\n        (!obj[key][this.options.typeKey] || (this.options.typeKey === 'type' && obj[key].type.type))) {\n      if (Object.keys(obj[key]).length) {\n        // nested object { last: { name: String }}\n        this.nested[prefix + key] = true;\n        this.add(obj[key], prefix + key + '.');\n      } else {\n        this.path(prefix + key, obj[key]); // mixed type\n      }\n    } else {\n      this.path(prefix + key, obj[key]);\n    }\n  }\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error.\n *\n *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      var schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n */\n\nSchema.reserved = Object.create(null);\nvar reserved = Schema.reserved;\n// EventEmitter\nreserved.emit =\nreserved.on =\nreserved.once =\nreserved.listeners =\nreserved.removeListener =\n// document properties and functions\nreserved.collection =\nreserved.db =\nreserved.errors =\nreserved.init =\nreserved.isModified =\nreserved.isNew =\nreserved.get =\nreserved.modelName =\nreserved.save =\nreserved.schema =\nreserved.set =\nreserved.toObject =\nreserved.validate =\n// hooks.js\nreserved._pres = reserved._posts = 1;\n\n/**\n * Document keys to print warnings for\n */\n\nvar warnings = {};\nwarnings.increment = '`increment` should not be used as a schema path name ' +\n    'unless you have disabled versioning.';\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * ####Example\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path\n * @param {Object} constructor\n * @api public\n */\n\nSchema.prototype.path = function(path, obj) {\n  if (obj === undefined) {\n    if (this.paths[path]) {\n      return this.paths[path];\n    }\n    if (this.subpaths[path]) {\n      return this.subpaths[path];\n    }\n    if (this.singleNestedPaths[path]) {\n      return this.singleNestedPaths[path];\n    }\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n        ? getPositionalPath(this, path)\n        : undefined;\n  }\n\n  // some path names conflict with document methods\n  if (reserved[path]) {\n    throw new Error('`' + path + '` may not be used as a schema pathname');\n  }\n\n  if (warnings[path]) {\n    console.log('WARN: ' + warnings[path]);\n  }\n\n  // update the tree\n  var subpaths = path.split(/\\./),\n      last = subpaths.pop(),\n      branch = this.tree;\n\n  subpaths.forEach(function(sub, i) {\n    if (!branch[sub]) {\n      branch[sub] = {};\n    }\n    if (typeof branch[sub] !== 'object') {\n      var msg = 'Cannot set nested path `' + path + '`. '\n          + 'Parent path `'\n          + subpaths.slice(0, i).concat([sub]).join('.')\n          + '` already set to type ' + branch[sub].name\n          + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  });\n\n  branch[last] = utils.clone(obj);\n\n  this.paths[path] = Schema.interpretAsType(path, obj, this.options);\n  if (this.paths[path].$isSingleNested) {\n    for (var key in this.paths[path].schema.paths) {\n      this.singleNestedPaths[path + '.' + key] =\n          this.paths[path].schema.paths[key];\n    }\n    for (key in this.paths[path].schema.singleNestedPaths) {\n      this.singleNestedPaths[path + '.' + key] =\n          this.paths[path].schema.singleNestedPaths[key];\n    }\n  }\n  return this;\n};\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @api private\n */\n\nSchema.interpretAsType = function(path, obj, options) {\n  if (obj.constructor) {\n    var constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName !== 'Object') {\n      var oldObj = obj;\n      obj = {};\n      obj[options.typeKey] = oldObj;\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  var type = obj[options.typeKey] && (options.typeKey !== 'type' || !obj.type.type)\n      ? obj[options.typeKey]\n      : {};\n\n  if (utils.getFunctionName(type.constructor) === 'Object' || type === 'mixed') {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || Array === type || type === 'array') {\n    // if it was specified through { type } look for `cast`\n    var cast = (Array === type || type === 'array')\n        ? obj.cast\n        : type[0];\n\n    if (cast && cast.instanceOfSchema) {\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n\n    if (typeof cast === 'string') {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (cast && (!cast[options.typeKey] || (options.typeKey === 'type' && cast.type.type))\n        && utils.getFunctionName(cast.constructor) === 'Object'\n        && Object.keys(cast).length) {\n      // The `minimize` and `typeKey` options propagate to child schemas\n      // declared inline, like `{ arr: [{ val: { $type: String } }] }`.\n      // See gh-3560\n      var childSchemaOptions = {minimize: options.minimize};\n      if (options.typeKey) {\n        childSchemaOptions.typeKey = options.typeKey;\n      }\n      var childSchema = new Schema(cast, childSchemaOptions);\n      return new MongooseTypes.DocumentArray(path, childSchema, obj);\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj);\n  }\n\n  if (type && type.instanceOfSchema) {\n    return new MongooseTypes.Embedded(type, path, obj);\n  }\n\n  var name;\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else {\n    name = typeof type === 'string'\n        ? type\n      // If not string, `type` is a function. Outside of IE, function.name\n      // gives you the function name. In IE, you need to compute it\n        : type.schemaName || utils.getFunctionName(type);\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n\n  if (undefined == MongooseTypes[name]) {\n    throw new TypeError('Undefined type `' + name + '` at `' + path +\n        '`\\n  Did you try nesting Schemas? ' +\n        'You can only nest using refs or arrays.');\n  }\n\n  return new MongooseTypes[name](path, obj);\n};\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and schemaType as arguments on each iteration.\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function(fn) {\n  var keys = Object.keys(this.paths),\n      len = keys.length;\n\n  for (var i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * @api public\n * @param {Boolean} invalidate refresh the cache\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths(invalidate) {\n  if (this._requiredpaths && !invalidate) {\n    return this._requiredpaths;\n  }\n\n  var paths = Object.keys(this.paths),\n      i = paths.length,\n      ret = [];\n\n  while (i--) {\n    var path = paths[i];\n    if (this.paths[path].isRequired) {\n      ret.push(path);\n    }\n  }\n  this._requiredpaths = ret;\n  return this._requiredpaths;\n};\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths() {\n  if (this._indexedpaths) {\n    return this._indexedpaths;\n  }\n  this._indexedpaths = this.indexes();\n  return this._indexedpaths;\n};\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function(path) {\n  if (path in this.paths) {\n    return 'real';\n  }\n  if (path in this.virtuals) {\n    return 'virtual';\n  }\n  if (path in this.nested) {\n    return 'nested';\n  }\n  if (path in this.subpaths) {\n    return 'real';\n  }\n  if (path in this.singleNestedPaths) {\n    return 'real';\n  }\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {\n    return getPositionalPathType(this, path);\n  }\n  return 'adhocOrUndefined';\n};\n\n/**\n * Returns true iff this path is a child of a mixed schema.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nSchema.prototype.hasMixedParent = function(path) {\n  var subpaths = path.split(/\\./g);\n  path = '';\n  for (var i = 0; i < subpaths.length; ++i) {\n    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];\n    if (path in this.paths &&\n        this.paths[path] instanceof MongooseTypes.Mixed) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Setup updatedAt and createdAt timestamps to documents if enabled\n *\n * @param {Boolean|Object} timestamps timestamps options\n * @api private\n */\nSchema.prototype.setupTimestamp = function(timestamps) {\n  if (timestamps) {\n    var createdAt = timestamps.createdAt || 'createdAt',\n        updatedAt = timestamps.updatedAt || 'updatedAt',\n        schemaAdditions = {};\n\n    schemaAdditions[updatedAt] = Date;\n\n    if (!this.paths[createdAt]) {\n      schemaAdditions[createdAt] = Date;\n    }\n\n    this.add(schemaAdditions);\n\n    this.pre('save', function(next) {\n      var defaultTimestamp = new Date();\n      var auto_id = this._id && this._id.auto;\n\n      if (!this[createdAt]) {\n        this[createdAt] = auto_id ? this._id.getTimestamp() : defaultTimestamp;\n      }\n\n      if (this.isNew || this.isModified()) {\n        this[updatedAt] = this.isNew ? this[createdAt] : defaultTimestamp;\n      }\n\n      next();\n    });\n\n    var genUpdates = function() {\n      var now = new Date();\n      var updates = {$set: {}, $setOnInsert: {}};\n      updates.$set[updatedAt] = now;\n      updates.$setOnInsert[createdAt] = now;\n\n      return updates;\n    };\n\n    this.pre('findOneAndUpdate', function(next) {\n      this.findOneAndUpdate({}, genUpdates());\n      next();\n    });\n\n    this.pre('update', function(next) {\n      this.update({}, genUpdates());\n      next();\n    });\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction getPositionalPathType(self, path) {\n  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths[subpaths[0]];\n  }\n\n  var val = self.path(subpaths[0]);\n  var isNested = false;\n  if (!val) {\n    return val;\n  }\n\n  var last = subpaths.length - 1,\n      subpath,\n      i = 1;\n\n  for (; i < subpaths.length; ++i) {\n    isNested = false;\n    subpath = subpaths[i];\n\n    if (i === last && val && !val.schema && !/\\D/.test(subpath)) {\n      if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) {\n      continue;\n    }\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    var type = val.schema.pathType(subpath);\n    isNested = (type === 'nested');\n    val = val.schema.path(subpath);\n  }\n\n  self.subpaths[path] = val;\n  if (val) {\n    return 'real';\n  }\n  if (isNested) {\n    return 'nested';\n  }\n  return 'adhocOrUndefined';\n}\n\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath(self, path) {\n  getPositionalPathType(self, path);\n  return self.subpaths[path];\n}\n\n/**\n * Adds a method call to the queue.\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api public\n */\n\nSchema.prototype.queue = function(name, args) {\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the document.\n *\n * ####Example\n *\n *     var toySchema = new Schema(..);\n *\n *     toySchema.pre('save', function (next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     })\n *\n *     toySchema.pre('validate', function (next) {\n *       if (this.name !== 'Woody') this.name = 'Woody';\n *       next();\n *     })\n *\n * @param {String} method\n * @param {Function} callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.pre = function() {\n  var name = arguments[0];\n  if (IS_QUERY_HOOK[name]) {\n    this.s.hooks.pre.apply(this.s.hooks, arguments);\n    return this;\n  }\n  return this.queue('pre', arguments);\n};\n\n/**\n * Defines a post hook for the document\n *\n * Post hooks fire `on` the event emitted from document instances of Models compiled from this schema.\n *\n *     var schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     var Model = mongoose.model('Model', schema);\n *\n *     var m = new Model(..);\n *     m.save(function (err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n * @param {String} method name of the method to hook\n * @param {Function} fn callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.post = function(method, fn) {\n  if (IS_QUERY_HOOK[method]) {\n    this.s.hooks.post.apply(this.s.hooks, arguments);\n    return this;\n  }\n  // assuming that all callbacks with arity < 2 are synchronous post hooks\n  if (fn.length < 2) {\n    return this.queue('on', [arguments[0], function(doc) {\n      return fn.call(doc, doc);\n    }]);\n  }\n\n  return this.queue('post', [arguments[0], function(next) {\n    // wrap original function so that the callback goes last,\n    // for compatibility with old code that is using synchronous post hooks\n    var _this = this;\n    var args = Array.prototype.slice.call(arguments, 1);\n    fn.call(this, this, function(err) {\n      return next.apply(_this, [err].concat(args));\n    });\n  }]);\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * @param {Function} plugin callback\n * @param {Object} [opts]\n * @see plugins\n * @api public\n */\n\nSchema.prototype.plugin = function(fn, opts) {\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     var Kitty = mongoose.model('Kitty', schema);\n *\n *     var fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     fizz.purr();\n *     fizz.scratch();\n *\n * @param {String|Object} method name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.method = function(name, fn) {\n  if (typeof name !== 'string') {\n    for (var i in name) {\n      this.methods[i] = name[i];\n    }\n  } else {\n    this.methods[name] = fn;\n  }\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = new Schema(..);\n *     schema.static('findByName', function (name, callback) {\n *       return this.find({ name: name }, callback);\n *     });\n *\n *     var Drink = mongoose.model('Drink', schema);\n *     Drink.findByName('sanpellegrino', function (err, drinks) {\n *       //\n *     });\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String} name\n * @param {Function} fn\n * @api public\n */\n\nSchema.prototype.static = function(name, fn) {\n  if (typeof name !== 'string') {\n    for (var i in name) {\n      this.statics[i] = name[i];\n    }\n  } else {\n    this.statics[name] = fn;\n  }\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * ####Example\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields\n * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)\n * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link.\n * @api public\n */\n\nSchema.prototype.index = function(fields, options) {\n  options || (options = {});\n\n  if (options.expires) {\n    utils.expires(options);\n  }\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets/gets a schema option.\n *\n * ####Example\n *\n *     schema.set('strict'); // 'true' by default\n *     schema.set('strict', false); // Sets 'strict' to false\n *     schema.set('strict'); // 'false'\n *\n * @param {String} key option name\n * @param {Object} [value] if not passed, the current option value is returned\n * @see Schema ./\n * @api public\n */\n\nSchema.prototype.set = function(key, value, _tags) {\n  if (arguments.length === 1) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      this.options[key] = readPref(value, _tags);\n      break;\n    case 'safe':\n      this.options[key] = value === false\n          ? {w: 0}\n          : value;\n      break;\n    case 'timestamps':\n      this.setupTimestamp(value);\n      this.options[key] = value;\n      break;\n    default:\n      this.options[key] = value;\n  }\n\n  return this;\n};\n\n/**\n * Gets a schema option.\n *\n * @param {String} key option name\n * @api public\n */\n\nSchema.prototype.get = function(key) {\n  return this.options[key];\n};\n\n/**\n * The allowed index types\n *\n * @static indexTypes\n * @receiver Schema\n * @api public\n */\n\nvar indexTypes = '2d 2dsphere hashed text'.split(' ');\n\nObject.defineProperty(Schema, 'indexTypes', {\n  get: function() {\n    return indexTypes;\n  },\n  set: function() {\n    throw new Error('Cannot overwrite Schema.indexTypes');\n  }\n});\n\n/**\n * Compiles indexes from fields and schema-level indexes\n *\n * @api public\n */\n\nSchema.prototype.indexes = function() {\n  'use strict';\n\n  var indexes = [];\n  var seenPrefix = {};\n\n  var collectIndexes = function(schema, prefix) {\n    if (seenPrefix[prefix]) {\n      return;\n    }\n    seenPrefix[prefix] = true;\n\n    prefix = prefix || '';\n    var key, path, index, field, isObject, options, type;\n    var keys = Object.keys(schema.paths);\n\n    for (var i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      path = schema.paths[key];\n\n      if ((path instanceof MongooseTypes.DocumentArray) || path.$isSingleNested) {\n        collectIndexes(path.schema, key + '.');\n      } else {\n        index = path._index;\n\n        if (index !== false && index !== null && index !== undefined) {\n          field = {};\n          isObject = utils.isObject(index);\n          options = isObject ? index : {};\n          type = typeof index === 'string' ? index :\n              isObject ? index.type :\n                  false;\n\n          if (type && ~Schema.indexTypes.indexOf(type)) {\n            field[prefix + key] = type;\n          } else if (options.text) {\n            field[prefix + key] = 'text';\n            delete options.text;\n          } else {\n            field[prefix + key] = 1;\n          }\n\n          delete options.type;\n          if (!('background' in options)) {\n            options.background = true;\n          }\n\n          indexes.push([field, options]);\n        }\n      }\n    }\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        if (!('background' in index[1])) {\n          index[1].background = true;\n        }\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n  };\n\n  collectIndexes(this);\n  return indexes;\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    var subindexes = schema._indexes,\n        len = subindexes.length,\n        indexObj,\n        newindex,\n        klen,\n        keys,\n        key,\n        i = 0,\n        j;\n\n    for (i = 0; i < len; ++i) {\n      indexObj = subindexes[i][0];\n      keys = Object.keys(indexObj);\n      klen = keys.length;\n      newindex = {};\n\n      // use forward iteration, order matters\n      for (j = 0; j < klen; ++j) {\n        key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      indexes.push([newindex, subindexes[i][1]]);\n    }\n  }\n};\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function(name, options) {\n  var virtuals = this.virtuals;\n  var parts = name.split('.');\n  virtuals[name] = parts.reduce(function(mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length - 1)\n        ? new VirtualType(options, name)\n        : {});\n    return mem[part];\n  }, this.tree);\n  return virtuals[name];\n};\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name\n * @return {VirtualType}\n */\n\nSchema.prototype.virtualpath = function(name) {\n  return this.virtuals[name];\n};\n\n/**\n * Removes the given `path` (or [`paths`]).\n *\n * @param {String|Array} path\n *\n * @api public\n */\nSchema.prototype.remove = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    path.forEach(function(name) {\n      if (this.path(name)) {\n        delete this.paths[name];\n\n        var pieces = name.split('.');\n        var last = pieces.pop();\n        var branch = this.tree;\n        for (var i = 0; i < pieces.length; ++i) {\n          branch = branch[pieces[i]];\n        }\n        delete branch[last];\n      }\n    }, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getSchema = function(path) {\n  var _this = this;\n  var pathschema = _this.path(path);\n\n  if (pathschema) {\n    return pathschema;\n  }\n\n  function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if (parts[p] === '$') {\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            }\n            // this is the last path of the selector\n            return search(parts.slice(p), foundschema.schema);\n          }\n        }\n        return foundschema;\n      }\n    }\n  }\n\n  // look for arrays\n  return search(path.split('.'), _this);\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getPathType = function(path) {\n  var _this = this;\n  var pathschema = _this.path(path);\n\n  if (pathschema) {\n    return 'real';\n  }\n\n  function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return { schema: foundschema, pathType: 'mixed' };\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if (parts[p] === '$') {\n              if (p === parts.length - 1) {\n                return { schema: foundschema, pathType: 'nested' };\n              }\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            }\n            // this is the last path of the selector\n            return search(parts.slice(p), foundschema.schema);\n          }\n          return {\n            schema: foundschema,\n            pathType: foundschema.$isSingleNested ? 'nested' : 'array'\n          };\n        }\n        return { schema: foundschema, pathType: 'real' };\n      } else if (p === parts.length && schema.nested[trypath]) {\n        return { schema: schema, pathType: 'nested' };\n      }\n    }\n    return { schema: foundschema || schema, pathType: 'undefined' };\n  }\n\n  // look for arrays\n  return search(path.split('.'), _this);\n};\n\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * ####Types:\n *\n * - [String](#schema-string-js)\n * - [Number](#schema-number-js)\n * - [Boolean](#schema-boolean-js) | Bool\n * - [Array](#schema-array-js)\n * - [Buffer](#schema-buffer-js)\n * - [Date](#schema-date-js)\n * - [ObjectId](#schema-objectid-js) | Oid\n * - [Mixed](#schema-mixed-js)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     var Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nexports.ObjectId = MongooseTypes.ObjectId;\n"]}