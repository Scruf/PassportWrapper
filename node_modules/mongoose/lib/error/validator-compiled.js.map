{"version":3,"sources":["validator.js"],"names":[],"mappings":";;;;AAIA,IAAI,gBAAgB,QAAQ,aAAR,CAAhB;AACJ,IAAI,gBAAgB,cAAc,QAAd;;;;;;;;;;AAUpB,SAAS,cAAT,CAAwB,UAAxB,EAAoC;AAClC,MAAI,MAAM,WAAW,OAAX,CADwB;AAElC,MAAI,CAAC,GAAD,EAAM;AACR,UAAM,cAAc,OAAd,CAAsB,OAAtB,CADE;GAAV;;AAIA,MAAI,UAAU,KAAK,aAAL,CAAmB,GAAnB,EAAwB,UAAxB,CAAV,CAN8B;AAOlC,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,OAAzB,EAPkC;AAQlC,MAAI,MAAM,iBAAN,EAAyB;AAC3B,UAAM,iBAAN,CAAwB,IAAxB,EAD2B;GAA7B,MAEO;AACL,SAAK,KAAL,GAAa,IAAI,KAAJ,GAAY,KAAZ,CADR;GAFP;AAKA,OAAK,UAAL,GAAkB,UAAlB,CAbkC;AAclC,OAAK,IAAL,GAAY,gBAAZ,CAdkC;AAelC,OAAK,IAAL,GAAY,WAAW,IAAX,CAfsB;AAgBlC,OAAK,IAAL,GAAY,WAAW,IAAX,CAhBsB;AAiBlC,OAAK,KAAL,GAAa,WAAW,KAAX,CAjBqB;CAApC;;;;;;AAwBA,eAAe,SAAf,GAA2B,OAAO,MAAP,CAAc,cAAc,SAAd,CAAzC;AACA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,aAAvC;;;;;;;AAOA,OAAO,cAAP,CAAsB,eAAe,SAAf,EAA0B,YAAhD,EAA8D;AAC5D,cAAY,KAAZ;AACA,YAAU,IAAV;AACA,SAAO,IAAP;CAHF;;;;;;AAUA,eAAe,SAAf,CAAyB,aAAzB,GAAyC,UAAS,GAAT,EAAc,UAAd,EAA0B;AACjE,MAAI,gBAAgB,OAAO,IAAP,CAAY,UAAZ,CAAhB,CAD6D;AAEjE,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,cAAc,MAAd,EAAsB,EAAE,CAAF,EAAK;AAC7C,QAAI,eAAe,cAAc,CAAd,CAAf,CADyC;AAE7C,QAAI,iBAAiB,SAAjB,EAA4B;AAC9B,eAD8B;KAAhC;AAGA,UAAM,IAAI,OAAJ,CAAY,MAAM,aAAa,WAAb,EAAN,GAAmC,GAAnC,EAAwC,WAAW,YAAX,CAApD,CAAN,CAL6C;GAA/C;AAOA,SAAO,GAAP,CATiE;CAA1B;;;;;;AAgBzC,eAAe,SAAf,CAAyB,QAAzB,GAAoC,YAAW;AAC7C,SAAO,KAAK,OAAL,CADsC;CAAX;;;;;;AAQpC,OAAO,OAAP,GAAiB,cAAjB","file":"validator-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\nvar errorMessages = MongooseError.messages;\n\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\nfunction ValidatorError(properties) {\n  var msg = properties.message;\n  if (!msg) {\n    msg = errorMessages.general.default;\n  }\n\n  var message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.properties = properties;\n  this.name = 'ValidatorError';\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n}\n\n/*!\n * Inherits from MongooseError\n */\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function(msg, properties) {\n  var propertyNames = Object.keys(properties);\n  for (var i = 0; i < propertyNames.length; ++i) {\n    var propertyName = propertyNames[i];\n    if (propertyName === 'message') {\n      continue;\n    }\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n  return msg;\n};\n\n/*!\n * toString helper\n */\n\nValidatorError.prototype.toString = function() {\n  return this.message;\n};\n\n/*!\n * exports\n */\n\nmodule.exports = ValidatorError;\n"]}