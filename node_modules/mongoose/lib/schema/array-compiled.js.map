{"version":3,"sources":["array.js"],"names":[],"mappings":";;;;AAIA,IAAI,aAAa,QAAQ,eAAR,CAAb;IACA,YAAY,WAAW,SAAX;IACZ,QAAQ;AACN,WAAS,QAAQ,WAAR,CAAT;AACA,QAAM,QAAQ,QAAR,CAAN;AACA,UAAQ,QAAQ,UAAR,CAAR;AACA,UAAQ,QAAQ,UAAR,CAAR;AACA,YAAU,QAAQ,YAAR,CAAV;AACA,UAAQ,QAAQ,UAAR,CAAR;CANF;IAQA,gBAAgB,QAAQ,UAAR,EAAoB,KAApB;IAChB,cAAc,QAAQ,UAAR,EAAoB,QAApB;IACd,QAAQ,QAAQ,SAAR,CAAR;IACA,OAAO,QAAQ,SAAR,CAAP;IACA,QAAQ,QAAQ,UAAR,CAAR;IACA,mBAAmB,MAAM,gBAAN;;;;;;;;;;;;AAYvB,SAAS,WAAT,CAAqB,GAArB,EAA0B,IAA1B,EAAgC,OAAhC,EAAyC;AACvC,MAAI,IAAJ,EAAU;AACR,QAAI,cAAc,EAAd,CADI;;AAGR,QAAI,MAAM,eAAN,CAAsB,KAAK,WAAL,CAAtB,KAA4C,QAA5C,EAAsD;AACxD,UAAI,KAAK,IAAL,EAAW;;AAEb,sBAAc,MAAM,KAAN,CAAY,IAAZ,CAAd;AAFa,eAGN,YAAY,IAAZ,CAHM;AAIb,eAAO,KAAK,IAAL,CAJM;OAAf,MAKO;AACL,eAAO,KAAP,CADK;OALP;KADF;;;AAHQ,QAeJ,OAAO,OAAO,IAAP,KAAgB,QAAhB,GACL,IADK,GAEL,MAAM,eAAN,CAAsB,IAAtB,CAFK,CAfH;;AAmBR,QAAI,SAAS,QAAQ,KAAR,GACP,MAAM,IAAN,CADO,GAEP,IAFO,CAnBL;;AAuBR,SAAK,iBAAL,GAAyB,MAAzB,CAvBQ;AAwBR,SAAK,MAAL,GAAc,IAAI,MAAJ,CAAW,IAAX,EAAiB,WAAjB,CAAd,CAxBQ;AAyBR,QAAI,EAAE,KAAK,MAAL,YAAuB,WAAvB,CAAF,EAAuC;AACzC,WAAK,MAAL,CAAY,IAAZ,GAAmB,GAAnB,CADyC;KAA3C;GAzBF;;AA8BA,aAAW,IAAX,CAAgB,IAAhB,EAAsB,GAAtB,EAA2B,OAA3B,EAAoC,OAApC,EA/BuC;;AAiCvC,MAAI,QAAQ,IAAR;MACA,UADJ;MAEI,EAFJ,CAjCuC;;AAqCvC,MAAI,KAAK,YAAL,EAAmB;AACrB,iBAAa,KAAK,YAAL,CADQ;AAErB,SAAK,OAAO,UAAP,KAAsB,UAAtB,CAFgB;GAAvB;;AAKA,OAAK,OAAL,CAAa,YAAW;AACtB,QAAI,MAAM,KAAK,YAAL,GAAoB,cAAc,EAAd,CADR;AAEtB,WAAO,IAAI,aAAJ,CAAkB,GAAlB,EAAuB,MAAM,IAAN,EAAY,IAAnC,CAAP,CAFsB;GAAX,CAAb,CA1CuC;CAAzC;;;;;;;;AAsDA,YAAY,UAAZ,GAAyB,OAAzB;;;;;AAKA,YAAY,SAAZ,GAAwB,OAAO,MAAP,CAAc,WAAW,SAAX,CAAtC;AACA,YAAY,SAAZ,CAAsB,WAAtB,GAAoC,WAApC;;;;;;;;;;;AAWA,YAAY,SAAZ,CAAsB,aAAtB,GAAsC,UAAS,KAAT,EAAgB;AACpD,SAAO,CAAC,EAAE,SAAS,MAAM,MAAN,CAAX,CAD4C;CAAhB;;;;;;;;;;AAYtC,YAAY,SAAZ,CAAsB,YAAtB,GAAqC,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC1D,MAAI,KAAK,MAAL,CAAY,OAAZ,IAAuB,KAAK,MAAL,CAAY,OAAZ,CAAoB,GAApB,EAAyB;;AAElD,WAAO,KAAP,CAFkD;GAApD;;AAKA,SAAO,WAAW,SAAX,CAAqB,YAArB,CAAkC,IAAlC,CAAuC,IAAvC,EAA6C,KAA7C,EAAoD,KAApD,CAAP,CAN0D;CAAvB;;;;;;;;;;;AAkBrC,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,UAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB,EAA2B;AACtD,MAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,QAAI,CAAC,MAAM,MAAN,IAAgB,GAAjB,EAAsB;AACxB,UAAI,UAAU,IAAI,MAAJ,CAAW,YAAX,EAAV,CADoB;;AAGxB,WAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,EAAgB,IAAI,CAAJ,EAAO,EAAE,CAAF,EAAK;AAC9C,YAAI,YAAY,QAAQ,CAAR,EAAW,CAAX,EAAc,KAAK,IAAL,CAA1B,CAD0C;AAE9C,YAAI,cAAc,UAAd,IAA4B,cAAc,IAAd,EAAoB;AAClD,iBADkD;SAApD;OAFF;KAHF;;AAWA,QAAI,EAAE,SAAS,MAAM,eAAN,CAAX,EAAmC;AACrC,cAAQ,IAAI,aAAJ,CAAkB,KAAlB,EAAyB,KAAK,IAAL,EAAW,GAApC,CAAR,CADqC;KAAvC;;AAIA,QAAI,KAAK,MAAL,EAAa;AACf,UAAI;AACF,aAAK,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAN,EAAc,IAAI,CAAJ,EAAO,GAArC,EAA0C;AACxC,gBAAM,CAAN,IAAW,KAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,CAAN,CAAjB,EAA2B,GAA3B,EAAgC,IAAhC,CAAX,CADwC;SAA1C;OADF,CAIE,OAAO,CAAP,EAAU;;AAEV,cAAM,IAAI,SAAJ,CAAc,EAAE,IAAF,EAAQ,KAAtB,EAA6B,KAAK,IAAL,EAAW,CAAxC,CAAN,CAFU;OAAV;KALJ;;AAWA,WAAO,KAAP,CA3BwB;GAA1B;;;AADsD,MAgClD,CAAC,CAAC,GAAD,IAAQ,CAAC,CAAC,IAAD,EAAO;AACnB,QAAI,YAAJ,CAAiB,KAAK,IAAL,CAAjB,CADmB;GAArB;AAGA,SAAO,KAAK,IAAL,CAAU,CAAC,KAAD,CAAV,EAAmB,GAAnB,EAAwB,IAAxB,CAAP,CAnCsD;CAA3B;;;;;;;;;;AA8C7B,YAAY,SAAZ,CAAsB,YAAtB,GAAqC,UAAS,YAAT,EAAuB,KAAvB,EAA8B;AACjE,MAAI,OAAJ,EACI,GADJ,CADiE;;AAIjE,MAAI,UAAU,MAAV,KAAqB,CAArB,EAAwB;AAC1B,cAAU,KAAK,oBAAL,CAA0B,YAA1B,CAAV,CAD0B;;AAG1B,QAAI,CAAC,OAAD,EAAU;AACZ,YAAM,IAAI,KAAJ,CAAU,gBAAgB,YAAhB,GAA+B,cAA/B,CAAhB,CADY;KAAd;;AAIA,UAAM,QAAQ,IAAR,CAAa,IAAb,EAAmB,KAAnB,CAAN,CAP0B;GAA5B,MAQO;AACL,UAAM,YAAN,CADK;AAEL,QAAI,QAAQ,KAAK,iBAAL,CAAuB,SAAvB,CAFP;AAGL,QAAI,SAAS,MAAM,YAAN,IAAsB,MAAM,IAAN,CAH9B;AAIL,QAAI,SAAS,KAAK,MAAL,CAJR;;AAML,QAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,YAAM,IAAI,GAAJ,CAAQ,UAAS,CAAT,EAAY;AACxB,YAAI,MAAM,QAAN,CAAe,CAAf,KAAqB,EAAE,UAAF,EAAc;AACrC,iBAAO,CAAP,CADqC;SAAvC;AAGA,YAAI,MAAJ,EAAY;AACV,cAAI,OAAO,IAAP,CAAY,MAAZ,EAAoB,CAApB,CAAJ,CADU;SAAZ;AAGA,eAAO,iBAAiB,CAAjB,IACH,EAAE,QAAF,CAAW,EAAC,UAAU,KAAV,EAAZ,CADG,GAEH,CAFG,CAPiB;OAAZ,CAAd,CADsB;KAAxB,MAYO,IAAI,MAAJ,EAAY;AACjB,YAAM,OAAO,IAAP,CAAY,MAAZ,EAAoB,GAApB,CAAN,CADiB;KAAZ;GA1BT;;AA+BA,SAAO,OAAO,iBAAiB,GAAjB,CAAP,GACH,IAAI,QAAJ,CAAa,EAAC,UAAU,KAAV,EAAd,CADG,GAEH,GAFG,CAnC0D;CAA9B;;;;;;;;AA8CrC,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,MAAM,MAAN,CAAa,SAAb,CAAuB,IAAvB,CAA4B,IAA5B,CAAiC,IAAjC,EAAuC,GAAvC,CAAP,CADyB;CAA3B;;AAIA,SAAS,mBAAT,CAA6B,GAA7B,EAAkC,IAAlC,EAAwC;AACtC,MAAI,OAAJ,CAAY,UAAS,CAAT,EAAY,CAAZ,EAAe;AACzB,QAAI,MAAM,OAAN,CAAc,CAAd,CAAJ,EAAsB;AACpB,0BAAoB,CAApB,EAAuB,IAAvB,EADoB;KAAtB,MAEO;AACL,UAAI,CAAJ,IAAS,aAAa,IAAb,CAAkB,IAAlB,EAAwB,CAAxB,CAAT,CADK;KAFP;GADU,CAAZ,CADsC;CAAxC;;AAUA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,wBAAoB,GAApB,EAAyB,IAAzB,EADsB;AAEtB,WAAO,GAAP,CAFsB;GAAxB;;AAKA,MAAI,OAAO,IAAI,SAAJ,EAAe;AACxB,WAAO,cAAc,GAAd,EAAmB,IAAnB,CAAP,CADwB;GAA1B;;AAIA,SAAO,YAAY,SAAZ,CAAsB,YAAtB,CAAmC,IAAnC,CAAwC,IAAxC,EAA8C,GAA9C,CAAP,CAVsB;CAAxB;;AAaA,SAAS,aAAT,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC;AAChC,UAAQ,IAAI,SAAJ,CAAc,IAAd;AACN,SAAK,SAAL,CADF;AAEE,SAAK,YAAL,CAFF;AAGE,SAAK,OAAL;AACE,0BAAoB,IAAI,SAAJ,CAAc,WAAd,EAA2B,IAA/C,EADF;AAEE,YAFF;AAHF;;AAQI,YAFF;AANF,GADgC;;AAYhC,MAAI,IAAI,YAAJ,EAAkB;AACpB,QAAI,YAAJ,GAAmB,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAI,YAAJ,CAA3C,CADoB;GAAtB;;AAIA,SAAO,GAAP,CAhBgC;CAAlC;;AAmBA,SAAS,WAAT,CAAqB,GAArB,EAA0B;AACxB,MAAI,QAAQ,IAAR,CADoB;;AAGxB,MAAI,IAAI,YAAJ,EAAkB;AACpB,QAAI,YAAJ,GAAmB,aAAa,IAAb,CAAkB,KAAlB,EAAyB,IAAI,YAAJ,CAA5C,CADoB;GAAtB;;AAIA,MAAI,IAAI,IAAJ,IAAY,IAAI,QAAJ,EAAc;AAC5B,QAAI,OAAO,IAAI,IAAJ,GAAW,MAAX,GAAoB,UAApB,CADiB;AAE5B,QAAI,IAAJ,EAAU,OAAV,CAAkB,UAAS,GAAT,EAAc;AAC9B,UAAI,CAAC,MAAM,OAAN,CAAc,GAAd,CAAD,EAAqB;AACvB,YAAI,MAAM,oCACJ,8BADI,GAC6B,GAD7B,CADa;AAGvB,cAAM,IAAI,SAAJ,CAAc,GAAd,CAAN,CAHuB;OAAzB;AAKA,UAAI,OAAJ,CAAY,UAAS,CAAT,EAAY,CAAZ,EAAe;AACzB,YAAI,CAAJ,IAAS,aAAa,IAAb,CAAkB,IAAlB,EAAwB,CAAxB,CAAT,CADyB;OAAf,CAAZ,CAN8B;KAAd,CAAlB,CAF4B;GAA9B,MAYO,IAAI,IAAI,OAAJ,IAAe,IAAI,aAAJ,EAAmB;AAC3C,WAAO,IAAI,OAAJ,GAAc,SAAd,GAA0B,eAA1B,CADoC;AAE3C,QAAI,IAAJ,EAAU,OAAV,CAAkB,UAAS,IAAT,EAAe,CAAf,EAAkB;AAClC,UAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACvB,aAAK,OAAL,CAAa,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC1B,eAAK,CAAL,IAAU,aAAa,IAAb,CAAkB,IAAlB,EAAwB,CAAxB,CAAV,CAD0B;SAAf,CAAb,CADuB;OAAzB,MAIO;AACL,YAAI,IAAJ,EAAU,CAAV,IAAe,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAAf,CADK;OAJP;KADgB,CAAlB,CAF2C;GAAtC,MAWA,IAAI,IAAI,SAAJ,EAAe;AACxB,kBAAc,GAAd,EAAmB,IAAnB,EADwB;GAAnB;;AAIP,SAAO,GAAP,CAlCwB;CAA1B;;AAqCA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,MAAI,CAAC,MAAM,OAAN,CAAc,GAAd,CAAD,EAAqB;AACvB,UAAM,CAAC,GAAD,CAAN,CADuB;GAAzB;;AAIA,QAAM,IAAI,GAAJ,CAAQ,UAAS,CAAT,EAAY;AACxB,QAAI,MAAM,QAAN,CAAe,CAAf,CAAJ,EAAuB;AACrB,UAAI,IAAI,EAAJ,CADiB;AAErB,QAAE,KAAK,IAAL,CAAF,GAAe,CAAf,CAFqB;AAGrB,aAAO,KAAK,KAAK,iBAAL,CAAuB,MAAvB,EAA+B,CAApC,EAAuC,KAAK,IAAL,CAA9C,CAHqB;KAAvB;AAKA,WAAO,CAAP,CANwB;GAAZ,EAOX,IAPG,CAAN,CALqB;;AAcrB,SAAO,KAAK,YAAL,CAAkB,GAAlB,CAAP,CAdqB;CAAvB;;AAiBA,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,MAAI,OAAO,OAAO,IAAP,CAAY,GAAZ,CAAP,CADuB;AAE3B,MAAI,UAAU,KAAK,MAAL,CAFa;AAG3B,MAAI,GAAJ,CAH2B;AAI3B,MAAI,KAAJ,CAJ2B;AAK3B,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAJ,EAAa,EAAE,CAAF,EAAK;AAChC,UAAM,KAAK,CAAL,CAAN,CADgC;AAEhC,YAAQ,IAAI,GAAJ,CAAR,CAFgC;AAGhC,QAAI,IAAI,OAAJ,CAAY,GAAZ,MAAqB,CAArB,IAA0B,KAA1B,EAAiC;AACnC,UAAI,GAAJ,IAAW,KAAK,YAAL,CAAkB,GAAlB,EAAuB,KAAvB,CAAX,CADmC;KAArC;GAHF;;AAQA,SAAO,KAAK,KAAK,iBAAL,CAAuB,MAAvB,EAA+B,GAApC,CAAP,CAb2B;CAA7B;;AAgBA,SAAS,kBAAT,CAA4B,GAA5B,EAAiC;AAC/B,MAAI,MAAM,IAAI,SAAJ,CADqB;AAE/B,MAAI,CAAC,GAAD,EAAM;AACR,WADQ;GAAV;;AAIA,gBAAc,GAAd,EAAmB,IAAnB,EAN+B;AAO/B,SAAO,GAAP,CAP+B;CAAjC;;AAUA,IAAI,SAAS,YAAY,SAAZ,CAAsB,oBAAtB,GAA6C,EAA7C;;AAEb,OAAO,IAAP,GAAc,QAAd;AACA,OAAO,QAAP,GAAkB,MAAlB;AACA,OAAO,UAAP,GAAoB,cAApB;AACA,OAAO,cAAP,GAAwB,kBAAxB;AACA,OAAO,GAAP,GAAa,OAAO,IAAP,GAAc,UAAS,GAAT,EAAc;AACvC,MAAI,CAAC,MAAM,OAAN,CAAc,GAAd,CAAD,EAAqB;AACvB,UAAM,IAAI,SAAJ,CAAc,oCAAd,CAAN,CADuB;GAAzB;;AAIA,MAAI,MAAM,EAAN,CALmC;AAMvC,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAI,MAAJ,EAAY,EAAE,CAAF,EAAK;AACnC,QAAI,IAAJ,CAAS,KAAK,KAAK,iBAAL,CAAuB,MAAvB,EAA+B,IAAI,CAAJ,CAApC,CAAT,EADmC;GAArC;;AAIA,SAAO,GAAP,CAVuC;CAAd;;AAa3B,OAAO,KAAP,GACA,OAAO,WAAP,GAAqB,SAArB;;AAEA,OAAO,OAAP,GACA,OAAO,UAAP,GAAoB,WAApB;;AAEA,OAAO,KAAP,GACA,OAAO,YAAP,GAAsB,YAAtB;;AAEA,OAAO,GAAP,GACA,OAAO,GAAP,GACA,OAAO,IAAP,GACA,OAAO,GAAP,GACA,OAAO,GAAP,GACA,OAAO,IAAP,GACA,OAAO,GAAP,GACA,OAAO,IAAP,GACA,OAAO,MAAP,GAAgB,YAAY,SAAZ,CAAsB,YAAtB;;;;;;AAMhB,OAAO,OAAP,GAAiB,WAAjB","file":"array-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    Types = {\n      Boolean: require('./boolean'),\n      Date: require('./date'),\n      Number: require('./number'),\n      String: require('./string'),\n      ObjectId: require('./objectid'),\n      Buffer: require('./buffer')\n    },\n    MongooseArray = require('../types').Array,\n    EmbeddedDoc = require('../types').Embedded,\n    Mixed = require('./mixed'),\n    cast = require('../cast'),\n    utils = require('../utils'),\n    isMongooseObject = utils.isMongooseObject;\n\n/**\n * Array SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaArray(key, cast, options) {\n  if (cast) {\n    var castOptions = {};\n\n    if (utils.getFunctionName(cast.constructor) === 'Object') {\n      if (cast.type) {\n        // support { type: Woot }\n        castOptions = utils.clone(cast); // do not alter user arguments\n        delete castOptions.type;\n        cast = cast.type;\n      } else {\n        cast = Mixed;\n      }\n    }\n\n    // support { type: 'String' }\n    var name = typeof cast === 'string'\n        ? cast\n        : utils.getFunctionName(cast);\n\n    var caster = name in Types\n        ? Types[name]\n        : cast;\n\n    this.casterConstructor = caster;\n    this.caster = new caster(null, castOptions);\n    if (!(this.caster instanceof EmbeddedDoc)) {\n      this.caster.path = key;\n    }\n  }\n\n  SchemaType.call(this, key, options, 'Array');\n\n  var _this = this,\n      defaultArr,\n      fn;\n\n  if (this.defaultValue) {\n    defaultArr = this.defaultValue;\n    fn = typeof defaultArr === 'function';\n  }\n\n  this.default(function() {\n    var arr = fn ? defaultArr() : defaultArr || [];\n    return new MongooseArray(arr, _this.path, this);\n  });\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaArray.schemaName = 'Array';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaArray.prototype = Object.create(SchemaType.prototype);\nSchemaArray.prototype.constructor = SchemaArray;\n\n/**\n * Check if the given value satisfies a required validator. The given value\n * must be not null nor undefined, and have a non-zero length.\n *\n * @param {Any} value\n * @return {Boolean}\n * @api public\n */\n\nSchemaArray.prototype.checkRequired = function(value) {\n  return !!(value && value.length);\n};\n\n/**\n * Overrides the getters application for the population special-case\n *\n * @param {Object} value\n * @param {Object} scope\n * @api private\n */\n\nSchemaArray.prototype.applyGetters = function(value, scope) {\n  if (this.caster.options && this.caster.options.ref) {\n    // means the object id was populated\n    return value;\n  }\n\n  return SchemaType.prototype.applyGetters.call(this, value, scope);\n};\n\n/**\n * Casts values for set().\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nSchemaArray.prototype.cast = function(value, doc, init) {\n  if (Array.isArray(value)) {\n    if (!value.length && doc) {\n      var indexes = doc.schema.indexedPaths();\n\n      for (var i = 0, l = indexes.length; i < l; ++i) {\n        var pathIndex = indexes[i][0][this.path];\n        if (pathIndex === '2dsphere' || pathIndex === '2d') {\n          return;\n        }\n      }\n    }\n\n    if (!(value && value.isMongooseArray)) {\n      value = new MongooseArray(value, this.path, doc);\n    }\n\n    if (this.caster) {\n      try {\n        for (i = 0, l = value.length; i < l; i++) {\n          value[i] = this.caster.cast(value[i], doc, init);\n        }\n      } catch (e) {\n        // rethrow\n        throw new CastError(e.type, value, this.path, e);\n      }\n    }\n\n    return value;\n  }\n  // gh-2442: if we're loading this from the db and its not an array, mark\n  // the whole array as modified.\n  if (!!doc && !!init) {\n    doc.markModified(this.path);\n  }\n  return this.cast([value], doc, init);\n};\n\n/**\n * Casts values for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaArray.prototype.castForQuery = function($conditional, value) {\n  var handler,\n      val;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Array.');\n    }\n\n    val = handler.call(this, value);\n  } else {\n    val = $conditional;\n    var proto = this.casterConstructor.prototype;\n    var method = proto.castForQuery || proto.cast;\n    var caster = this.caster;\n\n    if (Array.isArray(val)) {\n      val = val.map(function(v) {\n        if (utils.isObject(v) && v.$elemMatch) {\n          return v;\n        }\n        if (method) {\n          v = method.call(caster, v);\n        }\n        return isMongooseObject(v) ?\n            v.toObject({virtuals: false}) :\n            v;\n      });\n    } else if (method) {\n      val = method.call(caster, val);\n    }\n  }\n\n  return val && isMongooseObject(val) ?\n      val.toObject({virtuals: false}) :\n      val;\n};\n\n/*!\n * @ignore\n *\n * $atomic cast helpers\n */\n\nfunction castToNumber(val) {\n  return Types.Number.prototype.cast.call(this, val);\n}\n\nfunction castArraysOfNumbers(arr, self) {\n  arr.forEach(function(v, i) {\n    if (Array.isArray(v)) {\n      castArraysOfNumbers(v, self);\n    } else {\n      arr[i] = castToNumber.call(self, v);\n    }\n  });\n}\n\nfunction cast$near(val) {\n  if (Array.isArray(val)) {\n    castArraysOfNumbers(val, this);\n    return val;\n  }\n\n  if (val && val.$geometry) {\n    return cast$geometry(val, this);\n  }\n\n  return SchemaArray.prototype.castForQuery.call(this, val);\n}\n\nfunction cast$geometry(val, self) {\n  switch (val.$geometry.type) {\n    case 'Polygon':\n    case 'LineString':\n    case 'Point':\n      castArraysOfNumbers(val.$geometry.coordinates, self);\n      break;\n    default:\n      // ignore unknowns\n      break;\n  }\n\n  if (val.$maxDistance) {\n    val.$maxDistance = castToNumber.call(self, val.$maxDistance);\n  }\n\n  return val;\n}\n\nfunction cast$within(val) {\n  var _this = this;\n\n  if (val.$maxDistance) {\n    val.$maxDistance = castToNumber.call(_this, val.$maxDistance);\n  }\n\n  if (val.$box || val.$polygon) {\n    var type = val.$box ? '$box' : '$polygon';\n    val[type].forEach(function(arr) {\n      if (!Array.isArray(arr)) {\n        var msg = 'Invalid $within $box argument. '\n            + 'Expected an array, received ' + arr;\n        throw new TypeError(msg);\n      }\n      arr.forEach(function(v, i) {\n        arr[i] = castToNumber.call(this, v);\n      });\n    });\n  } else if (val.$center || val.$centerSphere) {\n    type = val.$center ? '$center' : '$centerSphere';\n    val[type].forEach(function(item, i) {\n      if (Array.isArray(item)) {\n        item.forEach(function(v, j) {\n          item[j] = castToNumber.call(this, v);\n        });\n      } else {\n        val[type][i] = castToNumber.call(this, item);\n      }\n    });\n  } else if (val.$geometry) {\n    cast$geometry(val, this);\n  }\n\n  return val;\n}\n\nfunction cast$all(val) {\n  if (!Array.isArray(val)) {\n    val = [val];\n  }\n\n  val = val.map(function(v) {\n    if (utils.isObject(v)) {\n      var o = {};\n      o[this.path] = v;\n      return cast(this.casterConstructor.schema, o)[this.path];\n    }\n    return v;\n  }, this);\n\n  return this.castForQuery(val);\n}\n\nfunction cast$elemMatch(val) {\n  var keys = Object.keys(val);\n  var numKeys = keys.length;\n  var key;\n  var value;\n  for (var i = 0; i < numKeys; ++i) {\n    key = keys[i];\n    value = val[key];\n    if (key.indexOf('$') === 0 && value) {\n      val[key] = this.castForQuery(key, value);\n    }\n  }\n\n  return cast(this.casterConstructor.schema, val);\n}\n\nfunction cast$geoIntersects(val) {\n  var geo = val.$geometry;\n  if (!geo) {\n    return;\n  }\n\n  cast$geometry(val, this);\n  return val;\n}\n\nvar handle = SchemaArray.prototype.$conditionalHandlers = {};\n\nhandle.$all = cast$all;\nhandle.$options = String;\nhandle.$elemMatch = cast$elemMatch;\nhandle.$geoIntersects = cast$geoIntersects;\nhandle.$or = handle.$and = function(val) {\n  if (!Array.isArray(val)) {\n    throw new TypeError('conditional $or/$and require array');\n  }\n\n  var ret = [];\n  for (var i = 0; i < val.length; ++i) {\n    ret.push(cast(this.casterConstructor.schema, val[i]));\n  }\n\n  return ret;\n};\n\nhandle.$near =\nhandle.$nearSphere = cast$near;\n\nhandle.$within =\nhandle.$geoWithin = cast$within;\n\nhandle.$size =\nhandle.$maxDistance = castToNumber;\n\nhandle.$eq =\nhandle.$gt =\nhandle.$gte =\nhandle.$in =\nhandle.$lt =\nhandle.$lte =\nhandle.$ne =\nhandle.$nin =\nhandle.$regex = SchemaArray.prototype.castForQuery;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaArray;\n"]}