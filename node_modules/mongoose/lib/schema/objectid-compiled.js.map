{"version":3,"sources":["objectid.js"],"names":[],"mappings":"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","file":"objectid-compiled.js","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    oid = require('../types/objectid'),\n    utils = require('../utils'),\n    Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return value instanceof oid;\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n    if (!doc.$__.populated ||\n        !doc.$__.populated[path] ||\n        !doc.$__.populated[path].options ||\n        !doc.$__.populated[path].options.options ||\n        !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  if (value instanceof oid) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      try {\n        return oid.createFromHexString(value._id.toString());\n      } catch (e) {\n      }\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return oid.createFromHexString(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');\n    }\n    return handler.call(this, val);\n  }\n  return this.cast($conditional);\n};\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\nfunction resetId(v) {\n  this.$__._id = null;\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"]}