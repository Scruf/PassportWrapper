{"version":3,"sources":["bitwise.js"],"names":[],"mappings":";;;;AAIA,IAAI,YAAY,QAAQ,kBAAR,CAAZ;;;;;;AAMJ,SAAS,qBAAT,CAA+B,GAA/B,EAAoC;AAClC,MAAI,QAAQ,IAAR,CAD8B;AAElC,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,WAAO,IAAI,GAAJ,CAAQ,UAAS,CAAT,EAAY;AACzB,aAAO,YAAY,MAAM,IAAN,EAAY,CAAxB,CAAP,CADyB;KAAZ,CAAf,CADsB;GAAxB,MAIO,IAAI,OAAO,QAAP,CAAgB,GAAhB,CAAJ,EAA0B;AAC/B,WAAO,GAAP,CAD+B;GAA1B;;AAN2B,SAU3B,YAAY,MAAM,IAAN,EAAY,GAAxB,CAAP,CAVkC;CAApC;;;;;;AAiBA,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC;AAC9B,MAAI,IAAI,OAAO,GAAP,CAAJ,CAD0B;AAE9B,MAAI,MAAM,CAAN,CAAJ,EAAc;AACZ,UAAM,IAAI,SAAJ,CAAc,QAAd,EAAwB,GAAxB,EAA6B,IAA7B,CAAN,CADY;GAAd;AAGA,SAAO,CAAP,CAL8B;CAAhC;;AAQA,OAAO,OAAP,GAAiB,qBAAjB","file":"bitwise-compiled.js","sourcesContent":["/*!\n * Module requirements.\n */\n\nvar CastError = require('../../error/cast');\n\n/*!\n * ignore\n */\n\nfunction handleBitwiseOperator(val) {\n  var _this = this;\n  if (Array.isArray(val)) {\n    return val.map(function(v) {\n      return _castNumber(_this.path, v);\n    });\n  } else if (Buffer.isBuffer(val)) {\n    return val;\n  }\n  // Assume trying to cast to number\n  return _castNumber(_this.path, val);\n}\n\n/*!\n * ignore\n */\n\nfunction _castNumber(path, num) {\n  var v = Number(num);\n  if (isNaN(v)) {\n    throw new CastError('number', num, path);\n  }\n  return v;\n}\n\nmodule.exports = handleBitwiseOperator;\n"]}