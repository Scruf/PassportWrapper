{"version":3,"sources":["buffer.js"],"names":[],"mappings":";;;;AAIA,IAAI,wBAAwB,QAAQ,qBAAR,CAAxB;AACJ,IAAI,QAAQ,QAAQ,UAAR,CAAR;;AAEJ,IAAI,iBAAiB,QAAQ,UAAR,EAAoB,MAApB;AACrB,IAAI,aAAa,QAAQ,eAAR,CAAb;;AAEJ,IAAI,SAAS,eAAe,MAAf;AACb,IAAI,YAAY,WAAW,SAAX;AAChB,IAAI,QAAJ;;;;;;;;;;;AAWA,SAAS,YAAT,CAAsB,GAAtB,EAA2B,OAA3B,EAAoC;AAClC,aAAW,IAAX,CAAgB,IAAhB,EAAsB,GAAtB,EAA2B,OAA3B,EAAoC,QAApC,EADkC;CAApC;;;;;;;;AAUA,aAAa,UAAb,GAA0B,QAA1B;;;;;AAKA,aAAa,SAAb,GAAyB,OAAO,MAAP,CAAc,WAAW,SAAX,CAAvC;AACA,aAAa,SAAb,CAAuB,WAAvB,GAAqC,YAArC;;;;;;;;;;;;;AAaA,aAAa,SAAb,CAAuB,aAAvB,GAAuC,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AAC1D,MAAI,WAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,IAApC,CAAJ,EAA+C;AAC7C,WAAO,CAAC,CAAC,KAAD,CADqC;GAA/C;AAGA,SAAO,CAAC,EAAE,SAAS,MAAM,MAAN,CAAX,CAJkD;CAArB;;;;;;;;;;;AAgBvC,aAAa,SAAb,CAAuB,IAAvB,GAA8B,UAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB,EAA2B;AACvD,MAAI,GAAJ,CADuD;AAEvD,MAAI,WAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,IAApC,CAAJ,EAA+C;;;AAG7C,QAAI,UAAU,IAAV,IAAkB,UAAU,SAAV,EAAqB;AACzC,aAAO,KAAP,CADyC;KAA3C;;;AAH6C,YAQ7C,KAAa,WAAW,QAAQ,eAAR,CAAX,CAAb,CAR6C;;AAU7C,QAAI,iBAAiB,QAAjB,EAA2B;AAC7B,YAAM,GAAN,CAAU,YAAV,GAAyB,IAAzB,CAD6B;AAE7B,aAAO,KAAP,CAF6B;KAA/B;;;AAV6C,QAgBzC,OAAO,QAAP,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,aAAO,KAAP,CAD0B;KAA5B,MAEO,IAAI,CAAC,MAAM,QAAN,CAAe,KAAf,CAAD,EAAwB;AACjC,YAAM,IAAI,SAAJ,CAAc,QAAd,EAAwB,KAAxB,EAA+B,KAAK,IAAL,CAArC,CADiC;KAA5B;;;;;AAlBsC,QAyBzC,OAAO,IAAI,WAAJ,CAAgB,KAAK,IAAL,CAAvB,CAzByC;AA0B7C,QAAI,QAAQ,IAAI,aAAJ,GAAoB,IAAI,aAAJ,EAApB,GAA0C,GAA1C,CA1BiC;AA2B7C,QAAI,MAAM,MAAM,SAAN,CAAgB,IAAhB,EAAsB,IAAtB,CAAN,CA3ByC;AA4B7C,UAAM,IAAI,IAAI,OAAJ,CAAY,KAAZ,CAAkB,KAAtB,CAAN,CA5B6C;AA6B7C,QAAI,GAAJ,CAAQ,YAAR,GAAuB,IAAvB,CA7B6C;AA8B7C,WAAO,GAAP,CA9B6C;GAA/C;;;AAFuD,MAoCnD,SAAS,MAAM,GAAN,EAAW;AACtB,YAAQ,MAAM,GAAN,CADc;GAAxB;;AAIA,MAAI,SAAS,MAAM,gBAAN,EAAwB;AACnC,WAAO,KAAP,CADmC;GAArC;;AAIA,MAAI,OAAO,QAAP,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,QAAI,CAAC,KAAD,IAAU,CAAC,MAAM,gBAAN,EAAwB;AACrC,cAAQ,IAAI,cAAJ,CAAmB,KAAnB,EAA0B,CAAC,KAAK,IAAL,EAAW,GAAZ,CAA1B,CAAR,CADqC;KAAvC;;AAIA,WAAO,KAAP,CAL0B;GAA5B,MAMO,IAAI,iBAAiB,MAAjB,EAAyB;AAClC,UAAM,IAAI,cAAJ,CAAmB,MAAM,KAAN,CAAY,IAAZ,CAAnB,EAAsC,CAAC,KAAK,IAAL,EAAW,GAAZ,CAAtC,CAAN,CADkC;AAElC,QAAI,OAAO,MAAM,QAAN,KAAmB,QAA1B,EAAoC;AACtC,YAAM,IAAI,SAAJ,CAAc,QAAd,EAAwB,KAAxB,EAA+B,KAAK,IAAL,CAArC,CADsC;KAAxC;AAGA,QAAI,QAAJ,GAAe,MAAM,QAAN,CALmB;AAMlC,WAAO,GAAP,CANkC;GAA7B;;AASP,MAAI,UAAU,IAAV,EAAgB;AAClB,WAAO,KAAP,CADkB;GAApB;;AAIA,MAAI,OAAO,OAAO,KAAP,CA/D4C;AAgEvD,MAAI,SAAS,QAAT,IAAqB,SAAS,QAAT,IAAqB,MAAM,OAAN,CAAc,KAAd,CAA1C,EAAgE;AAClE,QAAI,SAAS,QAAT,EAAmB;AACrB,cAAQ,CAAC,KAAD,CAAR,CADqB;KAAvB;AAGA,UAAM,IAAI,cAAJ,CAAmB,KAAnB,EAA0B,CAAC,KAAK,IAAL,EAAW,GAAZ,CAA1B,CAAN,CAJkE;AAKlE,WAAO,GAAP,CALkE;GAApE;;AAQA,QAAM,IAAI,SAAJ,CAAc,QAAd,EAAwB,KAAxB,EAA+B,KAAK,IAAL,CAArC,CAxEuD;CAA3B;;;;;AA8E9B,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,KAAK,YAAL,CAAkB,GAAlB,CAAP,CADyB;CAA3B;;AAIA,aAAa,SAAb,CAAuB,oBAAvB,GACI,MAAM,OAAN,CAAc,WAAW,SAAX,CAAqB,oBAArB,EAA2C;AACvD,iBAAe,qBAAf;AACA,iBAAe,qBAAf;AACA,eAAa,qBAAb;AACA,eAAa,qBAAb;AACA,OAAK,YAAL;AACA,QAAM,YAAN;AACA,OAAK,YAAL;AACA,QAAM,YAAN;CARF,CADJ;;;;;;;;;;AAoBA,aAAa,SAAb,CAAuB,YAAvB,GAAsC,UAAS,YAAT,EAAuB,GAAvB,EAA4B;AAChE,MAAI,OAAJ,CADgE;AAEhE,MAAI,UAAU,MAAV,KAAqB,CAArB,EAAwB;AAC1B,cAAU,KAAK,oBAAL,CAA0B,YAA1B,CAAV,CAD0B;AAE1B,QAAI,CAAC,OAAD,EAAU;AACZ,YAAM,IAAI,KAAJ,CAAU,gBAAgB,YAAhB,GAA+B,eAA/B,CAAhB,CADY;KAAd;AAGA,WAAO,QAAQ,IAAR,CAAa,IAAb,EAAmB,GAAnB,CAAP,CAL0B;GAA5B;AAOA,QAAM,YAAN,CATgE;AAUhE,SAAO,KAAK,IAAL,CAAU,GAAV,EAAe,QAAf,EAAP,CAVgE;CAA5B;;;;;;AAiBtC,OAAO,OAAP,GAAiB,YAAjB","file":"buffer-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar handleBitwiseOperator = require('./operators/bitwise');\nvar utils = require('../utils');\n\nvar MongooseBuffer = require('../types').Buffer;\nvar SchemaType = require('../schematype');\n\nvar Binary = MongooseBuffer.Binary;\nvar CastError = SchemaType.CastError;\nvar Document;\n\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBuffer.schemaName = 'Buffer';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBuffer.prototype = Object.create(SchemaType.prototype);\nSchemaBuffer.prototype.constructor = SchemaBuffer;\n\n/**\n * Check if the given value satisfies a required validator. To satisfy a\n * required validator, a buffer must not be null or undefined and have\n * non-zero length.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaBuffer.prototype.checkRequired = function(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return !!(value && value.length);\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaBuffer.prototype.cast = function(value, doc, init) {\n  var ret;\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (Buffer.isBuffer(value)) {\n      return value;\n    } else if (!utils.isObject(value)) {\n      throw new CastError('buffer', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n    }\n\n    return value;\n  } else if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('buffer', value, this.path);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (value === null) {\n    return value;\n  }\n\n  var type = typeof value;\n  if (type === 'string' || type === 'number' || Array.isArray(value)) {\n    if (type === 'number') {\n      value = [value];\n    }\n    ret = new MongooseBuffer(value, [this.path, doc]);\n    return ret;\n  }\n\n  throw new CastError('buffer', value, this.path);\n};\n\n/*!\n * ignore\n */\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\n\nSchemaBuffer.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');\n    }\n    return handler.call(this, val);\n  }\n  val = $conditional;\n  return this.cast(val).toObject();\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBuffer;\n"]}