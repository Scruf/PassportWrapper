{"version":3,"sources":["number.js"],"names":[],"mappings":"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","file":"number-compiled.js","sourcesContent":["/*!\n * Module requirements.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar handleBitwiseOperator = require('./operators/bitwise');\nvar errorMessages = require('../error').messages;\nvar utils = require('../utils');\nvar Document;\n\n/**\n * Number SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaNumber(key, options) {\n  SchemaType.call(this, key, options, 'Number');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaNumber.schemaName = 'Number';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaNumber.prototype = Object.create(SchemaType.prototype);\nSchemaNumber.prototype.constructor = SchemaNumber;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return typeof value === 'number' || value instanceof Number;\n};\n\n/**\n * Sets a minimum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, min: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 9 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     var schema = new Schema({ n: { type: Number, min: min })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10).\n *     })\n *\n * @param {Number} value minimum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.minValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    var msg = message || errorMessages.Number.min;\n    msg = msg.replace(/{MIN}/, value);\n    this.validators.push({\n      validator: this.minValidator = function(v) {\n        return v == null || v >= value;\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, max: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 11 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     var schema = new Schema({ n: { type: Number, max: max })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10).\n *     })\n *\n * @param {Number} maximum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator !== this.maxValidator;\n    }, this);\n  }\n\n  if (value !== null && value !== undefined) {\n    var msg = message || errorMessages.Number.max;\n    msg = msg.replace(/{MAX}/, value);\n    this.validators.push({\n      validator: this.maxValidator = function(v) {\n        return v == null || v <= value;\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to number\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaNumber.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (typeof value === 'number') {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('number', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  var val = value && value._id\n      ? value._id // documents\n      : value;\n\n  if (!isNaN(val)) {\n    if (val === null) {\n      return val;\n    }\n    if (val === '') {\n      return null;\n    }\n    if (typeof val === 'string' || typeof val === 'boolean') {\n      val = Number(val);\n    }\n    if (val instanceof Number) {\n      return val;\n    }\n    if (typeof val === 'number') {\n      return val;\n    }\n    if (val.toString && !Array.isArray(val) && val.toString() == Number(val)) {\n      return new Number(val);\n    }\n  }\n\n  throw new CastError('number', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nfunction handleArray(val) {\n  var _this = this;\n  if (!Array.isArray(val)) {\n    return [this.cast(val)];\n  }\n  return val.map(function(m) {\n    return _this.cast(m);\n  });\n}\n\nSchemaNumber.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $bitsAllClear: handleBitwiseOperator,\n      $bitsAnyClear: handleBitwiseOperator,\n      $bitsAllSet: handleBitwiseOperator,\n      $bitsAnySet: handleBitwiseOperator,\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle,\n      $mod: handleArray\n    });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaNumber.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Number.');\n    }\n    return handler.call(this, val);\n  }\n  val = this.cast($conditional);\n  return val;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaNumber;\n"]}