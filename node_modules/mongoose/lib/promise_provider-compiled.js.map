{"version":3,"sources":["promise_provider.js"],"names":[],"mappings":";;;;AAIA,IAAI,WAAW,QAAQ,WAAR,CAAX;;;;;;;;AAQJ,IAAI,UAAU;AACZ,YAAU,QAAV;CADE;;;;;;;AASJ,QAAQ,GAAR,GAAc,YAAW;AACvB,SAAO,QAAQ,QAAR,CADgB;CAAX;;;;;;;;AAUd,QAAQ,GAAR,GAAc,UAAS,GAAT,EAAc;AAC1B,MAAI,QAAQ,QAAR,EAAkB;AACpB,WAAO,QAAQ,KAAR,EAAP,CADoB;GAAtB;AAGA,UAAQ,QAAR,GAAmB,QAAQ,cAAR,CAAnB,CAJ0B;AAK1B,UAAQ,QAAR,CAAiB,GAAjB,CAAqB,GAArB,EAL0B;AAM1B,UAAQ,QAAR,EAAkB,OAAlB,GAA4B,QAAQ,QAAR,CAAiB,GAAjB,CANF;CAAd;;;;;;;;AAed,QAAQ,KAAR,GAAgB,YAAW;AACzB,UAAQ,QAAR,GAAmB,QAAnB,CADyB;CAAX;;AAIhB,OAAO,OAAP,GAAiB,OAAjB","file":"promise_provider-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MPromise = require('./promise');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nvar Promise = {\n  _promise: MPromise\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\nPromise.get = function() {\n  return Promise._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nPromise.set = function(lib) {\n  if (lib === MPromise) {\n    return Promise.reset();\n  }\n  Promise._promise = require('./ES6Promise');\n  Promise._promise.use(lib);\n  require('mquery').Promise = Promise._promise.ES6;\n};\n\n/**\n * Resets to using mpromise\n *\n * @api private\n */\n\nPromise.reset = function() {\n  Promise._promise = MPromise;\n};\n\nmodule.exports = Promise;\n"]}