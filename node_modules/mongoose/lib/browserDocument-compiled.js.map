{"version":3,"sources":["browserDocument.js"],"names":[],"mappings":"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","file":"browserDocument-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar NodeJSDocument = require('./document'),\n    EventEmitter = require('events').EventEmitter,\n    MongooseError = require('./error'),\n    Schema = require('./schema'),\n    ObjectId = require('./types/objectid'),\n    utils = require('./utils'),\n    ValidationError = MongooseError.ValidationError,\n    InternalCache = require('./internal');\n\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document(obj, schema, fields, skipId, skipInit) {\n  if (!(this instanceof Document)) {\n    return new Document(obj, schema, fields, skipId, skipInit);\n  }\n\n\n  if (utils.isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  }\n\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n  schema = this.schema || schema;\n\n  // Generate ObjectId if it is missing, but it requires a scheme\n  if (!this.schema && schema.options._id) {\n    obj = obj || {};\n\n    if (obj._id === undefined) {\n      obj._id = new ObjectId();\n    }\n  }\n\n  if (!schema) {\n    throw new MongooseError.MissingSchemaError();\n  }\n\n  this.$__setSchema(schema);\n\n  this.$__ = new InternalCache;\n  this.$__.emitter = new EventEmitter();\n  this.isNew = true;\n  this.errors = undefined;\n\n  // var schema = this.schema;\n\n  if (typeof fields === 'boolean') {\n    this.$__.strictMode = fields;\n    fields = undefined;\n  } else {\n    this.$__.strictMode = this.schema.options && this.schema.options.strict;\n    this.$__.selected = fields;\n  }\n\n  var required = this.schema.requiredPaths();\n  for (var i = 0; i < required.length; ++i) {\n    this.$__.activePaths.require(required[i]);\n  }\n\n  this.$__.emitter.setMaxListeners(0);\n  this._doc = this.$__buildDoc(obj, fields, skipId);\n\n  if (!skipInit && obj) {\n    this.init(obj);\n  }\n\n  this.$__registerHooksFromSchema();\n\n  // apply methods\n  for (var m in schema.methods) {\n    this[m] = schema.methods[m];\n  }\n  // apply statics\n  for (var s in schema.statics) {\n    this[s] = schema.statics[s];\n  }\n}\n\n/*!\n * Inherit from the NodeJS document\n */\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n\n/*!\n * Module exports.\n */\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n"]}